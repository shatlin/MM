// <auto-generated />
using System;
using MM.ClientModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MM.Migrations.ClientDb
{
    [DbContext(typeof(ClientDbContext))]
    partial class ClientDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MM.ClientModels.AccountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("AccountType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 193, DateTimeKind.Local).AddTicks(5693),
                            Description = "Savings Account",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 195, DateTimeKind.Local).AddTicks(160),
                            Name = "Savings Account"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 195, DateTimeKind.Local).AddTicks(1204),
                            Description = "Cheque Account",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 195, DateTimeKind.Local).AddTicks(1228),
                            Name = "Cheque Account"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 195, DateTimeKind.Local).AddTicks(1248),
                            Description = "Corporate Account",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 195, DateTimeKind.Local).AddTicks(1250),
                            Name = "Corporate Account"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 195, DateTimeKind.Local).AddTicks(1253),
                            Description = "Business Account",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 195, DateTimeKind.Local).AddTicks(1255),
                            Name = "Business Account"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("AddressLine2")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("AddressTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BuidlingName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("ComplexName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Gpscoordinates")
                        .HasColumnName("GPSCoordinates")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("PostalCode")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("PrimaryContactNo")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("PrimaryEmail")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("SecondaryContactNo")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("SecondaryEmail")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("StreetName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressTypeId");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("StateId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("MM.ClientModels.AddressType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("AddressType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 216, DateTimeKind.Local).AddTicks(6454),
                            Description = "Postal Address",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 216, DateTimeKind.Local).AddTicks(6496),
                            Name = "Postal Address"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 216, DateTimeKind.Local).AddTicks(6502),
                            Description = "Physical Account",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 216, DateTimeKind.Local).AddTicks(6504),
                            Name = "Physical Address"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 216, DateTimeKind.Local).AddTicks(6507),
                            Description = "Billing Address",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 216, DateTimeKind.Local).AddTicks(6509),
                            Name = "Billing Address"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 216, DateTimeKind.Local).AddTicks(6513),
                            Description = "Business Address",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 216, DateTimeKind.Local).AddTicks(6515),
                            Name = "Business Address"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 216, DateTimeKind.Local).AddTicks(6518),
                            Description = "Shipping Address",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 216, DateTimeKind.Local).AddTicks(6521),
                            Name = "Shipping Address"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 216, DateTimeKind.Local).AddTicks(6525),
                            Description = "Contract Address",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 216, DateTimeKind.Local).AddTicks(6528),
                            Name = "Contract Address"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Affliation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Affliation");
                });

            modelBuilder.Entity("MM.ClientModels.BankingDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("AccountTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("RoutingCode")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AccountTypeId");

                    b.ToTable("BankingDetail");
                });

            modelBuilder.Entity("MM.ClientModels.Billing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CommentsForPayer")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("InternalNotes")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("PaidAmount")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<DateTime?>("PaymentDueDate")
                        .HasColumnType("datetime");

                    b.Property<int>("PaymentGatewayId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentItem")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("MemberId");

                    b.HasIndex("PaymentGatewayId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("Billing");
                });

            modelBuilder.Entity("MM.ClientModels.BillingCommunication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BillingId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Reminder1ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Reminder1Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Reminder1SentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Reminder2ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Reminder2Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Reminder2SentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Reminder3ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Reminder3Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Reminder3SentDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("BillingCommunication");
                });

            modelBuilder.Entity("MM.ClientModels.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 309, DateTimeKind.Local).AddTicks(8543),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 309, DateTimeKind.Local).AddTicks(9474),
                            Name = "Adelaide",
                            StateId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(367),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(391),
                            Name = "Alfred Nzo District Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(410),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(413),
                            Name = "Alice",
                            StateId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(416),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(418),
                            Name = "Aliwal North",
                            StateId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(421),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(423),
                            Name = "Amathole District Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(427),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(428),
                            Name = "Bhisho",
                            StateId = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(432),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(434),
                            Name = "Buffalo City Metropolitan Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(437),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(439),
                            Name = "Burgersdorp",
                            StateId = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(442),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(444),
                            Name = "Butterworth",
                            StateId = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(448),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(449),
                            Name = "Cacadu District Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 11,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(453),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(454),
                            Name = "Chris Hani District Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 12,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(457),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(460),
                            Name = "Cradock",
                            StateId = 1
                        },
                        new
                        {
                            Id = 13,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(463),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(465),
                            Name = "Dordrecht",
                            StateId = 1
                        },
                        new
                        {
                            Id = 14,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(467),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(470),
                            Name = "East London",
                            StateId = 1
                        },
                        new
                        {
                            Id = 15,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(473),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(474),
                            Name = "Elliot",
                            StateId = 1
                        },
                        new
                        {
                            Id = 16,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(477),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(479),
                            Name = "Fort Beaufort",
                            StateId = 1
                        },
                        new
                        {
                            Id = 17,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(482),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(484),
                            Name = "Graaff-Reinet",
                            StateId = 1
                        },
                        new
                        {
                            Id = 18,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(487),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(489),
                            Name = "Grahamstown",
                            StateId = 1
                        },
                        new
                        {
                            Id = 19,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(492),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(494),
                            Name = "Ilinge",
                            StateId = 1
                        },
                        new
                        {
                            Id = 20,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(497),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(499),
                            Name = "Joe Gqabi District Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 21,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(502),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(504),
                            Name = "Kirkwood",
                            StateId = 1
                        },
                        new
                        {
                            Id = 22,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(507),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(508),
                            Name = "Kruisfontein",
                            StateId = 1
                        },
                        new
                        {
                            Id = 23,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(511),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(513),
                            Name = "Lady Frere",
                            StateId = 1
                        },
                        new
                        {
                            Id = 24,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(516),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(518),
                            Name = "Middelburg",
                            StateId = 1
                        },
                        new
                        {
                            Id = 25,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(521),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(523),
                            Name = "Molteno",
                            StateId = 1
                        },
                        new
                        {
                            Id = 26,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(526),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(528),
                            Name = "Mthatha",
                            StateId = 1
                        },
                        new
                        {
                            Id = 27,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(531),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(533),
                            Name = "Nelson Mandela Bay Metropolitan Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 28,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(536),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(538),
                            Name = "OR Tambo District Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 29,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(543),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(545),
                            Name = "Port Alfred",
                            StateId = 1
                        },
                        new
                        {
                            Id = 30,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(548),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(550),
                            Name = "Port Elizabeth",
                            StateId = 1
                        },
                        new
                        {
                            Id = 31,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(553),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(555),
                            Name = "Port Saint Johnâ€™s",
                            StateId = 1
                        },
                        new
                        {
                            Id = 32,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(558),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(560),
                            Name = "Queensdale",
                            StateId = 1
                        },
                        new
                        {
                            Id = 33,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(563),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(565),
                            Name = "Queenstown",
                            StateId = 1
                        },
                        new
                        {
                            Id = 34,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(568),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(570),
                            Name = "Somerset East",
                            StateId = 1
                        },
                        new
                        {
                            Id = 35,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(573),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(575),
                            Name = "Stutterheim",
                            StateId = 1
                        },
                        new
                        {
                            Id = 36,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(578),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(579),
                            Name = "Uitenhage",
                            StateId = 1
                        },
                        new
                        {
                            Id = 37,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(582),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(584),
                            Name = "Whittlesea",
                            StateId = 1
                        },
                        new
                        {
                            Id = 38,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(587),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(589),
                            Name = "Willowmore",
                            StateId = 1
                        },
                        new
                        {
                            Id = 39,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(592),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(594),
                            Name = "Allanridge",
                            StateId = 2
                        },
                        new
                        {
                            Id = 40,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(597),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(599),
                            Name = "Bethlehem",
                            StateId = 2
                        },
                        new
                        {
                            Id = 41,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(602),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(604),
                            Name = "Bloemfontein",
                            StateId = 2
                        },
                        new
                        {
                            Id = 42,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(608),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(610),
                            Name = "Bothaville",
                            StateId = 2
                        },
                        new
                        {
                            Id = 43,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(613),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(615),
                            Name = "Botshabelo",
                            StateId = 2
                        },
                        new
                        {
                            Id = 44,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(618),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(620),
                            Name = "Brandfort",
                            StateId = 2
                        },
                        new
                        {
                            Id = 45,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(623),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(625),
                            Name = "Clocolan",
                            StateId = 2
                        },
                        new
                        {
                            Id = 46,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(628),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(630),
                            Name = "Deneysville",
                            StateId = 2
                        },
                        new
                        {
                            Id = 47,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(744),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(747),
                            Name = "Fezile Dabi District Municipality",
                            StateId = 2
                        },
                        new
                        {
                            Id = 48,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(750),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(752),
                            Name = "Frankfort",
                            StateId = 2
                        },
                        new
                        {
                            Id = 49,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(755),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(757),
                            Name = "Harrismith",
                            StateId = 2
                        },
                        new
                        {
                            Id = 50,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(760),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(762),
                            Name = "Heilbron",
                            StateId = 2
                        },
                        new
                        {
                            Id = 51,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(765),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(767),
                            Name = "Hennenman",
                            StateId = 2
                        },
                        new
                        {
                            Id = 52,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(771),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(773),
                            Name = "Hoopstad",
                            StateId = 2
                        },
                        new
                        {
                            Id = 53,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(776),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(778),
                            Name = "Koppies",
                            StateId = 2
                        },
                        new
                        {
                            Id = 54,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(781),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(783),
                            Name = "Kroonstad",
                            StateId = 2
                        },
                        new
                        {
                            Id = 55,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(785),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(788),
                            Name = "Kutloanong",
                            StateId = 2
                        },
                        new
                        {
                            Id = 56,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(791),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(792),
                            Name = "Ladybrand",
                            StateId = 2
                        },
                        new
                        {
                            Id = 57,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(796),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(797),
                            Name = "Lejweleputswa District Municipality",
                            StateId = 2
                        },
                        new
                        {
                            Id = 58,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(801),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(803),
                            Name = "Lindley",
                            StateId = 2
                        },
                        new
                        {
                            Id = 59,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(806),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(807),
                            Name = "Mangaung Metropolitan Municipality",
                            StateId = 2
                        },
                        new
                        {
                            Id = 60,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(810),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(812),
                            Name = "Marquard",
                            StateId = 2
                        },
                        new
                        {
                            Id = 61,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(815),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(817),
                            Name = "Parys",
                            StateId = 2
                        },
                        new
                        {
                            Id = 62,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(820),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(822),
                            Name = "Phuthaditjhaba",
                            StateId = 2
                        },
                        new
                        {
                            Id = 63,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(825),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(827),
                            Name = "Reitz",
                            StateId = 2
                        },
                        new
                        {
                            Id = 64,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(830),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(832),
                            Name = "Sasolburg",
                            StateId = 2
                        },
                        new
                        {
                            Id = 65,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(835),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(837),
                            Name = "Senekal",
                            StateId = 2
                        },
                        new
                        {
                            Id = 66,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(840),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(842),
                            Name = "Thaba Nchu",
                            StateId = 2
                        },
                        new
                        {
                            Id = 67,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(845),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(846),
                            Name = "Thabo Mofutsanyana District Municipality",
                            StateId = 2
                        },
                        new
                        {
                            Id = 68,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(849),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(851),
                            Name = "Theunissen",
                            StateId = 2
                        },
                        new
                        {
                            Id = 69,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(854),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(856),
                            Name = "Ventersburg",
                            StateId = 2
                        },
                        new
                        {
                            Id = 70,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(859),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(861),
                            Name = "Viljoenskroon",
                            StateId = 2
                        },
                        new
                        {
                            Id = 71,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(864),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(866),
                            Name = "Villiers",
                            StateId = 2
                        },
                        new
                        {
                            Id = 72,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(869),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(871),
                            Name = "Virginia",
                            StateId = 2
                        },
                        new
                        {
                            Id = 73,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(874),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(875),
                            Name = "Vrede",
                            StateId = 2
                        },
                        new
                        {
                            Id = 74,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(879),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(881),
                            Name = "Vredefort",
                            StateId = 2
                        },
                        new
                        {
                            Id = 75,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(884),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(886),
                            Name = "Welkom",
                            StateId = 2
                        },
                        new
                        {
                            Id = 76,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(889),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(891),
                            Name = "Wesselsbron",
                            StateId = 2
                        },
                        new
                        {
                            Id = 77,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(894),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(896),
                            Name = "Winburg",
                            StateId = 2
                        },
                        new
                        {
                            Id = 78,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(899),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(901),
                            Name = "Xhariep District Municipality",
                            StateId = 2
                        },
                        new
                        {
                            Id = 79,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(904),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(906),
                            Name = "Zastron",
                            StateId = 2
                        },
                        new
                        {
                            Id = 80,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(909),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(911),
                            Name = "Alberton",
                            StateId = 3
                        },
                        new
                        {
                            Id = 81,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(914),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(916),
                            Name = "Benoni",
                            StateId = 3
                        },
                        new
                        {
                            Id = 82,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(919),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(921),
                            Name = "Boksburg",
                            StateId = 3
                        },
                        new
                        {
                            Id = 83,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(924),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(926),
                            Name = "Brakpan",
                            StateId = 3
                        },
                        new
                        {
                            Id = 84,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(929),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(930),
                            Name = "Bronkhorstspruit",
                            StateId = 3
                        },
                        new
                        {
                            Id = 85,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(933),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(935),
                            Name = "Carletonville",
                            StateId = 3
                        },
                        new
                        {
                            Id = 86,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(938),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(940),
                            Name = "Centurion",
                            StateId = 3
                        },
                        new
                        {
                            Id = 87,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(943),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(945),
                            Name = "City of Johannesburg Metropolitan Municipality",
                            StateId = 3
                        },
                        new
                        {
                            Id = 88,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(948),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(950),
                            Name = "City of Tshwane Metropolitan Municipality",
                            StateId = 3
                        },
                        new
                        {
                            Id = 89,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(953),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(954),
                            Name = "Cullinan",
                            StateId = 3
                        },
                        new
                        {
                            Id = 90,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(958),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(960),
                            Name = "Diepsloot",
                            StateId = 3
                        },
                        new
                        {
                            Id = 91,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(963),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(965),
                            Name = "Eastleigh",
                            StateId = 3
                        },
                        new
                        {
                            Id = 92,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(967),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(969),
                            Name = "Eden Glen",
                            StateId = 3
                        },
                        new
                        {
                            Id = 93,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(972),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(974),
                            Name = "Eden Glen Ext 60",
                            StateId = 3
                        },
                        new
                        {
                            Id = 94,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(987),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(988),
                            Name = "Edenvale",
                            StateId = 3
                        },
                        new
                        {
                            Id = 95,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(991),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(993),
                            Name = "Ekangala",
                            StateId = 3
                        },
                        new
                        {
                            Id = 96,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(996),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(998),
                            Name = "Ekurhuleni Metropolitan Municipality",
                            StateId = 3
                        },
                        new
                        {
                            Id = 97,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1001),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1003),
                            Name = "Heidelberg",
                            StateId = 3
                        },
                        new
                        {
                            Id = 98,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1006),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1008),
                            Name = "Johannesburg",
                            StateId = 3
                        },
                        new
                        {
                            Id = 99,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1011),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1012),
                            Name = "Krugersdorp",
                            StateId = 3
                        },
                        new
                        {
                            Id = 100,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1015),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1017),
                            Name = "Mabopane",
                            StateId = 3
                        },
                        new
                        {
                            Id = 101,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1020),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1022),
                            Name = "Midrand",
                            StateId = 3
                        },
                        new
                        {
                            Id = 102,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1025),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1027),
                            Name = "Midstream",
                            StateId = 3
                        },
                        new
                        {
                            Id = 103,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1031),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1033),
                            Name = "Modderfontein",
                            StateId = 3
                        },
                        new
                        {
                            Id = 104,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1036),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1038),
                            Name = "Muldersdriseloop",
                            StateId = 3
                        },
                        new
                        {
                            Id = 105,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1041),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1042),
                            Name = "Nigel",
                            StateId = 3
                        },
                        new
                        {
                            Id = 106,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1046),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1047),
                            Name = "Orange Farm",
                            StateId = 3
                        },
                        new
                        {
                            Id = 107,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1050),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1052),
                            Name = "Pretoria",
                            StateId = 3
                        },
                        new
                        {
                            Id = 108,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1055),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1057),
                            Name = "Randburg",
                            StateId = 3
                        },
                        new
                        {
                            Id = 109,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1061),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1063),
                            Name = "Randfontein",
                            StateId = 3
                        },
                        new
                        {
                            Id = 110,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1066),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1068),
                            Name = "Roodepoort",
                            StateId = 3
                        },
                        new
                        {
                            Id = 111,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1071),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1073),
                            Name = "Sedibeng District Municipality",
                            StateId = 3
                        },
                        new
                        {
                            Id = 112,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1075),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1077),
                            Name = "Soweto",
                            StateId = 3
                        },
                        new
                        {
                            Id = 113,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1080),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1082),
                            Name = "Springs",
                            StateId = 3
                        },
                        new
                        {
                            Id = 114,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1085),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1087),
                            Name = "Tembisa",
                            StateId = 3
                        },
                        new
                        {
                            Id = 115,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1090),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1092),
                            Name = "Vanderbijlpark",
                            StateId = 3
                        },
                        new
                        {
                            Id = 116,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1095),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1097),
                            Name = "Vereeniging",
                            StateId = 3
                        },
                        new
                        {
                            Id = 117,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1099),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1101),
                            Name = "West Rand District Municipality",
                            StateId = 3
                        },
                        new
                        {
                            Id = 118,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1104),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1106),
                            Name = "Westonaria",
                            StateId = 3
                        },
                        new
                        {
                            Id = 119,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1109),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1111),
                            Name = "Amajuba District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 120,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1114),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1115),
                            Name = "Ballito",
                            StateId = 4
                        },
                        new
                        {
                            Id = 121,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1118),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1120),
                            Name = "Berea",
                            StateId = 4
                        },
                        new
                        {
                            Id = 122,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1124),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1125),
                            Name = "Dundee",
                            StateId = 4
                        },
                        new
                        {
                            Id = 123,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1128),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1130),
                            Name = "Durban",
                            StateId = 4
                        },
                        new
                        {
                            Id = 124,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1133),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1135),
                            Name = "Ekuvukeni",
                            StateId = 4
                        },
                        new
                        {
                            Id = 125,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1138),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1140),
                            Name = "eMkhomazi",
                            StateId = 4
                        },
                        new
                        {
                            Id = 126,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1143),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1144),
                            Name = "Empangeni",
                            StateId = 4
                        },
                        new
                        {
                            Id = 127,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1147),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1149),
                            Name = "Eshowe",
                            StateId = 4
                        },
                        new
                        {
                            Id = 128,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1152),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1154),
                            Name = "eSikhaleni",
                            StateId = 4
                        },
                        new
                        {
                            Id = 129,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1157),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1159),
                            Name = "eThekwini Metropolitan Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 130,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1162),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1164),
                            Name = "Glencoe",
                            StateId = 4
                        },
                        new
                        {
                            Id = 131,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1167),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1168),
                            Name = "Greytown",
                            StateId = 4
                        },
                        new
                        {
                            Id = 132,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1171),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1173),
                            Name = "Hluhluwe",
                            StateId = 4
                        },
                        new
                        {
                            Id = 133,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1176),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1178),
                            Name = "Howick",
                            StateId = 4
                        },
                        new
                        {
                            Id = 134,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1181),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1182),
                            Name = "iLembe District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 135,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1185),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1187),
                            Name = "Kokstad",
                            StateId = 4
                        },
                        new
                        {
                            Id = 136,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1190),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1192),
                            Name = "KwaDukuza",
                            StateId = 4
                        },
                        new
                        {
                            Id = 137,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1195),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1197),
                            Name = "Margate",
                            StateId = 4
                        },
                        new
                        {
                            Id = 138,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1200),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1202),
                            Name = "Mondlo",
                            StateId = 4
                        },
                        new
                        {
                            Id = 139,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1205),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1207),
                            Name = "Mooirivier",
                            StateId = 4
                        },
                        new
                        {
                            Id = 140,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1220),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1222),
                            Name = "Mpophomeni",
                            StateId = 4
                        },
                        new
                        {
                            Id = 141,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1225),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1227),
                            Name = "Mpumalanga",
                            StateId = 4
                        },
                        new
                        {
                            Id = 142,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1230),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1232),
                            Name = "Mtubatuba",
                            StateId = 4
                        },
                        new
                        {
                            Id = 143,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1235),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1237),
                            Name = "Ndwedwe",
                            StateId = 4
                        },
                        new
                        {
                            Id = 144,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1239),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1241),
                            Name = "Newcastle",
                            StateId = 4
                        },
                        new
                        {
                            Id = 145,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1244),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1246),
                            Name = "Pietermaritzburg",
                            StateId = 4
                        },
                        new
                        {
                            Id = 146,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1249),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1251),
                            Name = "Port Shepstone",
                            StateId = 4
                        },
                        new
                        {
                            Id = 147,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1254),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1255),
                            Name = "Richards Bay",
                            StateId = 4
                        },
                        new
                        {
                            Id = 148,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1259),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1261),
                            Name = "Richmond",
                            StateId = 4
                        },
                        new
                        {
                            Id = 149,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1264),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1266),
                            Name = "Scottburgh",
                            StateId = 4
                        },
                        new
                        {
                            Id = 150,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1269),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1271),
                            Name = "Sisonke District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 151,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1274),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1276),
                            Name = "Sundumbili",
                            StateId = 4
                        },
                        new
                        {
                            Id = 152,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1279),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1281),
                            Name = "Ugu District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 153,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1285),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1287),
                            Name = "Ulundi",
                            StateId = 4
                        },
                        new
                        {
                            Id = 154,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1290),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1292),
                            Name = "uMgungundlovu District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 155,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1295),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1296),
                            Name = "uMkhanyakude District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 156,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1299),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1301),
                            Name = "uMzinyathi District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 157,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1304),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1306),
                            Name = "uThukela District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 158,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1309),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1311),
                            Name = "uThungulu District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 159,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1313),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1315),
                            Name = "Utrecht",
                            StateId = 4
                        },
                        new
                        {
                            Id = 160,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1318),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1320),
                            Name = "Vryheid",
                            StateId = 4
                        },
                        new
                        {
                            Id = 161,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1323),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1325),
                            Name = "Zululand District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 162,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1328),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1330),
                            Name = "Bochum",
                            StateId = 5
                        },
                        new
                        {
                            Id = 163,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1333),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1334),
                            Name = "Capricorn District Municipality",
                            StateId = 5
                        },
                        new
                        {
                            Id = 164,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1337),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1339),
                            Name = "Duiwelskloof",
                            StateId = 5
                        },
                        new
                        {
                            Id = 165,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1342),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1344),
                            Name = "Ga-Kgapane",
                            StateId = 5
                        },
                        new
                        {
                            Id = 166,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1347),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1349),
                            Name = "Giyani",
                            StateId = 5
                        },
                        new
                        {
                            Id = 167,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1352),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1353),
                            Name = "Lebowakgomo",
                            StateId = 5
                        },
                        new
                        {
                            Id = 168,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1356),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1358),
                            Name = "Louis Trichardt",
                            StateId = 5
                        },
                        new
                        {
                            Id = 169,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1361),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1363),
                            Name = "Mankoeng",
                            StateId = 5
                        },
                        new
                        {
                            Id = 170,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1366),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1368),
                            Name = "Modimolle",
                            StateId = 5
                        },
                        new
                        {
                            Id = 171,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1371),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1373),
                            Name = "Mokopane",
                            StateId = 5
                        },
                        new
                        {
                            Id = 172,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1376),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1377),
                            Name = "Mopani District Municipality",
                            StateId = 5
                        },
                        new
                        {
                            Id = 173,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1380),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1382),
                            Name = "Musina",
                            StateId = 5
                        },
                        new
                        {
                            Id = 174,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1385),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1387),
                            Name = "Nkowakowa",
                            StateId = 5
                        },
                        new
                        {
                            Id = 175,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1390),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1392),
                            Name = "Phalaborwa",
                            StateId = 5
                        },
                        new
                        {
                            Id = 176,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1395),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1397),
                            Name = "Polokwane",
                            StateId = 5
                        },
                        new
                        {
                            Id = 177,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1401),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1404),
                            Name = "Sekhukhune District Municipality",
                            StateId = 5
                        },
                        new
                        {
                            Id = 178,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1410),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1413),
                            Name = "Thabazimbi",
                            StateId = 5
                        },
                        new
                        {
                            Id = 179,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1417),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1420),
                            Name = "Thohoyandou",
                            StateId = 5
                        },
                        new
                        {
                            Id = 180,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1424),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1426),
                            Name = "Thulamahashi",
                            StateId = 5
                        },
                        new
                        {
                            Id = 181,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1431),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1434),
                            Name = "Tzaneen",
                            StateId = 5
                        },
                        new
                        {
                            Id = 182,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1439),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1442),
                            Name = "Vhembe District Municipality",
                            StateId = 5
                        },
                        new
                        {
                            Id = 183,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1446),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1449),
                            Name = "Warmbaths",
                            StateId = 5
                        },
                        new
                        {
                            Id = 184,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1454),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1457),
                            Name = "Waterberg District Municipality",
                            StateId = 5
                        },
                        new
                        {
                            Id = 185,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1461),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1464),
                            Name = "Balfour",
                            StateId = 6
                        },
                        new
                        {
                            Id = 186,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1505),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1508),
                            Name = "Barberton",
                            StateId = 6
                        },
                        new
                        {
                            Id = 187,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1517),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1519),
                            Name = "Belfast",
                            StateId = 6
                        },
                        new
                        {
                            Id = 188,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1522),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1524),
                            Name = "Bethal",
                            StateId = 6
                        },
                        new
                        {
                            Id = 189,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1529),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1531),
                            Name = "Breyten",
                            StateId = 6
                        },
                        new
                        {
                            Id = 190,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1534),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1536),
                            Name = "Carolina",
                            StateId = 6
                        },
                        new
                        {
                            Id = 191,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1539),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1541),
                            Name = "Delmas",
                            StateId = 6
                        },
                        new
                        {
                            Id = 192,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1544),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1546),
                            Name = "Driefontein",
                            StateId = 6
                        },
                        new
                        {
                            Id = 193,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1549),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1551),
                            Name = "Ehlanzeni District",
                            StateId = 6
                        },
                        new
                        {
                            Id = 194,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1554),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1556),
                            Name = "eMbalenhle",
                            StateId = 6
                        },
                        new
                        {
                            Id = 195,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1559),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1561),
                            Name = "Ermelo",
                            StateId = 6
                        },
                        new
                        {
                            Id = 196,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1565),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1567),
                            Name = "Gert Sibande District Municipality",
                            StateId = 6
                        },
                        new
                        {
                            Id = 197,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1570),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1572),
                            Name = "Hendrina",
                            StateId = 6
                        },
                        new
                        {
                            Id = 198,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1575),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1577),
                            Name = "Komatipoort",
                            StateId = 6
                        },
                        new
                        {
                            Id = 199,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1580),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1582),
                            Name = "Kriel",
                            StateId = 6
                        },
                        new
                        {
                            Id = 200,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1585),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1588),
                            Name = "Lydenburg",
                            StateId = 6
                        },
                        new
                        {
                            Id = 201,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1591),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1593),
                            Name = "Middelburg",
                            StateId = 6
                        },
                        new
                        {
                            Id = 202,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1596),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1598),
                            Name = "Nelspruit",
                            StateId = 6
                        },
                        new
                        {
                            Id = 203,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1601),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1603),
                            Name = "Nkangala District Municipality",
                            StateId = 6
                        },
                        new
                        {
                            Id = 204,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1606),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1608),
                            Name = "Piet Retief",
                            StateId = 6
                        },
                        new
                        {
                            Id = 205,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1611),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1613),
                            Name = "Secunda",
                            StateId = 6
                        },
                        new
                        {
                            Id = 206,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1616),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1618),
                            Name = "Siyabuswa",
                            StateId = 6
                        },
                        new
                        {
                            Id = 207,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1622),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1624),
                            Name = "Standerton",
                            StateId = 6
                        },
                        new
                        {
                            Id = 208,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1627),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1629),
                            Name = "Volksrust",
                            StateId = 6
                        },
                        new
                        {
                            Id = 209,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1632),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1634),
                            Name = "White River",
                            StateId = 6
                        },
                        new
                        {
                            Id = 210,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1638),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1639),
                            Name = "Witbank",
                            StateId = 6
                        },
                        new
                        {
                            Id = 211,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1643),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1645),
                            Name = "Bloemhof",
                            StateId = 7
                        },
                        new
                        {
                            Id = 212,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1649),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1650),
                            Name = "Bojanala Platinum District Municipality",
                            StateId = 7
                        },
                        new
                        {
                            Id = 213,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1654),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1655),
                            Name = "Brits",
                            StateId = 7
                        },
                        new
                        {
                            Id = 214,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1659),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1661),
                            Name = "Christiana",
                            StateId = 7
                        },
                        new
                        {
                            Id = 215,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1664),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1666),
                            Name = "Dr Kenneth Kaunda District Municipality",
                            StateId = 7
                        },
                        new
                        {
                            Id = 216,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1669),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1671),
                            Name = "Dr Ruth Segomotsi Mompati District Municipality",
                            StateId = 7
                        },
                        new
                        {
                            Id = 217,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1674),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1676),
                            Name = "Fochville",
                            StateId = 7
                        },
                        new
                        {
                            Id = 218,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1680),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1681),
                            Name = "Ga-Rankuwa",
                            StateId = 7
                        },
                        new
                        {
                            Id = 219,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1685),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1687),
                            Name = "Jan Kempdorp",
                            StateId = 7
                        },
                        new
                        {
                            Id = 220,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1690),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1692),
                            Name = "Klerksdorp",
                            StateId = 7
                        },
                        new
                        {
                            Id = 221,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1695),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1697),
                            Name = "Koster",
                            StateId = 7
                        },
                        new
                        {
                            Id = 222,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1700),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1702),
                            Name = "Lichtenburg",
                            StateId = 7
                        },
                        new
                        {
                            Id = 223,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1705),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1708),
                            Name = "Mahikeng",
                            StateId = 7
                        },
                        new
                        {
                            Id = 224,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1711),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1713),
                            Name = "Maile",
                            StateId = 7
                        },
                        new
                        {
                            Id = 225,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1716),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1718),
                            Name = "Mmabatho",
                            StateId = 7
                        },
                        new
                        {
                            Id = 226,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1721),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1723),
                            Name = "Ngaka Modiri Molema District Municipality",
                            StateId = 7
                        },
                        new
                        {
                            Id = 227,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1726),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1728),
                            Name = "Orkney",
                            StateId = 7
                        },
                        new
                        {
                            Id = 228,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1732),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1733),
                            Name = "Potchefstroom",
                            StateId = 7
                        },
                        new
                        {
                            Id = 229,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1737),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1738),
                            Name = "Rustenburg",
                            StateId = 7
                        },
                        new
                        {
                            Id = 230,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1742),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1744),
                            Name = "Schweizer-Reneke",
                            StateId = 7
                        },
                        new
                        {
                            Id = 231,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1747),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1749),
                            Name = "Stilfontein",
                            StateId = 7
                        },
                        new
                        {
                            Id = 232,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1752),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1754),
                            Name = "Vryburg",
                            StateId = 7
                        },
                        new
                        {
                            Id = 233,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1764),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1766),
                            Name = "Wolmaransstad",
                            StateId = 7
                        },
                        new
                        {
                            Id = 234,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1769),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1771),
                            Name = "Zeerust",
                            StateId = 7
                        },
                        new
                        {
                            Id = 235,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1775),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1777),
                            Name = "Barkly West",
                            StateId = 8
                        },
                        new
                        {
                            Id = 236,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1780),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1782),
                            Name = "Brandvlei",
                            StateId = 8
                        },
                        new
                        {
                            Id = 237,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1785),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1787),
                            Name = "Calvinia",
                            StateId = 8
                        },
                        new
                        {
                            Id = 238,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1790),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1792),
                            Name = "Carnarvon",
                            StateId = 8
                        },
                        new
                        {
                            Id = 239,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1795),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1797),
                            Name = "Colesberg",
                            StateId = 8
                        },
                        new
                        {
                            Id = 240,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1800),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1802),
                            Name = "DaniÃ«lskuil",
                            StateId = 8
                        },
                        new
                        {
                            Id = 241,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1805),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1807),
                            Name = "De Aar",
                            StateId = 8
                        },
                        new
                        {
                            Id = 242,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1811),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1813),
                            Name = "Frances Baard District Municipality",
                            StateId = 8
                        },
                        new
                        {
                            Id = 243,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1817),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1819),
                            Name = "Fraserburg",
                            StateId = 8
                        },
                        new
                        {
                            Id = 244,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1823),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1825),
                            Name = "John Taolo Gaetsewe District Municipality",
                            StateId = 8
                        },
                        new
                        {
                            Id = 245,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1828),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1830),
                            Name = "Kathu",
                            StateId = 8
                        },
                        new
                        {
                            Id = 246,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1834),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1836),
                            Name = "Kenhardt",
                            StateId = 8
                        },
                        new
                        {
                            Id = 247,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1839),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1841),
                            Name = "Kimberley",
                            StateId = 8
                        },
                        new
                        {
                            Id = 248,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1844),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1846),
                            Name = "Kuruman",
                            StateId = 8
                        },
                        new
                        {
                            Id = 249,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1849),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1851),
                            Name = "Namakwa District Municipality",
                            StateId = 8
                        },
                        new
                        {
                            Id = 250,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1855),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1856),
                            Name = "Noupoort",
                            StateId = 8
                        },
                        new
                        {
                            Id = 251,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1860),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1862),
                            Name = "Orania",
                            StateId = 8
                        },
                        new
                        {
                            Id = 252,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1865),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1867),
                            Name = "Pampierstad",
                            StateId = 8
                        },
                        new
                        {
                            Id = 253,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1870),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1872),
                            Name = "Pixley ka Seme District Municipality",
                            StateId = 8
                        },
                        new
                        {
                            Id = 254,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1876),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1878),
                            Name = "Pofadder",
                            StateId = 8
                        },
                        new
                        {
                            Id = 255,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1881),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1883),
                            Name = "Postmasburg",
                            StateId = 8
                        },
                        new
                        {
                            Id = 256,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1886),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1888),
                            Name = "Prieska",
                            StateId = 8
                        },
                        new
                        {
                            Id = 257,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1893),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1895),
                            Name = "Ritchie",
                            StateId = 8
                        },
                        new
                        {
                            Id = 258,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1900),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1902),
                            Name = "Siyanda District Municipality",
                            StateId = 8
                        },
                        new
                        {
                            Id = 259,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1906),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1907),
                            Name = "Springbok",
                            StateId = 8
                        },
                        new
                        {
                            Id = 260,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1911),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1912),
                            Name = "Upington",
                            StateId = 8
                        },
                        new
                        {
                            Id = 261,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1916),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1918),
                            Name = "Van Wyksvlei",
                            StateId = 8
                        },
                        new
                        {
                            Id = 262,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1921),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1923),
                            Name = "Warrenton",
                            StateId = 8
                        },
                        new
                        {
                            Id = 263,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1927),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1928),
                            Name = "Albertina",
                            StateId = 9
                        },
                        new
                        {
                            Id = 264,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1932),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1934),
                            Name = "Arniston",
                            StateId = 9
                        },
                        new
                        {
                            Id = 265,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1937),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1939),
                            Name = "Atlantis",
                            StateId = 9
                        },
                        new
                        {
                            Id = 266,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1942),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1944),
                            Name = "Beaufort West",
                            StateId = 9
                        },
                        new
                        {
                            Id = 267,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1947),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1949),
                            Name = "Bergvliet",
                            StateId = 9
                        },
                        new
                        {
                            Id = 268,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1952),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1954),
                            Name = "Bredasdorp",
                            StateId = 9
                        },
                        new
                        {
                            Id = 269,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1958),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1960),
                            Name = "Caledon",
                            StateId = 9
                        },
                        new
                        {
                            Id = 270,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1964),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1965),
                            Name = "Calitzdorp",
                            StateId = 9
                        },
                        new
                        {
                            Id = 271,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1969),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1970),
                            Name = "Cape Town",
                            StateId = 9
                        },
                        new
                        {
                            Id = 272,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1974),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1975),
                            Name = "Cape Winelands District Municipality",
                            StateId = 9
                        },
                        new
                        {
                            Id = 273,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1979),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1981),
                            Name = "Central Karoo District Municipality",
                            StateId = 9
                        },
                        new
                        {
                            Id = 274,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1984),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1986),
                            Name = "Ceres",
                            StateId = 9
                        },
                        new
                        {
                            Id = 275,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1989),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1991),
                            Name = "City of Cape Town",
                            StateId = 9
                        },
                        new
                        {
                            Id = 276,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1994),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(1996),
                            Name = "Clanwilliam",
                            StateId = 9
                        },
                        new
                        {
                            Id = 277,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2000),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2001),
                            Name = "Claremont",
                            StateId = 9
                        },
                        new
                        {
                            Id = 278,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2005),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2006),
                            Name = "Constantia",
                            StateId = 9
                        },
                        new
                        {
                            Id = 279,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2018),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2020),
                            Name = "De Rust",
                            StateId = 9
                        },
                        new
                        {
                            Id = 280,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2023),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2025),
                            Name = "Eden District Municipality",
                            StateId = 9
                        },
                        new
                        {
                            Id = 281,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2029),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2030),
                            Name = "George",
                            StateId = 9
                        },
                        new
                        {
                            Id = 282,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2034),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2036),
                            Name = "Grabouw",
                            StateId = 9
                        },
                        new
                        {
                            Id = 283,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2039),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2041),
                            Name = "Hardys Memories of Africa",
                            StateId = 9
                        },
                        new
                        {
                            Id = 284,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2045),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2046),
                            Name = "Hermanus",
                            StateId = 9
                        },
                        new
                        {
                            Id = 285,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2050),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2051),
                            Name = "Knysna",
                            StateId = 9
                        },
                        new
                        {
                            Id = 286,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2055),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2057),
                            Name = "Kraaifontein",
                            StateId = 9
                        },
                        new
                        {
                            Id = 287,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2060),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2062),
                            Name = "Ladismith",
                            StateId = 9
                        },
                        new
                        {
                            Id = 288,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2065),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2067),
                            Name = "Lansdowne",
                            StateId = 9
                        },
                        new
                        {
                            Id = 289,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2070),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2072),
                            Name = "Malmesbury",
                            StateId = 9
                        },
                        new
                        {
                            Id = 290,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2076),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2078),
                            Name = "Montagu",
                            StateId = 9
                        },
                        new
                        {
                            Id = 291,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2081),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2083),
                            Name = "Moorreesburg",
                            StateId = 9
                        },
                        new
                        {
                            Id = 292,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2086),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2088),
                            Name = "Mossel Bay",
                            StateId = 9
                        },
                        new
                        {
                            Id = 293,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2091),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2093),
                            Name = "Newlands",
                            StateId = 9
                        },
                        new
                        {
                            Id = 294,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2096),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2098),
                            Name = "Oudtshoorn",
                            StateId = 9
                        },
                        new
                        {
                            Id = 295,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2102),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2103),
                            Name = "Overberg District Municipality",
                            StateId = 9
                        },
                        new
                        {
                            Id = 296,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2107),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2109),
                            Name = "Paarl",
                            StateId = 9
                        },
                        new
                        {
                            Id = 297,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2112),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2114),
                            Name = "Piketberg",
                            StateId = 9
                        },
                        new
                        {
                            Id = 298,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2117),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2119),
                            Name = "Plettenberg Bay",
                            StateId = 9
                        },
                        new
                        {
                            Id = 299,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2122),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2124),
                            Name = "Prince Albert",
                            StateId = 9
                        },
                        new
                        {
                            Id = 300,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2128),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2129),
                            Name = "Retreat",
                            StateId = 9
                        },
                        new
                        {
                            Id = 301,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2133),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2134),
                            Name = "Riversdale",
                            StateId = 9
                        },
                        new
                        {
                            Id = 302,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2138),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2140),
                            Name = "Robertson",
                            StateId = 9
                        },
                        new
                        {
                            Id = 303,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2143),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2145),
                            Name = "Rondebosch",
                            StateId = 9
                        },
                        new
                        {
                            Id = 304,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2149),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2151),
                            Name = "Rosebank",
                            StateId = 9
                        },
                        new
                        {
                            Id = 305,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2154),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2156),
                            Name = "Saldanha",
                            StateId = 9
                        },
                        new
                        {
                            Id = 306,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2159),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2161),
                            Name = "Stellenbosch",
                            StateId = 9
                        },
                        new
                        {
                            Id = 307,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2165),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2166),
                            Name = "Sunset Beach",
                            StateId = 9
                        },
                        new
                        {
                            Id = 308,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2170),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2171),
                            Name = "Swellendam",
                            StateId = 9
                        },
                        new
                        {
                            Id = 309,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2175),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2177),
                            Name = "Vredenburg",
                            StateId = 9
                        },
                        new
                        {
                            Id = 310,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2180),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2182),
                            Name = "Vredendal",
                            StateId = 9
                        },
                        new
                        {
                            Id = 311,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2186),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2187),
                            Name = "Wellington",
                            StateId = 9
                        },
                        new
                        {
                            Id = 312,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2191),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2193),
                            Name = "West Coast District Municipality",
                            StateId = 9
                        },
                        new
                        {
                            Id = 313,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2196),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2198),
                            Name = "Worcester",
                            StateId = 9
                        },
                        new
                        {
                            Id = 314,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2201),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 310, DateTimeKind.Local).AddTicks(2203),
                            Name = "Zoar",
                            StateId = 9
                        });
                });

            modelBuilder.Entity("MM.ClientModels.ClientOrganization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("AgreedToTerms")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ClientTimeZoneId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("CurrencyDecimalPlaces")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DateSettingId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("TimeFormatId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientTimeZoneId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DateSettingId");

                    b.HasIndex("TimeFormatId");

                    b.ToTable("ClientOrganization");
                });

            modelBuilder.Entity("MM.ClientModels.ClientPlanHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BillingUserId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsCurrentPlan")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int>("PlanDetailId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("BillingUserId");

                    b.ToTable("ClientPlanHistory");
                });

            modelBuilder.Entity("MM.ClientModels.ClientTimeZone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("ClientTimeZone");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(3842),
                            Description = "(GMT-12:00) International Date Line West",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(4690),
                            Name = "Dateline Standard Time"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5501),
                            Description = "(GMT-11:00) MIdway Island, Samoa",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5524),
                            Name = "Samoa Standard Time"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5542),
                            Description = "(GMT-10:00) Hawaii",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5544),
                            Name = "Hawaiian Standard Time"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5548),
                            Description = "(GMT-09:00) Alaska",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5550),
                            Name = "Alaskan Standard Time"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5554),
                            Description = "(GMT-08:00) Pacific Time (US and Canada); Tijuana",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5555),
                            Name = "Pacific Standard Time"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5559),
                            Description = "(GMT-07:00) Mountain Time (US and Canada)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5560),
                            Name = "Mountain Standard Time"
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5564),
                            Description = "(GMT-07:00) Chihuahua, La Paz, Mazatlan",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5566),
                            Name = "Mexico Standard Time 2"
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5570),
                            Description = "(GMT-07:00) Arizona",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5572),
                            Name = "U.S. Mountain Standard Time"
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5575),
                            Description = "(GMT-06:00) Central Time (US and Canada)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5577),
                            Name = "Central Standard Time"
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5580),
                            Description = "(GMT-06:00) Saskatchewan",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5582),
                            Name = "Canada Central Standard Time"
                        },
                        new
                        {
                            Id = 11,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5588),
                            Description = "(GMT-06:00) Guadalajara, Mexico City, Monterrey",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5589),
                            Name = "Mexico Standard Time"
                        },
                        new
                        {
                            Id = 12,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5593),
                            Description = "(GMT-06:00) Central America",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5594),
                            Name = "Central America Standard Time"
                        },
                        new
                        {
                            Id = 13,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5598),
                            Description = "(GMT-05:00) Eastern Time (US and Canada)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5599),
                            Name = "Eastern Standard Time"
                        },
                        new
                        {
                            Id = 14,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5603),
                            Description = "(GMT-05:00) Indiana (East)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5604),
                            Name = "U.S. Eastern Standard Time"
                        },
                        new
                        {
                            Id = 15,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5609),
                            Description = "(GMT-05:00) Bogota, Lima, Quito",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5610),
                            Name = "S.A. Pacific Standard Time"
                        },
                        new
                        {
                            Id = 16,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5614),
                            Description = "(GMT-04:00) Atlantic Time (Canada)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5616),
                            Name = "Atlantic Standard Time"
                        },
                        new
                        {
                            Id = 17,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5620),
                            Description = "(GMT-04:00) Georgetown, La Paz, San Juan",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5621),
                            Name = "S.A. Western Standard Time"
                        },
                        new
                        {
                            Id = 18,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5625),
                            Description = "(GMT-04:00) Santiago",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5627),
                            Name = "Pacific S.A. Standard Time"
                        },
                        new
                        {
                            Id = 19,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5632),
                            Description = "(GMT-03:30) Newfoundland",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5633),
                            Name = "Newfoundland and Labrador Standard Time"
                        },
                        new
                        {
                            Id = 20,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5637),
                            Description = "(GMT-03:00) Brasilia",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5638),
                            Name = "E. South America Standard Time"
                        },
                        new
                        {
                            Id = 21,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5642),
                            Description = "(GMT-03:00) Georgetown",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5643),
                            Name = "S.A. Eastern Standard Time"
                        },
                        new
                        {
                            Id = 22,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5647),
                            Description = "(GMT-03:00) Greenland",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5649),
                            Name = "Greenland Standard Time"
                        },
                        new
                        {
                            Id = 23,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5654),
                            Description = "(GMT-02:00) MId-Atlantic",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5655),
                            Name = "MId-Atlantic Standard Time"
                        },
                        new
                        {
                            Id = 24,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5660),
                            Description = "(GMT-01:00) Azores",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5661),
                            Name = "Azores Standard Time"
                        },
                        new
                        {
                            Id = 25,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5665),
                            Description = "(GMT-01:00) Cape Verde Islands",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5666),
                            Name = "Cape Verde Standard Time"
                        },
                        new
                        {
                            Id = 26,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5670),
                            Description = "(GMT) Greenwich Mean Time: Dublin, Edinburgh, Lisbon, London",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5672),
                            Name = "GMT Standard Time"
                        },
                        new
                        {
                            Id = 27,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5676),
                            Description = "(GMT) Monrovia, Reykjavik",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5677),
                            Name = "Greenwich Standard Time"
                        },
                        new
                        {
                            Id = 28,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5681),
                            Description = "(GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5682),
                            Name = "Central Europe Standard Time"
                        },
                        new
                        {
                            Id = 29,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5686),
                            Description = "(GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5687),
                            Name = "Central European Standard Time"
                        },
                        new
                        {
                            Id = 30,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5691),
                            Description = "(GMT+01:00) Brussels, Copenhagen, MadrId, Paris",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5692),
                            Name = "Romance Standard Time"
                        },
                        new
                        {
                            Id = 31,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5720),
                            Description = "(GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5721),
                            Name = "W. Europe Standard Time"
                        },
                        new
                        {
                            Id = 32,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5725),
                            Description = "(GMT+01:00) West Central Africa",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5726),
                            Name = "W. Central Africa Standard Time"
                        },
                        new
                        {
                            Id = 33,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5730),
                            Description = "(GMT+02:00) Minsk",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5731),
                            Name = "E. Europe Standard Time"
                        },
                        new
                        {
                            Id = 34,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5735),
                            Description = "(GMT+02:00) Cairo",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5736),
                            Name = "Egypt Standard Time"
                        },
                        new
                        {
                            Id = 35,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5740),
                            Description = "(GMT+02:00) Helsinki, Kiev, Riga, Sofia, Tallinn, Vilnius",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5742),
                            Name = "FLE Standard Time"
                        },
                        new
                        {
                            Id = 36,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5745),
                            Description = "(GMT+02:00) Athens, Bucharest, Istanbul",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5747),
                            Name = "GTB Standard Time"
                        },
                        new
                        {
                            Id = 37,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5750),
                            Description = "(GMT+02:00) Jerusalem",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5751),
                            Name = "Israel Standard Time"
                        },
                        new
                        {
                            Id = 38,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5755),
                            Description = "(GMT+02:00) Harare, Pretoria",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5756),
                            Name = "South Africa Standard Time"
                        },
                        new
                        {
                            Id = 39,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5760),
                            Description = "(GMT+03:00) Moscow, St. Petersburg, Volgograd",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5762),
                            Name = "Russian Standard Time"
                        },
                        new
                        {
                            Id = 40,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5766),
                            Description = "(GMT+03:00) Kuwait, Riyadh",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5768),
                            Name = "Arab Standard Time"
                        },
                        new
                        {
                            Id = 41,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5771),
                            Description = "(GMT+03:00) Nairobi",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5773),
                            Name = "E. Africa Standard Time"
                        },
                        new
                        {
                            Id = 42,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5776),
                            Description = "(GMT+03:00) Baghdad",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5778),
                            Name = "Arabic Standard Time"
                        },
                        new
                        {
                            Id = 43,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5781),
                            Description = "(GMT+03:30) Tehran",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5783),
                            Name = "Iran Standard Time"
                        },
                        new
                        {
                            Id = 44,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5786),
                            Description = "(GMT+04:00) Abu Dhabi, Muscat",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5788),
                            Name = "Arabian Standard Time"
                        },
                        new
                        {
                            Id = 45,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5791),
                            Description = "(GMT+04:00) Baku, Tbilisi, Yerevan",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5792),
                            Name = "Caucasus Standard Time"
                        },
                        new
                        {
                            Id = 46,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5796),
                            Description = "(GMT+04:30) Kabul",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5798),
                            Name = "Transitional Islamic State of Afghanistan Standard Time"
                        },
                        new
                        {
                            Id = 47,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5803),
                            Description = "(GMT+05:00) Ekaterinburg",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5804),
                            Name = "Ekaterinburg Standard Time"
                        },
                        new
                        {
                            Id = 48,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5809),
                            Description = "(GMT+05:00) Tashkent",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5810),
                            Name = "West Asia Standard Time"
                        },
                        new
                        {
                            Id = 49,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5814),
                            Description = "(GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5815),
                            Name = "India Standard Time"
                        },
                        new
                        {
                            Id = 50,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5819),
                            Description = "(GMT+05:45) Kathmandu",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5820),
                            Name = "Nepal Standard Time"
                        },
                        new
                        {
                            Id = 51,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5825),
                            Description = "(GMT+06:00) Astana, Dhaka",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5827),
                            Name = "Central Asia Standard Time"
                        },
                        new
                        {
                            Id = 52,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5830),
                            Description = "(GMT+06:00) Sri Jayawardenepura",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5832),
                            Name = "Sri Lanka Standard Time"
                        },
                        new
                        {
                            Id = 53,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5835),
                            Description = "(GMT+06:00) Almaty, Novosibirsk",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5836),
                            Name = "N. Central Asia Standard Time"
                        },
                        new
                        {
                            Id = 54,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5840),
                            Description = "(GMT+06:30) Yangon (Rangoon)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5841),
                            Name = "Myanmar Standard Time"
                        },
                        new
                        {
                            Id = 55,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5845),
                            Description = "(GMT+07:00) Bangkok, Hanoi, Jakarta",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5847),
                            Name = "S.E. Asia Standard Time"
                        },
                        new
                        {
                            Id = 56,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5850),
                            Description = "(GMT+07:00) Krasnoyarsk",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5852),
                            Name = "North Asia Standard Time"
                        },
                        new
                        {
                            Id = 57,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5855),
                            Description = "(GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5857),
                            Name = "China Standard Time"
                        },
                        new
                        {
                            Id = 58,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5860),
                            Description = "(GMT+08:00) Kuala Lumpur, Singapore",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5862),
                            Name = "Singapore Standard Time"
                        },
                        new
                        {
                            Id = 59,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5866),
                            Description = "(GMT+08:00) Taipei",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5868),
                            Name = "Taipei Standard Time"
                        },
                        new
                        {
                            Id = 60,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5871),
                            Description = "(GMT+08:00) Perth",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5873),
                            Name = "W. Australia Standard Time"
                        },
                        new
                        {
                            Id = 61,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5876),
                            Description = "(GMT+08:00) Irkutsk, Ulaanbaatar",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5877),
                            Name = "North Asia East Standard Time"
                        },
                        new
                        {
                            Id = 62,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5880),
                            Description = "(GMT+09:00) Seoul",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5882),
                            Name = "Korea Standard Time"
                        },
                        new
                        {
                            Id = 63,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5886),
                            Description = "(GMT+09:00) Osaka, Sapporo, Tokyo",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5887),
                            Name = "Tokyo Standard Time"
                        },
                        new
                        {
                            Id = 64,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5891),
                            Description = "(GMT+09:00) Yakutsk",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5893),
                            Name = "Yakutsk Standard Time"
                        },
                        new
                        {
                            Id = 65,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5896),
                            Description = "(GMT+09:30) Darwin",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5898),
                            Name = "A.U.S. Central Standard Time"
                        },
                        new
                        {
                            Id = 66,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5914),
                            Description = "(GMT+09:30) AdelaIde",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5915),
                            Name = "Cen. Australia Standard Time"
                        },
                        new
                        {
                            Id = 67,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5920),
                            Description = "(GMT+10:00) Canberra, Melbourne, Sydney",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5922),
                            Name = "A.U.S. Eastern Standard Time"
                        },
                        new
                        {
                            Id = 68,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5925),
                            Description = "(GMT+10:00) Brisbane",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5928),
                            Name = "E. Australia Standard Time"
                        },
                        new
                        {
                            Id = 69,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5931),
                            Description = "(GMT+10:00) Hobart",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5933),
                            Name = "Tasmania Standard Time"
                        },
                        new
                        {
                            Id = 70,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5936),
                            Description = "(GMT+10:00) Vladivostok",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5938),
                            Name = "Vladivostok Standard Time"
                        },
                        new
                        {
                            Id = 71,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5941),
                            Description = "(GMT+10:00) Guam, Port Moresby",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5943),
                            Name = "West Pacific Standard Time"
                        },
                        new
                        {
                            Id = 72,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5946),
                            Description = "(GMT+11:00) Magadan, Solomon Islands, New Caledonia",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5948),
                            Name = "Central Pacific Standard Time"
                        },
                        new
                        {
                            Id = 73,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5951),
                            Description = "(GMT+12:00) Fiji, Kamchatka, Marshall Is.",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5953),
                            Name = "Fiji Islands Standard Time"
                        },
                        new
                        {
                            Id = 74,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5956),
                            Description = "(GMT+12:00) Auckland, Wellington",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5957),
                            Name = "New Zealand Standard Time"
                        },
                        new
                        {
                            Id = 75,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5961),
                            Description = "(GMT+13:00) Nuku'alofa",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5963),
                            Name = "Tonga Standard Time"
                        },
                        new
                        {
                            Id = 76,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5966),
                            Description = "(GMT-03:00) Buenos Aires",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5968),
                            Name = "Azerbaijan Standard Time "
                        },
                        new
                        {
                            Id = 77,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5971),
                            Description = "(GMT+02:00) Beirut",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5973),
                            Name = "MIddle East Standard Time"
                        },
                        new
                        {
                            Id = 78,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5976),
                            Description = "(GMT+02:00) Amman",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5977),
                            Name = "Jordan Standard Time"
                        },
                        new
                        {
                            Id = 79,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5981),
                            Description = "(GMT-06:00) Guadalajara, Mexico City, Monterrey - New",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5982),
                            Name = "Central Standard Time (Mexico)"
                        },
                        new
                        {
                            Id = 80,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5985),
                            Description = "(GMT-07:00) Chihuahua, La Paz, Mazatlan - New",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5987),
                            Name = "Mountain Standard Time (Mexico)"
                        },
                        new
                        {
                            Id = 81,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5990),
                            Description = "(GMT-08:00) Tijuana, Baja California",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5992),
                            Name = "Pacific Standard Time (Mexico)"
                        },
                        new
                        {
                            Id = 82,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5995),
                            Description = "(GMT+02:00) Windhoek",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(5996),
                            Name = "Namibia Standard Time"
                        },
                        new
                        {
                            Id = 83,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(6000),
                            Description = "(GMT+03:00) Tbilisi",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(6001),
                            Name = "Georgian Standard Time"
                        },
                        new
                        {
                            Id = 84,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(6004),
                            Description = "(GMT-04:00) Manaus",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(6006),
                            Name = "Central Brazilian Standard Time"
                        },
                        new
                        {
                            Id = 85,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(6009),
                            Description = "(GMT-03:00) MontevIdeo",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(6011),
                            Name = "MontevIdeo Standard Time"
                        },
                        new
                        {
                            Id = 86,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(6014),
                            Description = "(GMT+04:00) Yerevan",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(6016),
                            Name = "Armenian Standard Time"
                        },
                        new
                        {
                            Id = 87,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(6019),
                            Description = "(GMT-04:30) Caracas",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(6021),
                            Name = "Venezuela Standard Time"
                        },
                        new
                        {
                            Id = 88,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(6024),
                            Description = "(GMT-03:00) Buenos Aires",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(6025),
                            Name = "Argentina Standard Time"
                        },
                        new
                        {
                            Id = 89,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(6029),
                            Description = "(GMT) Casablanca",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(6030),
                            Name = "Morocco Standard Time"
                        },
                        new
                        {
                            Id = 90,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(6034),
                            Description = "(GMT+05:00) Islamabad, Karachi",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(6036),
                            Name = "Pakistan Standard Time"
                        },
                        new
                        {
                            Id = 91,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(6039),
                            Description = "(GMT+04:00) Port Louis",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(6040),
                            Name = "Mauritius Standard Time"
                        },
                        new
                        {
                            Id = 92,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(6046),
                            Description = "(GMT) Coordinated Universal Time",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(6047),
                            Name = "UTC"
                        },
                        new
                        {
                            Id = 93,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(6050),
                            Description = "(GMT-04:00) Asuncion",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(6052),
                            Name = "Paraguay Standard Time"
                        },
                        new
                        {
                            Id = 94,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(6055),
                            Description = "(GMT+12:00) Petropavlovsk-Kamchatsky",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 761, DateTimeKind.Local).AddTicks(6057),
                            Name = "Kamchatka Standard Time"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.ClientType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("ClientType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 320, DateTimeKind.Local).AddTicks(6903),
                            Description = "Individual",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 320, DateTimeKind.Local).AddTicks(7981),
                            Name = "Individual"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 320, DateTimeKind.Local).AddTicks(9284),
                            Description = "Organization",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 320, DateTimeKind.Local).AddTicks(9315),
                            Name = "Organization"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.ClientUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("BillingContact")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("DesignationId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<bool>("EmailActivated")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsInternalUser")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("MiddleName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<bool>("PrimaryContact")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ReferralTypeId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<bool>("TermsAccepted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("TitleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DesignationId");

                    b.HasIndex("GenderId");

                    b.HasIndex("ReferralTypeId");

                    b.HasIndex("RoleId");

                    b.HasIndex("TitleId");

                    b.ToTable("ClientUser");
                });

            modelBuilder.Entity("MM.ClientModels.CommunicationPreference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CommunicationTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan?>("PreferredTimeFrom")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("PreferredTimeTo")
                        .HasColumnType("time(6)");

                    b.HasKey("Id");

                    b.HasIndex("CommunicationTypeId");

                    b.ToTable("CommunicationPreference");
                });

            modelBuilder.Entity("MM.ClientModels.CommunicationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("CommunicationType");
                });

            modelBuilder.Entity("MM.ClientModels.CorrespondenceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("CorrespondenceType");
                });

            modelBuilder.Entity("MM.ClientModels.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("ISO2Code")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<string>("ISO3Code")
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("PhoneCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 349, DateTimeKind.Local).AddTicks(9567),
                            ISO2Code = "ZA",
                            ISO3Code = "ZAF",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 350, DateTimeKind.Local).AddTicks(454),
                            Name = "South Africa",
                            PhoneCode = 27
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 350, DateTimeKind.Local).AddTicks(1363),
                            ISO2Code = "AU",
                            ISO3Code = "AUS",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 350, DateTimeKind.Local).AddTicks(1387),
                            Name = "Australia",
                            PhoneCode = 61
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 350, DateTimeKind.Local).AddTicks(1407),
                            ISO2Code = "IN",
                            ISO3Code = "IND",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 350, DateTimeKind.Local).AddTicks(1409),
                            Name = "India",
                            PhoneCode = 91
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 350, DateTimeKind.Local).AddTicks(1414),
                            ISO2Code = "GB",
                            ISO3Code = "GBR",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 350, DateTimeKind.Local).AddTicks(1415),
                            Name = "United Kingdom",
                            PhoneCode = 44
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 350, DateTimeKind.Local).AddTicks(1420),
                            ISO2Code = "US",
                            ISO3Code = "USA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 350, DateTimeKind.Local).AddTicks(1421),
                            Name = "United States",
                            PhoneCode = 1
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Cpd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CpdawardedById")
                        .HasColumnName("CPDAwardedById")
                        .HasColumnType("int");

                    b.Property<int>("Cpdearned")
                        .HasColumnName("CPDEarned")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CpdawardedById");

                    b.HasIndex("MemberId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("CPD");
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberCategorySetUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cpdcount")
                        .HasColumnName("CPDCount")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("MemberCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberCategoryId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("CPDMemberCategorySetUp");
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberLevelSetUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cpdcount")
                        .HasColumnName("CPDCount")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("MemberLevelId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberLevelId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("CPDMemberLevelSetUp");
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberTeamSetUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cpdcount")
                        .HasColumnName("CPDCount")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("MemberTeamId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberTeamId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("CPDMemberTeamSetUp");
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberTypeSetUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cpdcount")
                        .HasColumnName("CPDCount")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("MemberTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberTypeId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("CPDMemberTypeSetUp");
                });

            modelBuilder.Entity("MM.ClientModels.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Symbol")
                        .HasColumnType("varchar(5) CHARACTER SET utf8mb4")
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.ToTable("Currency");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "AFN",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(4368),
                            Description = "Currency for  AFGHANISTAN",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(5333),
                            Name = "Afghani",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 2,
                            Code = "ALL",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6264),
                            Description = "ALBANIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6283),
                            Name = "Lek",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 3,
                            Code = "DZD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6301),
                            Description = "ALGERIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6303),
                            Name = "Algerian Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 4,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6308),
                            Description = "AMERICAN SAMOA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6310),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 5,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6314),
                            Description = "ANDORRA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6316),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 6,
                            Code = "AOA",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6321),
                            Description = "ANGOLA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6323),
                            Name = "Kwanza",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 7,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6328),
                            Description = "ANGUILLA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6330),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 8,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6334),
                            Description = "ANTIGUA AND BARBUDA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6336),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 9,
                            Code = "ARS",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6341),
                            Description = "ARGENTINA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6343),
                            Name = "Argentine Peso",
                            Symbol = ""
                        },
                        new
                        {
                            Id = 10,
                            Code = "AMD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6347),
                            Description = "ARMENIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6349),
                            Name = "Armenian Dram",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 11,
                            Code = "AWG",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6354),
                            Description = "ARUBA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6356),
                            Name = "Aruban Florin",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 12,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6361),
                            Description = "AUSTRALIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6362),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 13,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6367),
                            Description = "AUSTRIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6368),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 14,
                            Code = "AZN",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6373),
                            Description = "AZERBAIJAN",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6375),
                            Name = "Azerbaijanian Manat",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 15,
                            Code = "BSD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6379),
                            Description = "BAHAMAS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6381),
                            Name = "Bahamian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 16,
                            Code = "BHD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6386),
                            Description = "BAHRAIN",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6387),
                            Name = "Bahraini Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 17,
                            Code = "BDT",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6392),
                            Description = "BANGLADESH",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6394),
                            Name = "Taka",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 18,
                            Code = "BBD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6399),
                            Description = "BARBADOS",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6400),
                            Name = "Barbados Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 19,
                            Code = "BYN",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6405),
                            Description = "BELARUS",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6407),
                            Name = "Belarussian Ruble",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 20,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6411),
                            Description = "BELGIUM",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6413),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 21,
                            Code = "BZD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6418),
                            Description = "BELIZE",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6420),
                            Name = "Belize Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 22,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6424),
                            Description = "BENIN",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6426),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 23,
                            Code = "BMD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6430),
                            Description = "BERMUDA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6432),
                            Name = "Bermudian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 24,
                            Code = "BTN",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6452),
                            Description = "BHUTAN",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6454),
                            Name = "Ngultrum",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 25,
                            Code = "INR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6458),
                            Description = "BHUTAN",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6460),
                            Name = "Indian Rupee",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 26,
                            Code = "BOB",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6465),
                            Description = "BOLIVIA (PLURINATIONAL STATE OF)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6466),
                            Name = "Boliviano",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 27,
                            Code = "BOV",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6471),
                            Description = "BOLIVIA (PLURINATIONAL STATE OF)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6473),
                            Name = "Mvdol",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 28,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6478),
                            Description = "BONAIRE, SINT EUSTATIUS AND SABA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6479),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 29,
                            Code = "BAM",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6484),
                            Description = "BOSNIA AND HERZEGOVINA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6486),
                            Name = "Convertible Mark",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 30,
                            Code = "BWP",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6490),
                            Description = "BOTSWANA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6492),
                            Name = "Pula",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 31,
                            Code = "NOK",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6496),
                            Description = "BOUVET ISLAND",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6498),
                            Name = "Norwegian Krone",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 32,
                            Code = "BRL",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6503),
                            Description = "BRAZIL",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6505),
                            Name = "Brazilian Real",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 33,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6509),
                            Description = "BRITISH INDIAN OCEAN TERRITORY (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6511),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 34,
                            Code = "BND",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6515),
                            Description = "BRUNEI DARUSSALAM",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6517),
                            Name = "Brunei Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 35,
                            Code = "BGN",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6521),
                            Description = "BULGARIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6523),
                            Name = "Bulgarian Lev",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 36,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6527),
                            Description = "BURKINA FASO",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6529),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 37,
                            Code = "BIF",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6534),
                            Description = "BURUNDI",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6536),
                            Name = "Burundi Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 38,
                            Code = "CVE",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6540),
                            Description = "CABO VERDE",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6542),
                            Name = "Cabo Verde Escudo",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 39,
                            Code = "KHR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6546),
                            Description = "CAMBODIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6548),
                            Name = "Riel",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 40,
                            Code = "XAF",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6553),
                            Description = "CAMEROON",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6555),
                            Name = "CFA Franc BEAC",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 41,
                            Code = "CAD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6559),
                            Description = "CANADA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6561),
                            Name = "Canadian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 42,
                            Code = "KYD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6565),
                            Description = "CAYMAN ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6567),
                            Name = "Cayman Islands Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 43,
                            Code = "XAF",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6572),
                            Description = "CENTRAL AFRICAN REPUBLIC (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6574),
                            Name = "CFA Franc BEAC",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 44,
                            Code = "XAF",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6578),
                            Description = "CHAD",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6580),
                            Name = "CFA Franc BEAC",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 45,
                            Code = "CLF",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6584),
                            Description = "CHILE",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6586),
                            Name = "Unidad de Fomento",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 46,
                            Code = "CLP",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6591),
                            Description = "CHILE",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6592),
                            Name = "Chilean Peso",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 47,
                            Code = "CNY",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6597),
                            Description = "CHINA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6599),
                            Name = "Yuan Renminbi",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 48,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6603),
                            Description = "CHRISTMAS ISLAND",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6605),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 49,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6609),
                            Description = "COCOS (KEELING) ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6611),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 50,
                            Code = "COP",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6624),
                            Description = "COLOMBIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6625),
                            Name = "Colombian Peso",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 51,
                            Code = "COU",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6630),
                            Description = "COLOMBIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6632),
                            Name = "Unidad de Valor Real",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 52,
                            Code = "KMF",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6637),
                            Description = "COMOROS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6638),
                            Name = "Comoro Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 53,
                            Code = "CDF",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6643),
                            Description = "CONGO (THE DEMOCRATIC REPUBLIC OF THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6644),
                            Name = "Congolese Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 54,
                            Code = "XAF",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6649),
                            Description = "CONGO (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6650),
                            Name = "CFA Franc BEAC",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 55,
                            Code = "NZD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6655),
                            Description = "COOK ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6657),
                            Name = "New Zealand Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 56,
                            Code = "CRC",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6661),
                            Description = "COSTA RICA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6663),
                            Name = "Costa Rican Colon",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 57,
                            Code = "HRK",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6667),
                            Description = "CROATIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6669),
                            Name = "Kuna",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 58,
                            Code = "CUC",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6674),
                            Description = "CUBA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6675),
                            Name = "Peso Convertible",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 59,
                            Code = "CUP",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6680),
                            Description = "CUBA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6682),
                            Name = "Cuban Peso",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 60,
                            Code = "ANG",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6687),
                            Description = "CURAÇAO",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6688),
                            Name = "Netherlands Antillean Guilder",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 61,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6693),
                            Description = "CYPRUS",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6694),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 62,
                            Code = "CZK",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6699),
                            Description = "CZECH REPUBLIC (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6701),
                            Name = "Czech Koruna",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 63,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6705),
                            Description = "CÔTE D'IVOIRE",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6707),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 64,
                            Code = "DKK",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6711),
                            Description = "DENMARK",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6713),
                            Name = "Danish Krone",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 65,
                            Code = "DJF",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6717),
                            Description = "DJIBOUTI",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6719),
                            Name = "Djibouti Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 66,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6724),
                            Description = "DOMINICA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6725),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 67,
                            Code = "DOP",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6730),
                            Description = "DOMINICAN REPUBLIC (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6731),
                            Name = "Dominican Peso",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 68,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6736),
                            Description = "ECUADOR",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6738),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 69,
                            Code = "EGP",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6742),
                            Description = "EGYPT",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6744),
                            Name = "Egyptian Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 70,
                            Code = "SVC",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6748),
                            Description = "EL SALVADOR",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6750),
                            Name = "El Salvador Colon",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 71,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6754),
                            Description = "EL SALVADOR",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6756),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 72,
                            Code = "XAF",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6760),
                            Description = "EQUATORIAL GUINEA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6762),
                            Name = "CFA Franc BEAC",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 73,
                            Code = "ERN",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6766),
                            Description = "ERITREA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6768),
                            Name = "Nakfa",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 74,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6773),
                            Description = "ESTONIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6774),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 75,
                            Code = "ETB",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6785),
                            Description = "ETHIOPIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6786),
                            Name = "Ethiopian Birr",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 76,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6791),
                            Description = "EUROPEAN UNION",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6793),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 77,
                            Code = "FKP",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6797),
                            Description = "FALKLAND ISLANDS (THE) [MALVINAS]",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6799),
                            Name = "Falkland Islands Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 78,
                            Code = "DKK",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6803),
                            Description = "FAROE ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6805),
                            Name = "Danish Krone",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 79,
                            Code = "FJD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6810),
                            Description = "FIJI",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6811),
                            Name = "Fiji Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 80,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6816),
                            Description = "FINLAND",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6817),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 81,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6822),
                            Description = "FRANCE",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6824),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 82,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6828),
                            Description = "FRENCH GUIANA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6830),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 83,
                            Code = "XPF",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6834),
                            Description = "FRENCH POLYNESIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6836),
                            Name = "CFP Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 84,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6840),
                            Description = "FRENCH SOUTHERN TERRITORIES (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6842),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 85,
                            Code = "XAF",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6846),
                            Description = "GABON",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6848),
                            Name = "CFA Franc BEAC",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 86,
                            Code = "GMD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6852),
                            Description = "GAMBIA (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6854),
                            Name = "Dalasi",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 87,
                            Code = "GEL",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6858),
                            Description = "GEORGIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6860),
                            Name = "Lari",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 88,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6864),
                            Description = "GERMANY",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6866),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 89,
                            Code = "GHS",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6871),
                            Description = "GHANA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6872),
                            Name = "Ghana Cedi",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 90,
                            Code = "GIP",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6877),
                            Description = "GIBRALTAR",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6879),
                            Name = "Gibraltar Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 91,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6883),
                            Description = "GREECE",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6885),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 92,
                            Code = "DKK",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6889),
                            Description = "GREENLAND",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6891),
                            Name = "Danish Krone",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 93,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6896),
                            Description = "GRENADA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6897),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 94,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6902),
                            Description = "GUADELOUPE",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6904),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 95,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6908),
                            Description = "GUAM",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6910),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 96,
                            Code = "GTQ",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6915),
                            Description = "GUATEMALA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6917),
                            Name = "Quetzal",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 97,
                            Code = "GBP",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6921),
                            Description = "GUERNSEY",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6923),
                            Name = "Pound Sterling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 98,
                            Code = "GNF",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6927),
                            Description = "GUINEA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6929),
                            Name = "Guinea Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 99,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6933),
                            Description = "GUINEA-BISSAU",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6935),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 100,
                            Code = "GYD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6939),
                            Description = "GUYANA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6941),
                            Name = "Guyana Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 101,
                            Code = "HTG",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6958),
                            Description = "HAITI",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6960),
                            Name = "Gourde",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 102,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6964),
                            Description = "HAITI",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6966),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 103,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6970),
                            Description = "HEARD ISLAND AND McDONALD ISLANDS",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6972),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 104,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6977),
                            Description = "HOLY SEE (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6979),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 105,
                            Code = "HNL",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6983),
                            Description = "HONDURAS",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6985),
                            Name = "Lempira",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 106,
                            Code = "HKD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6989),
                            Description = "HONG KONG",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6991),
                            Name = "Hong Kong Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 107,
                            Code = "HUF",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6995),
                            Description = "HUNGARY",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(6997),
                            Name = "Forint",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 108,
                            Code = "ISK",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7001),
                            Description = "ICELAND",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7003),
                            Name = "Iceland Krona",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 109,
                            Code = "INR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7008),
                            Description = "INDIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7010),
                            Name = "Indian Rupee",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 110,
                            Code = "IDR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7014),
                            Description = "INDONESIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7016),
                            Name = "Rupiah",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 111,
                            Code = "XDR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7020),
                            Description = "INTERNATIONAL MONETARY FUND (IMF) ",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7022),
                            Name = "SDR (Special Drawing Right)",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 112,
                            Code = "IRR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7027),
                            Description = "IRAN (ISLAMIC REPUBLIC OF)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7028),
                            Name = "Iranian Rial",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 113,
                            Code = "IQD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7033),
                            Description = "IRAQ",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7034),
                            Name = "Iraqi Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 114,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7039),
                            Description = "IRELAND",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7041),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 115,
                            Code = "GBP",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7045),
                            Description = "ISLE OF MAN",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7047),
                            Name = "Pound Sterling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 116,
                            Code = "ILS",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7052),
                            Description = "ISRAEL",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7053),
                            Name = "New Israeli Sheqel",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 117,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7058),
                            Description = "ITALY",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7059),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 118,
                            Code = "JMD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7064),
                            Description = "JAMAICA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7065),
                            Name = "Jamaican Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 119,
                            Code = "JPY",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7070),
                            Description = "JAPAN",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7072),
                            Name = "Yen",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 120,
                            Code = "GBP",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7076),
                            Description = "JERSEY",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7078),
                            Name = "Pound Sterling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 121,
                            Code = "JOD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7082),
                            Description = "JORDAN",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7084),
                            Name = "Jordanian Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 122,
                            Code = "KZT",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7088),
                            Description = "KAZAKHSTAN",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7090),
                            Name = "Tenge",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 123,
                            Code = "KES",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7094),
                            Description = "KENYA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7096),
                            Name = "Kenyan Shilling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 124,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7100),
                            Description = "KIRIBATI",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7102),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 125,
                            Code = "KPW",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7107),
                            Description = "KOREA (THE DEMOCRATIC PEOPLE’S REPUBLIC OF)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7108),
                            Name = "North Korean Won",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 126,
                            Code = "KRW",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7256),
                            Description = "KOREA (THE REPUBLIC OF)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7260),
                            Name = "Won",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 127,
                            Code = "KWD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7265),
                            Description = "KUWAIT",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7267),
                            Name = "Kuwaiti Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 128,
                            Code = "KGS",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7271),
                            Description = "KYRGYZSTAN",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7273),
                            Name = "Som",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 129,
                            Code = "LAK",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7277),
                            Description = "LAO PEOPLE’S DEMOCRATIC REPUBLIC (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7279),
                            Name = "Kip",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 130,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7283),
                            Description = "LATVIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7285),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 131,
                            Code = "LBP",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7290),
                            Description = "LEBANON",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7291),
                            Name = "Lebanese Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 132,
                            Code = "LSL",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7296),
                            Description = "LESOTHO",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7298),
                            Name = "Loti",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 133,
                            Code = "ZAR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7302),
                            Description = "LESOTHO",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7304),
                            Name = "Rand",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 134,
                            Code = "LRD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7308),
                            Description = "LIBERIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7310),
                            Name = "Liberian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 135,
                            Code = "LYD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7314),
                            Description = "LIBYA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7316),
                            Name = "Libyan Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 136,
                            Code = "CHF",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7322),
                            Description = "LIECHTENSTEIN",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7323),
                            Name = "Swiss Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 137,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7328),
                            Description = "LITHUANIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7330),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 138,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7334),
                            Description = "LUXEMBOURG",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7336),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 139,
                            Code = "MOP",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7340),
                            Description = "MACAO",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7342),
                            Name = "Pataca",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 140,
                            Code = "MGA",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7347),
                            Description = "MADAGASCAR",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7348),
                            Name = "Malagasy Ariary",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 141,
                            Code = "MWK",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7353),
                            Description = "MALAWI",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7354),
                            Name = "Kwacha",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 142,
                            Code = "MYR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7359),
                            Description = "MALAYSIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7361),
                            Name = "Malaysian Ringgit",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 143,
                            Code = "MVR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7365),
                            Description = "MALDIVES",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7367),
                            Name = "Rufiyaa",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 144,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7371),
                            Description = "MALI",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7373),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 145,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7378),
                            Description = "MALTA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7379),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 146,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7384),
                            Description = "MARSHALL ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7385),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 147,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7390),
                            Description = "MARTINIQUE",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7392),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 148,
                            Code = "MRU",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7396),
                            Description = "MAURITANIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7398),
                            Name = "Ouguiya",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 149,
                            Code = "MUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7402),
                            Description = "MAURITIUS",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7404),
                            Name = "Mauritius Rupee",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 150,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7408),
                            Description = "MAYOTTE",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7410),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 151,
                            Code = "MXN",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7415),
                            Description = "MEXICO",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7416),
                            Name = "Mexican Peso",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 152,
                            Code = "MXV",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7428),
                            Description = "MEXICO",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7430),
                            Name = "Mexican Unidad de Inversion (UDI)",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 153,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7434),
                            Description = "MICRONESIA (FEDERATED STATES OF)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7436),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 154,
                            Code = "MDL",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7440),
                            Description = "MOLDOVA (THE REPUBLIC OF)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7442),
                            Name = "Moldovan Leu",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 155,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7447),
                            Description = "MONACO",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7449),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 156,
                            Code = "MNT",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7453),
                            Description = "MONGOLIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7455),
                            Name = "Tugrik",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 157,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7459),
                            Description = "MONTENEGRO",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7461),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 158,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7466),
                            Description = "MONTSERRAT",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7467),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 159,
                            Code = "MAD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7472),
                            Description = "MOROCCO",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7473),
                            Name = "Moroccan Dirham",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 160,
                            Code = "MZN",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7478),
                            Description = "MOZAMBIQUE",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7480),
                            Name = "Mozambique Metical",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 161,
                            Code = "MMK",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7484),
                            Description = "MYANMAR",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7486),
                            Name = "Kyat",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 162,
                            Code = "NAD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7490),
                            Description = "NAMIBIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7492),
                            Name = "Namibia Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 163,
                            Code = "ZAR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7497),
                            Description = "NAMIBIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7499),
                            Name = "Rand",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 164,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7503),
                            Description = "NAURU",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7505),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 165,
                            Code = "NPR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7509),
                            Description = "NEPAL",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7511),
                            Name = "Nepalese Rupee",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 166,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7515),
                            Description = "NETHERLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7517),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 167,
                            Code = "XPF",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7522),
                            Description = "NEW CALEDONIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7524),
                            Name = "CFP Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 168,
                            Code = "NZD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7529),
                            Description = "NEW ZEALAND",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7530),
                            Name = "New Zealand Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 169,
                            Code = "NIO",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7535),
                            Description = "NICARAGUA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7537),
                            Name = "Cordoba Oro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 170,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7541),
                            Description = "NIGER (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7543),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 171,
                            Code = "NGN",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7547),
                            Description = "NIGERIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7549),
                            Name = "Naira",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 172,
                            Code = "NZD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7553),
                            Description = "NIUE",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7555),
                            Name = "New Zealand Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 173,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7559),
                            Description = "NORFOLK ISLAND",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7562),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 174,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7566),
                            Description = "NORTHERN MARIANA ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7568),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 175,
                            Code = "NOK",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7572),
                            Description = "NORWAY",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7574),
                            Name = "Norwegian Krone",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 176,
                            Code = "OMR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7578),
                            Description = "OMAN",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7580),
                            Name = "Rial Omani",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 177,
                            Code = "PKR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7590),
                            Description = "PAKISTAN",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7592),
                            Name = "Pakistan Rupee",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 178,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7597),
                            Description = "PALAU",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7599),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 179,
                            Code = "PAB",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7603),
                            Description = "PANAMA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7605),
                            Name = "Balboa",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 180,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7609),
                            Description = "PANAMA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7611),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 181,
                            Code = "PGK",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7616),
                            Description = "PAPUA NEW GUINEA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7617),
                            Name = "Kina",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 182,
                            Code = "PYG",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7622),
                            Description = "PARAGUAY",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7623),
                            Name = "Guarani",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 183,
                            Code = "PEN",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7628),
                            Description = "PERU",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7630),
                            Name = "Nuevo Sol",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 184,
                            Code = "PHP",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7635),
                            Description = "PHILIPPINES (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7637),
                            Name = "Philippine Peso",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 185,
                            Code = "NZD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7641),
                            Description = "PITCAIRN",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7643),
                            Name = "New Zealand Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 186,
                            Code = "PLN",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7647),
                            Description = "POLAND",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7649),
                            Name = "Zloty",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 187,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7653),
                            Description = "PORTUGAL",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7655),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 188,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7660),
                            Description = "PUERTO RICO",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7661),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 189,
                            Code = "QAR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7666),
                            Description = "QATAR",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7668),
                            Name = "Qatari Rial",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 190,
                            Code = "MKD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7672),
                            Description = "REPUBLIC OF NORTH MACEDONIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7674),
                            Name = "Denar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 191,
                            Code = "RON",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7678),
                            Description = "ROMANIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7680),
                            Name = "Romanian Leu",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 192,
                            Code = "RUB",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7685),
                            Description = "RUSSIAN FEDERATION (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7686),
                            Name = "Russian Ruble",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 193,
                            Code = "RWF",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7691),
                            Description = "RWANDA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7693),
                            Name = "Rwanda Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 194,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7697),
                            Description = "RÉUNION",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7699),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 195,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7704),
                            Description = "SAINT BARTHÉLEMY",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7705),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 196,
                            Code = "SHP",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7710),
                            Description = "SAINT HELENA, ASCENSION AND TRISTAN DA CUNHA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7712),
                            Name = "Saint Helena Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 197,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7716),
                            Description = "SAINT KITTS AND NEVIS",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7718),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 198,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7722),
                            Description = "SAINT LUCIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7724),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 199,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7728),
                            Description = "SAINT MARTIN (FRENCH PART)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7730),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 200,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7734),
                            Description = "SAINT PIERRE AND MIQUELON",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7736),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 201,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7741),
                            Description = "SAINT VINCENT AND THE GRENADINES",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7743),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 202,
                            Code = "WST",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7747),
                            Description = "SAMOA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7749),
                            Name = "Tala",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 203,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7760),
                            Description = "SAN MARINO",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7762),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 204,
                            Code = "STN",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7766),
                            Description = "SAO TOME AND PRINCIPE",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7768),
                            Name = "Dobra",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 205,
                            Code = "SAR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7773),
                            Description = "SAUDI ARABIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7774),
                            Name = "Saudi Riyal",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 206,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7779),
                            Description = "SENEGAL",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7781),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 207,
                            Code = "RSD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7785),
                            Description = "SERBIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7787),
                            Name = "Serbian Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 208,
                            Code = "SCR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7791),
                            Description = "SEYCHELLES",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7793),
                            Name = "Seychelles Rupee",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 209,
                            Code = "SLL",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7797),
                            Description = "SIERRA LEONE",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7799),
                            Name = "Leone",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 210,
                            Code = "SGD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7804),
                            Description = "SINGAPORE",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7805),
                            Name = "Singapore Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 211,
                            Code = "ANG",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7810),
                            Description = "SINT MAARTEN (DUTCH PART)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7812),
                            Name = "Netherlands Antillean Guilder",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 212,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7817),
                            Description = "SLOVAKIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7818),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 213,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7823),
                            Description = "SLOVENIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7825),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 214,
                            Code = "SBD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7829),
                            Description = "SOLOMON ISLANDS",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7831),
                            Name = "Solomon Islands Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 215,
                            Code = "SOS",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7835),
                            Description = "SOMALIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7837),
                            Name = "Somali Shilling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 216,
                            Code = "ZAR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7841),
                            Description = "SOUTH AFRICA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7843),
                            Name = "Rand",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 217,
                            Code = "SSP",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7848),
                            Description = "SOUTH SUDAN",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7849),
                            Name = "South Sudanese Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 218,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7854),
                            Description = "SPAIN",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7855),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 219,
                            Code = "LKR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7860),
                            Description = "SRI LANKA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7862),
                            Name = "Sri Lanka Rupee",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 220,
                            Code = "SDG",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7866),
                            Description = "SUDAN (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7868),
                            Name = "Sudanese Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 221,
                            Code = "SRD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7873),
                            Description = "SURINAME",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7874),
                            Name = "Surinam Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 222,
                            Code = "NOK",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7879),
                            Description = "SVALBARD AND JAN MAYEN",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7880),
                            Name = "Norwegian Krone",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 223,
                            Code = "SZL",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7885),
                            Description = "SWAZILAND",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7887),
                            Name = "Lilangeni",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 224,
                            Code = "SEK",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7891),
                            Description = "SWEDEN",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7893),
                            Name = "Swedish Krona",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 225,
                            Code = "CHE",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7898),
                            Description = "SWITZERLAND",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7899),
                            Name = "WIR Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 226,
                            Code = "CHF",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7904),
                            Description = "SWITZERLAND",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7905),
                            Name = "Swiss Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 227,
                            Code = "CHW",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7910),
                            Description = "SWITZERLAND",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7912),
                            Name = "WIR Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 228,
                            Code = "SYP",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7916),
                            Description = "SYRIAN ARAB REPUBLIC",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7918),
                            Name = "Syrian Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 229,
                            Code = "TWD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7928),
                            Description = "TAIWAN (PROVINCE OF CHINA)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7930),
                            Name = "New Taiwan Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 230,
                            Code = "TJS",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7935),
                            Description = "TAJIKISTAN",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7937),
                            Name = "Somoni",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 231,
                            Code = "TZS",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7941),
                            Description = "TANZANIA, UNITED REPUBLIC OF",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7943),
                            Name = "Tanzanian Shilling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 232,
                            Code = "THB",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7947),
                            Description = "THAILAND",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7949),
                            Name = "Baht",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 233,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7953),
                            Description = "TIMOR-LESTE",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7955),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 234,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7959),
                            Description = "TOGO",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7961),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 235,
                            Code = "NZD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7965),
                            Description = "TOKELAU",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7967),
                            Name = "New Zealand Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 236,
                            Code = "TOP",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7971),
                            Description = "TONGA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7973),
                            Name = "Pa’anga",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 237,
                            Code = "TTD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7977),
                            Description = "TRINIDAD AND TOBAGO",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7979),
                            Name = "Trinidad and Tobago Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 238,
                            Code = "TND",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7983),
                            Description = "TUNISIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7985),
                            Name = "Tunisian Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 239,
                            Code = "TRY",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7990),
                            Description = "TURKEY",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7991),
                            Name = "Turkish Lira",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 240,
                            Code = "TMT",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7996),
                            Description = "TURKMENISTAN",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(7997),
                            Name = "Turkmenistan New Manat",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 241,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8002),
                            Description = "TURKS AND CAICOS ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8004),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 242,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8008),
                            Description = "TUVALU",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8010),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 243,
                            Code = "UGX",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8014),
                            Description = "UGANDA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8016),
                            Name = "Uganda Shilling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 244,
                            Code = "UAH",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8020),
                            Description = "UKRAINE",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8022),
                            Name = "Hryvnia",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 245,
                            Code = "AED",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8026),
                            Description = "UNITED ARAB EMIRATES (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8028),
                            Name = "UAE Dirham",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 246,
                            Code = "GBP",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8033),
                            Description = "UNITED KINGDOM OF GREAT BRITAIN AND NORTHERN IRELAND (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8035),
                            Name = "Pound Sterling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 247,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8039),
                            Description = "UNITED STATES MINOR OUTLYING ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8041),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 248,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8045),
                            Description = "UNITED STATES OF AMERICA (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8047),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 249,
                            Code = "USN",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8051),
                            Description = "UNITED STATES OF AMERICA (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8053),
                            Name = "US Dollar (Next day)",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 250,
                            Code = "UYI",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8058),
                            Description = "URUGUAY",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8060),
                            Name = "Uruguay Peso en Unidades Indexadas (URUIURUI)",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 251,
                            Code = "UYU",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8064),
                            Description = "URUGUAY",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8066),
                            Name = "Peso Uruguayo",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 252,
                            Code = "UZS",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8070),
                            Description = "UZBEKISTAN",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8072),
                            Name = "Uzbekistan Sum",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 253,
                            Code = "VUV",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8077),
                            Description = "VANUATU",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8078),
                            Name = "Vatu",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 254,
                            Code = "VEF",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8089),
                            Description = "VENEZUELA (BOLIVARIAN REPUBLIC OF)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8090),
                            Name = "Bolivar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 255,
                            Code = "VND",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8095),
                            Description = "VIET NAM",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8097),
                            Name = "Dong",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 256,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8101),
                            Description = "VIRGIN ISLANDS (BRITISH)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8103),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 257,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8107),
                            Description = "VIRGIN ISLANDS (U.S.)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8109),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 258,
                            Code = "XPF",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8113),
                            Description = "WALLIS AND FUTUNA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8115),
                            Name = "CFP Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 259,
                            Code = "MAD",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8119),
                            Description = "WESTERN SAHARA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8121),
                            Name = "Moroccan Dirham",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 260,
                            Code = "YER",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8126),
                            Description = "YEMEN",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8128),
                            Name = "Yemeni Rial",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 261,
                            Code = "ZMW",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8132),
                            Description = "ZAMBIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8134),
                            Name = "Zambian Kwacha",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 262,
                            Code = "ZWL",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8138),
                            Description = "ZIMBABWE",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8140),
                            Name = "Zimbabwe Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 263,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8144),
                            Description = "ÅLAND ISLANDS",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 431, DateTimeKind.Local).AddTicks(8146),
                            Name = "Euro",
                            Symbol = " "
                        });
                });

            modelBuilder.Entity("MM.ClientModels.CustomField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime1")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime10")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime11")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime12")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime13")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime14")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime15")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime16")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime17")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime18")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime19")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime2")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime20")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime3")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime4")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime5")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime6")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime7")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime8")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime9")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("Decimal1")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal10")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal11")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal12")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal13")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal14")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal15")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal16")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal17")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal18")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal19")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal2")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal20")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal3")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal4")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal5")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal6")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal7")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal8")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal9")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("Int1")
                        .HasColumnType("int");

                    b.Property<int?>("Int10")
                        .HasColumnType("int");

                    b.Property<int?>("Int11")
                        .HasColumnType("int");

                    b.Property<int?>("Int12")
                        .HasColumnType("int");

                    b.Property<int?>("Int13")
                        .HasColumnType("int");

                    b.Property<int?>("Int14")
                        .HasColumnType("int");

                    b.Property<int?>("Int15")
                        .HasColumnType("int");

                    b.Property<int?>("Int16")
                        .HasColumnType("int");

                    b.Property<int?>("Int17")
                        .HasColumnType("int");

                    b.Property<int?>("Int18")
                        .HasColumnType("int");

                    b.Property<int?>("Int19")
                        .HasColumnType("int");

                    b.Property<int?>("Int2")
                        .HasColumnType("int");

                    b.Property<int?>("Int20")
                        .HasColumnType("int");

                    b.Property<int?>("Int3")
                        .HasColumnType("int");

                    b.Property<int?>("Int4")
                        .HasColumnType("int");

                    b.Property<int?>("Int5")
                        .HasColumnType("int");

                    b.Property<int?>("Int6")
                        .HasColumnType("int");

                    b.Property<int?>("Int7")
                        .HasColumnType("int");

                    b.Property<int?>("Int8")
                        .HasColumnType("int");

                    b.Property<int?>("Int9")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup1")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup10")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup11")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup12")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup13")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup14")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup15")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup16")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup17")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup18")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup19")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup2")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup20")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup3")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup4")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup5")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup6")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup7")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup8")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup9")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TableName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("TablePrimaryKeyValue")
                        .HasColumnType("int");

                    b.Property<string>("Text1")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text10")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text11")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text12")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text13")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text14")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text15")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text16")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text17")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text18")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text19")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text2")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text20")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text3")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text4")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text5")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text6")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text7")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text8")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text9")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("CustomField");
                });

            modelBuilder.Entity("MM.ClientModels.CustomFieldLookUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("FieldIndex")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("CustomFieldLookUp");
                });

            modelBuilder.Entity("MM.ClientModels.CustomFieldName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DataType")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("FieldIndex")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("CustomFieldName");
                });

            modelBuilder.Entity("MM.ClientModels.DateSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(40) CHARACTER SET utf8mb4")
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.ToTable("DateSetting");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 445, DateTimeKind.Local).AddTicks(978),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 445, DateTimeKind.Local).AddTicks(1900),
                            Name = "12/03/2020"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 445, DateTimeKind.Local).AddTicks(2786),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 445, DateTimeKind.Local).AddTicks(2810),
                            Name = "03/12/2020"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 445, DateTimeKind.Local).AddTicks(2824),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 445, DateTimeKind.Local).AddTicks(2826),
                            Name = "03.12.2020"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 445, DateTimeKind.Local).AddTicks(2829),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 445, DateTimeKind.Local).AddTicks(2832),
                            Name = "03-12-2020"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 445, DateTimeKind.Local).AddTicks(2835),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 445, DateTimeKind.Local).AddTicks(2837),
                            Name = "03 Dec 2020"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 445, DateTimeKind.Local).AddTicks(2840),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 445, DateTimeKind.Local).AddTicks(2842),
                            Name = "03-Dec-2020"
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 445, DateTimeKind.Local).AddTicks(2932),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 445, DateTimeKind.Local).AddTicks(2935),
                            Name = "2020-12-03"
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 445, DateTimeKind.Local).AddTicks(2938),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 445, DateTimeKind.Local).AddTicks(2940),
                            Name = "Friday, December 03, 2020"
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 445, DateTimeKind.Local).AddTicks(2943),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 445, DateTimeKind.Local).AddTicks(2944),
                            Name = "Fri, December 03, 2020"
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 445, DateTimeKind.Local).AddTicks(2948),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 445, DateTimeKind.Local).AddTicks(2949),
                            Name = "December 03, 2020"
                        },
                        new
                        {
                            Id = 11,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 445, DateTimeKind.Local).AddTicks(2952),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 445, DateTimeKind.Local).AddTicks(2954),
                            Name = "03 December 2020"
                        },
                        new
                        {
                            Id = 12,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 445, DateTimeKind.Local).AddTicks(2957),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 445, DateTimeKind.Local).AddTicks(2959),
                            Name = "3 Dec 2020"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Designation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Designation");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 448, DateTimeKind.Local).AddTicks(6467),
                            Description = "Operations manager",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 448, DateTimeKind.Local).AddTicks(7409),
                            Name = "Operations manager"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 448, DateTimeKind.Local).AddTicks(8330),
                            Description = "Quality control, safety, environmental manager",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 448, DateTimeKind.Local).AddTicks(8351),
                            Name = "Quality control, safety, environmental manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 448, DateTimeKind.Local).AddTicks(8366),
                            Description = "Accountant, bookkeeper, controller",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 448, DateTimeKind.Local).AddTicks(8369),
                            Name = "Accountant, bookkeeper, controller"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 448, DateTimeKind.Local).AddTicks(8372),
                            Description = "Office manager",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 448, DateTimeKind.Local).AddTicks(8374),
                            Name = "Office manager"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 448, DateTimeKind.Local).AddTicks(8377),
                            Description = "Receptionist",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 448, DateTimeKind.Local).AddTicks(8379),
                            Name = "Receptionist"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 448, DateTimeKind.Local).AddTicks(8383),
                            Description = "Foreperson, supervisor, lead person",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 448, DateTimeKind.Local).AddTicks(8384),
                            Name = "Foreperson, supervisor, lead person"
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 448, DateTimeKind.Local).AddTicks(8388),
                            Description = "Marketing manager",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 448, DateTimeKind.Local).AddTicks(8390),
                            Name = "Marketing manager"
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 448, DateTimeKind.Local).AddTicks(8393),
                            Description = "Purchasing manager",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 448, DateTimeKind.Local).AddTicks(8394),
                            Name = "Purchasing manager"
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 448, DateTimeKind.Local).AddTicks(8397),
                            Description = "Shipping and receiving person or manager",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 448, DateTimeKind.Local).AddTicks(8399),
                            Name = "Shipping and receiving person or manager"
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 448, DateTimeKind.Local).AddTicks(8402),
                            Description = "Professional staff",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 448, DateTimeKind.Local).AddTicks(8404),
                            Name = "Professional staff"
                        },
                        new
                        {
                            Id = 11,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 448, DateTimeKind.Local).AddTicks(8407),
                            Description = "Production Manager",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 448, DateTimeKind.Local).AddTicks(8409),
                            Name = "Production Manager"
                        },
                        new
                        {
                            Id = 12,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 448, DateTimeKind.Local).AddTicks(8412),
                            Description = "Chief Financial Officer (CFO)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 448, DateTimeKind.Local).AddTicks(8413),
                            Name = "Chief Financial Officer (CFO)"
                        },
                        new
                        {
                            Id = 13,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 448, DateTimeKind.Local).AddTicks(8416),
                            Description = "Vice President of Marketing or Marketing Manager",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 448, DateTimeKind.Local).AddTicks(8418),
                            Name = "Vice President of Marketing or Marketing Manager"
                        },
                        new
                        {
                            Id = 14,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 448, DateTimeKind.Local).AddTicks(8422),
                            Description = "Chief Operating Officer (COO)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 448, DateTimeKind.Local).AddTicks(8424),
                            Name = "Chief Operating Officer (COO)"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Chief Executive Officer (CEO) or President",
                            Name = "Chief Executive Officer (CEO) or President"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Donation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DonatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DonorNotes")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("PromotionDetailId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("PromotionDetailId");

                    b.ToTable("Donation");
                });

            modelBuilder.Entity("MM.ClientModels.EmailCcrule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EmailTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmailTypeId");

                    b.HasIndex("RoleId");

                    b.ToTable("EmailCCRule");
                });

            modelBuilder.Entity("MM.ClientModels.EmailTemplateContent", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailContent")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasMaxLength(4000);

                    b.Property<int>("EmailTemplateNameId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("EmailTemplateNameId");

                    b.ToTable("EmailTemplateContent");
                });

            modelBuilder.Entity("MM.ClientModels.EmailTemplateName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("EmailTemplateName");
                });

            modelBuilder.Entity("MM.ClientModels.EmailType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("EmailType");
                });

            modelBuilder.Entity("MM.ClientModels.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("MM.ClientModels.EquipmentCount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AvaialbleCount")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.ToTable("EquipmentCount");
                });

            modelBuilder.Entity("MM.ClientModels.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<bool>("AllowCancellations")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("AllowGuestRegistrations")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("AllowRegistration")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CancellationbeforeDays")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(2000) CHARACTER SET utf8mb4")
                        .HasMaxLength(2000);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time(2)");

                    b.Property<string>("EventUniqueName")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<int?>("GuestLimitPerRegistrant")
                        .HasColumnType("int");

                    b.Property<bool>("InternalOrExternal")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsChargableEvent")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsCpdevent")
                        .HasColumnName("IsCPDEvent")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MaxRegistrationsAllowed")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("OrganizerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegEndDate")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan>("RegEndTime")
                        .HasColumnType("time(2)");

                    b.Property<DateTime>("RegStartDate")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan>("RegStartTime")
                        .HasColumnType("time(2)");

                    b.Property<bool>("ShowMaxRegistrationsAllowed")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time(2)");

                    b.Property<int>("TimeZoneId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("OrganizerId");

                    b.HasIndex("TimeZoneId");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("MM.ClientModels.EventAccess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool?>("AdminOnly")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("Anyone")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<bool?>("RestrictedList")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("EventAccess");
                });

            modelBuilder.Entity("MM.ClientModels.EventAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan>("SignInTime")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan>("SingOutTime")
                        .HasColumnType("time(6)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("MemberId");

                    b.ToTable("EventAttendance");
                });

            modelBuilder.Entity("MM.ClientModels.EventCommunication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Announcement1ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Announcement1Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Announcement1SentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Announcement2ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Announcement2Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Announcement2SentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Announcement3ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Announcement3Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Announcement3SentDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Reminder1ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Reminder1Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Reminder1SentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Reminder2ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Reminder2Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Reminder2SentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Reminder3ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Reminder3Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Reminder3SentDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("EventCommunication");
                });

            modelBuilder.Entity("MM.ClientModels.EventCost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 3)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EventCostItemId")
                        .HasColumnType("int");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("EventCost");
                });

            modelBuilder.Entity("MM.ClientModels.EventCostItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("EventCostItem");
                });

            modelBuilder.Entity("MM.ClientModels.EventEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RequiredCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("EventId");

                    b.ToTable("EventEquipment");
                });

            modelBuilder.Entity("MM.ClientModels.EventMinute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AssignedTo")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("Heading")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Minute")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("MinuteStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RaisedBy")
                        .HasColumnType("int");

                    b.Property<string>("SubHeading")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("MinuteStatusId");

                    b.ToTable("EventMinute");
                });

            modelBuilder.Entity("MM.ClientModels.EventMinuteStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("EventMinuteStatus");
                });

            modelBuilder.Entity("MM.ClientModels.EventPreRequisiteEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PreRequisiteEventId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("PreRequisiteEventId");

                    b.ToTable("EventPreRequisiteEvent");
                });

            modelBuilder.Entity("MM.ClientModels.EventRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Cancelled")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("EventResponseTypeId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("NumberOfGuests")
                        .HasColumnType("int");

                    b.Property<bool>("Paid")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("EventResponseTypeId");

                    b.HasIndex("MemberId");

                    b.ToTable("EventRegistration");
                });

            modelBuilder.Entity("MM.ClientModels.EventResponseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("EventResponseType");
                });

            modelBuilder.Entity("MM.ClientModels.EventRestrictionList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberLevelId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberTeamId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("MemberLevelId");

                    b.HasIndex("MemberTeamId");

                    b.ToTable("EventRestrictionList");
                });

            modelBuilder.Entity("MM.ClientModels.EventRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasMaxLength(500);

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("EventRole");
                });

            modelBuilder.Entity("MM.ClientModels.EventRoleUserXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int>("EventRoleId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventRoleId");

                    b.HasIndex("UserId");

                    b.ToTable("EventRoleUserXRef");
                });

            modelBuilder.Entity("MM.ClientModels.FileType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("FileType");
                });

            modelBuilder.Entity("MM.ClientModels.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Gender");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 530, DateTimeKind.Local).AddTicks(9328),
                            Description = "Male",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 531, DateTimeKind.Local).AddTicks(221),
                            Name = "Male"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 531, DateTimeKind.Local).AddTicks(1111),
                            Description = "Female",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 531, DateTimeKind.Local).AddTicks(1131),
                            Name = "Female"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 531, DateTimeKind.Local).AddTicks(1145),
                            Description = "Other",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 531, DateTimeKind.Local).AddTicks(1147),
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CommentsForPayer")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("InternalNotes")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<decimal>("InvoiceAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("InvoiceCode")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InvoiceItem")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("InvoiceStatusId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PaymentGatewayId")
                        .HasColumnType("int");

                    b.Property<int?>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int?>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceStatusId");

                    b.HasIndex("MemberId");

                    b.HasIndex("PaymentGatewayId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("MM.ClientModels.InvoiceSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("CopyInvToOrgContact")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CopyRecToOrgContact")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("NextInvoiceNumber")
                        .HasColumnType("int");

                    b.Property<bool>("SendInvForPendingPayments")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("SendRecToPayer")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("InvoiceSetting");
                });

            modelBuilder.Entity("MM.ClientModels.InvoiceStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("InvoiceStatus");
                });

            modelBuilder.Entity("MM.ClientModels.LandingPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("MemberTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberTypeId");

                    b.HasIndex("PageId");

                    b.ToTable("LandingPage");
                });

            modelBuilder.Entity("MM.ClientModels.MarketingGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("MarketingGroup");
                });

            modelBuilder.Entity("MM.ClientModels.MarketingGroupXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("MarketingGroupId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("MarketingGroupId");

                    b.HasIndex("MemberId");

                    b.ToTable("MarketingGroupXRef");
                });

            modelBuilder.Entity("MM.ClientModels.MarketingProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("MarketingProfile");
                });

            modelBuilder.Entity("MM.ClientModels.MarketingProfileXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("MarketingProfileId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("MarketingProfileId");

                    b.HasIndex("MemberId");

                    b.ToTable("MarketingProfileXRef");
                });

            modelBuilder.Entity("MM.ClientModels.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ConfirmedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<bool>("EmailActivated")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsBillingContact")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsBranchContact")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("MemberBranchId")
                        .HasColumnType("int");

                    b.Property<string>("MemberCode")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("MemberLevelId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberTeamId")
                        .HasColumnType("int");

                    b.Property<int>("MemberTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("MembershipConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("NextRenewalDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int?>("OrganizationStructureId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<byte[]>("Photo")
                        .HasColumnType("blob");

                    b.Property<int?>("ReferralTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("TermAccepted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("TitleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.HasIndex("MemberBranchId");

                    b.HasIndex("MemberLevelId");

                    b.HasIndex("MemberStatusId");

                    b.HasIndex("MemberTeamId");

                    b.HasIndex("MemberTypeId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("OrganizationStructureId");

                    b.HasIndex("ReferralTypeId");

                    b.HasIndex("TitleId");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("MM.ClientModels.MemberAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("AddressLine2")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("AddressTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("BuidlingName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("ComplexName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Gpscoordinates")
                        .HasColumnName("GPSCoordinates")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("PrimaryContactNo")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("PrimaryEmail")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("SecondaryContactNo")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("SecondaryEmail")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("StreetName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("AddressTypeId");

                    b.HasIndex("BranchId");

                    b.HasIndex("MemberId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("MemberAddress");
                });

            modelBuilder.Entity("MM.ClientModels.MemberAffliationXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("AffliatedFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("AffliatedTill")
                        .HasColumnType("datetime");

                    b.Property<int?>("AffliationId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<bool>("IsActiveAffliatedNow")
                        .HasColumnName("isActiveAffliatedNow")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("MemberSpecificAffliationName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("AffliationId");

                    b.HasIndex("MemberId");

                    b.ToTable("MemberAffliationXRef");
                });

            modelBuilder.Entity("MM.ClientModels.MemberBankingDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("AccountTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BankName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("RoutingCode")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AccountTypeId");

                    b.HasIndex("MemberId");

                    b.ToTable("MemberBankingDetail");
                });

            modelBuilder.Entity("MM.ClientModels.MemberBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("MemberBranch");
                });

            modelBuilder.Entity("MM.ClientModels.MemberCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("MemberCategory");
                });

            modelBuilder.Entity("MM.ClientModels.MemberCodeGenerator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CodeGenerationRule")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("LastNumber")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Prefix")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Suffix")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("MemberCodeGenerator");
                });

            modelBuilder.Entity("MM.ClientModels.MemberCommunicationPreference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CommunicationTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan?>("PreferredTimeFrom")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("PreferredTimeTo")
                        .HasColumnType("time(6)");

                    b.HasKey("Id");

                    b.HasIndex("CommunicationTypeId");

                    b.HasIndex("MemberId");

                    b.ToTable("MemberCommunicationPreference");
                });

            modelBuilder.Entity("MM.ClientModels.MemberFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<byte[]>("FileContent")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<int>("FileTypeId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("FileTypeId");

                    b.HasIndex("MemberId");

                    b.ToTable("MemberFile");
                });

            modelBuilder.Entity("MM.ClientModels.MemberLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("MemberLevel");
                });

            modelBuilder.Entity("MM.ClientModels.MemberLoginAudit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("LoginTime")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LogoutTime")
                        .HasColumnType("datetime");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MemberLoginAudit");
                });

            modelBuilder.Entity("MM.ClientModels.MemberPlanHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsCurrentPlan")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("MemberPlanDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("MemberPlanDetailId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("MemberPlanHistory");
                });

            modelBuilder.Entity("MM.ClientModels.MemberQualificationXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("MemberSpecificQualificationName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("QualificationFrom")
                        .HasColumnType("datetime");

                    b.Property<int?>("QualificationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("QualificationTill")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("QualificationId");

                    b.ToTable("MemberQualificationXRef");
                });

            modelBuilder.Entity("MM.ClientModels.MemberStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("MemberStatus");
                });

            modelBuilder.Entity("MM.ClientModels.MemberTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("MemberTeam");
                });

            modelBuilder.Entity("MM.ClientModels.MemberType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("MemberCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("MemberCategoryId");

                    b.ToTable("MemberType");
                });

            modelBuilder.Entity("MM.ClientModels.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Acronym")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("WebSite")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("MM.ClientModels.OrganizationStructure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("LevelOfMember")
                        .HasColumnType("int");

                    b.Property<int>("MaximumNumber")
                        .HasColumnType("int");

                    b.Property<int?>("MaximumTimeInYears")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<bool?>("ShowMaximumTimeInYears")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("OrganizationStructure");
                });

            modelBuilder.Entity("MM.ClientModels.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Page");
                });

            modelBuilder.Entity("MM.ClientModels.PayPalConnectionMode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("PayPalConnectionMode");
                });

            modelBuilder.Entity("MM.ClientModels.PayPalPreferredPaymentGateway", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("PayPalPreferredPaymentGateway");
                });

            modelBuilder.Entity("MM.ClientModels.PaymentCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("PaymentCard");
                });

            modelBuilder.Entity("MM.ClientModels.PaymentGateway", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClientApicodeForMerchant")
                        .HasColumnName("ClientAPICodeForMerchant")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("ClientIdForMerchant")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("ClientPasswordForMerchant")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<decimal?>("CommisionPercentage")
                        .HasColumnType("decimal(6, 3)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("MerchantLocation")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("MerchantName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("MerchantNumber")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("PaymentGateway");
                });

            modelBuilder.Entity("MM.ClientModels.PaymentSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApplicationInstructions")
                        .HasColumnType("varchar(2000) CHARACTER SET utf8mb4")
                        .HasMaxLength(2000);

                    b.Property<int?>("ClientPayPalConnectionModeId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultCountryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("EventsInstructions")
                        .HasColumnType("varchar(2000) CHARACTER SET utf8mb4")
                        .HasMaxLength(2000);

                    b.Property<string>("GeneralInstructions")
                        .HasColumnType("varchar(2000) CHARACTER SET utf8mb4")
                        .HasMaxLength(2000);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("PayPalAccountId")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("PayPalApipassword")
                        .HasColumnName("PayPalAPIPassword")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("PayPalApisignature")
                        .HasColumnName("PayPalAPISignature")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("PayPalApiuserName")
                        .HasColumnName("PayPalAPIUserName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("PayPalPdtidentityToken")
                        .HasColumnName("PayPalPDTIdentityToken")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("PayPalPreferredPaymentGatewayId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("PaymentSetting");
                });

            modelBuilder.Entity("MM.ClientModels.PaymentSettingAllowedCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PaymentCardId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentSettingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaymentCardId");

                    b.HasIndex("PaymentSettingId");

                    b.ToTable("PaymentSettingAllowedCard");
                });

            modelBuilder.Entity("MM.ClientModels.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasMaxLength(500);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Permission");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 647, DateTimeKind.Local).AddTicks(5941),
                            Description = "Can create new contacts, modify all existing ones  ",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 647, DateTimeKind.Local).AddTicks(6844),
                            Name = "Membership manager"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 647, DateTimeKind.Local).AddTicks(7736),
                            Description = "Can create and manage all events",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 647, DateTimeKind.Local).AddTicks(7756),
                            Name = "Event manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 647, DateTimeKind.Local).AddTicks(7772),
                            Description = "Can manage all donations",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 647, DateTimeKind.Local).AddTicks(7775),
                            Name = "Donations manager"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 647, DateTimeKind.Local).AddTicks(7778),
                            Description = "Can send manual emails (e.g. newsletters)",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 647, DateTimeKind.Local).AddTicks(7780),
                            Name = "Newsletter manager"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 647, DateTimeKind.Local).AddTicks(7783),
                            Description = "Can modify your website pages. With this option selected, you can provide access to all pages on your site or to selected pages. When you grant access to a page, you automatically grant access to all of its child or sub pages.",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 647, DateTimeKind.Local).AddTicks(7784),
                            Name = "Website editor"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.PlanCanChangeToXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("FromPlanMasterId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("ToPlanMasterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromPlanMasterId");

                    b.HasIndex("ToPlanMasterId");

                    b.ToTable("PlanCanChangeToXref");
                });

            modelBuilder.Entity("MM.ClientModels.PlanDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PlanFrequencyId")
                        .HasColumnType("int");

                    b.Property<int>("PlanMasterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("PlanFrequencyId");

                    b.HasIndex("PlanMasterId");

                    b.ToTable("PlanDetail");
                });

            modelBuilder.Entity("MM.ClientModels.PlanFrequency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("PlanFrequency");
                });

            modelBuilder.Entity("MM.ClientModels.PlanMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("ApplyTaxSettings")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanPublicApply")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<bool?>("IsLimited")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("LimitToMemberCount")
                        .HasColumnType("int");

                    b.Property<int>("MemberCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberCategoryId");

                    b.HasIndex("PaymentMethodId");

                    b.ToTable("PlanMaster");
                });

            modelBuilder.Entity("MM.ClientModels.PromotionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(9, 3)");

                    b.Property<int?>("MemberLevelId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PromotionMasterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberLevelId");

                    b.HasIndex("MemberTypeId");

                    b.HasIndex("PromotionMasterId");

                    b.ToTable("PromotionDetail");
                });

            modelBuilder.Entity("MM.ClientModels.PromotionMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BenefitEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("BenefitStartDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("IsActive")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("PromotionMaster");
                });

            modelBuilder.Entity("MM.ClientModels.PromotionResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PromotionMasterId")
                        .HasColumnType("int");

                    b.Property<int>("PromotionResponseType")
                        .HasColumnType("int");

                    b.Property<DateTime>("ResponseDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("PromotionMasterId");

                    b.HasIndex("PromotionResponseType");

                    b.ToTable("PromotionResponse");
                });

            modelBuilder.Entity("MM.ClientModels.PromotionResponseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("PromotionResponseType");
                });

            modelBuilder.Entity("MM.ClientModels.Qualification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Qualification");
                });

            modelBuilder.Entity("MM.ClientModels.ReferralType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("ReferralType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 682, DateTimeKind.Local).AddTicks(9733),
                            Description = "Google",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 683, DateTimeKind.Local).AddTicks(528),
                            Name = "Google"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 683, DateTimeKind.Local).AddTicks(1460),
                            Description = "Facebook",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 683, DateTimeKind.Local).AddTicks(1480),
                            Name = "Facebook"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 683, DateTimeKind.Local).AddTicks(1495),
                            Description = "Twitter",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 683, DateTimeKind.Local).AddTicks(1497),
                            Name = "Twitter"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 683, DateTimeKind.Local).AddTicks(1501),
                            Description = "TV",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 683, DateTimeKind.Local).AddTicks(1503),
                            Name = "TV"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 683, DateTimeKind.Local).AddTicks(1506),
                            Description = "Friends",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 683, DateTimeKind.Local).AddTicks(1508),
                            Name = "Friends"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 683, DateTimeKind.Local).AddTicks(1511),
                            Description = "Other",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 683, DateTimeKind.Local).AddTicks(1513),
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Refund", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CommentsForPayer")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("InternalNotes")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PaymentGatewayId")
                        .HasColumnType("int");

                    b.Property<decimal>("RefundAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("RefundDate")
                        .HasColumnType("datetime");

                    b.Property<string>("RefundItem")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int?>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("PaymentGatewayId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("Refund");
                });

            modelBuilder.Entity("MM.ClientModels.RelatedTo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(30) CHARACTER SET utf8mb4")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("RelatedTo");
                });

            modelBuilder.Entity("MM.ClientModels.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasMaxLength(500);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 692, DateTimeKind.Local).AddTicks(7788),
                            Description = "Select this option to remove admin access for existing administrators  ",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 692, DateTimeKind.Local).AddTicks(8584),
                            Name = "No administrative privileges"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 692, DateTimeKind.Local).AddTicks(9374),
                            Description = "Grants full access to all administrative functions. Take care when granting this level of access since full admins can delete other admins and even the entire site.",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 692, DateTimeKind.Local).AddTicks(9396),
                            Name = "Account administrator"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 692, DateTimeKind.Local).AddTicks(9481),
                            Description = "Allows viewing of everything in the admin backend without being able to make any changes.  ",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 692, DateTimeKind.Local).AddTicks(9483),
                            Name = "Account administrator (Read-only access)"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 692, DateTimeKind.Local).AddTicks(9488),
                            Description = "Provides administrative access to selected Wild Apricot modules. Use this option if you have dedicated personnel in charge of events, memberships, editing webpages, or managing donations. With this option selected, you can limit access to selected Functions",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 692, DateTimeKind.Local).AddTicks(9489),
                            Name = "Limited administrator"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.RolePermissionXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("Permissionid")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Permissionid");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissionXRef");
                });

            modelBuilder.Entity("MM.ClientModels.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("State");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(4766),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(5604),
                            Name = "Eastern Cape"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6400),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6421),
                            Name = "Free State"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6436),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6438),
                            Name = "Gauteng"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6441),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6443),
                            Name = "KwaZulu-Natal"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6446),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6448),
                            Name = "Limpopo"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6453),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6454),
                            Name = "Mpumalanga"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6458),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6460),
                            Name = "North West"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6463),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6464),
                            Name = "Northern Cape"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6467),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6469),
                            Name = "Western Cape"
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6472),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6474),
                            Name = "Australian Capital Territory"
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6477),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6478),
                            Name = "New South Wales"
                        },
                        new
                        {
                            Id = 12,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6482),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6484),
                            Name = "Northern Territory"
                        },
                        new
                        {
                            Id = 13,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6487),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6488),
                            Name = "Queensland"
                        },
                        new
                        {
                            Id = 14,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6491),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6493),
                            Name = "South Australia"
                        },
                        new
                        {
                            Id = 15,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6496),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6498),
                            Name = "Tasmania"
                        },
                        new
                        {
                            Id = 16,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6501),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6503),
                            Name = "Victoria"
                        },
                        new
                        {
                            Id = 17,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6506),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6507),
                            Name = "Western Australia"
                        },
                        new
                        {
                            Id = 18,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6512),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6514),
                            Name = "Andaman and Nicobar Islands"
                        },
                        new
                        {
                            Id = 19,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6517),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6519),
                            Name = "Andhra Pradesh"
                        },
                        new
                        {
                            Id = 20,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6522),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6524),
                            Name = "Arunachal Pradesh"
                        },
                        new
                        {
                            Id = 21,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6527),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6528),
                            Name = "Assam"
                        },
                        new
                        {
                            Id = 22,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6531),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6533),
                            Name = "Bihar"
                        },
                        new
                        {
                            Id = 23,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6536),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6537),
                            Name = "Chandigarh"
                        },
                        new
                        {
                            Id = 24,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6541),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6543),
                            Name = "Chhattisgarh"
                        },
                        new
                        {
                            Id = 25,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6546),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6547),
                            Name = "Dadra and Nagar Haveli"
                        },
                        new
                        {
                            Id = 26,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6550),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6552),
                            Name = "Daman and Diu"
                        },
                        new
                        {
                            Id = 27,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6555),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6557),
                            Name = "Delhi"
                        },
                        new
                        {
                            Id = 28,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6560),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6562),
                            Name = "Goa"
                        },
                        new
                        {
                            Id = 29,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6565),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6567),
                            Name = "Gujarat"
                        },
                        new
                        {
                            Id = 30,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6570),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6571),
                            Name = "Haryana"
                        },
                        new
                        {
                            Id = 31,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6574),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6576),
                            Name = "Himachal Pradesh"
                        },
                        new
                        {
                            Id = 32,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6579),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6581),
                            Name = "Jammu and Kashmir"
                        },
                        new
                        {
                            Id = 33,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6584),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6585),
                            Name = "Jharkhand"
                        },
                        new
                        {
                            Id = 34,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6588),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6590),
                            Name = "Karnataka"
                        },
                        new
                        {
                            Id = 35,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6593),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6595),
                            Name = "Kerala"
                        },
                        new
                        {
                            Id = 36,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6611),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6613),
                            Name = "Ladakh"
                        },
                        new
                        {
                            Id = 37,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6617),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6619),
                            Name = "Lakshadweep"
                        },
                        new
                        {
                            Id = 38,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6622),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6623),
                            Name = "Madhya Pradesh"
                        },
                        new
                        {
                            Id = 39,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6627),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6628),
                            Name = "Maharashtra"
                        },
                        new
                        {
                            Id = 40,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6631),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6633),
                            Name = "Manipur"
                        },
                        new
                        {
                            Id = 41,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6636),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6637),
                            Name = "Meghalaya"
                        },
                        new
                        {
                            Id = 42,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6641),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6642),
                            Name = "Mizoram"
                        },
                        new
                        {
                            Id = 43,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6645),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6647),
                            Name = "Nagaland"
                        },
                        new
                        {
                            Id = 44,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6651),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6652),
                            Name = "Odisha"
                        },
                        new
                        {
                            Id = 45,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6655),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6657),
                            Name = "Puducherry"
                        },
                        new
                        {
                            Id = 46,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6660),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6661),
                            Name = "Punjab"
                        },
                        new
                        {
                            Id = 47,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6664),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6666),
                            Name = "Rajasthan"
                        },
                        new
                        {
                            Id = 48,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6669),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6671),
                            Name = "Sikkim"
                        },
                        new
                        {
                            Id = 49,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6674),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6676),
                            Name = "Tamil Nadu"
                        },
                        new
                        {
                            Id = 50,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6679),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6681),
                            Name = "Telangana"
                        },
                        new
                        {
                            Id = 51,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6684),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6685),
                            Name = "Tripura"
                        },
                        new
                        {
                            Id = 52,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6689),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6691),
                            Name = "Uttar Pradesh"
                        },
                        new
                        {
                            Id = 53,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6694),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6695),
                            Name = "Uttarakhand"
                        },
                        new
                        {
                            Id = 54,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6698),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6700),
                            Name = "West Bengal"
                        },
                        new
                        {
                            Id = 55,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6703),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6705),
                            Name = "Aberdeen"
                        },
                        new
                        {
                            Id = 56,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6708),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6709),
                            Name = "Aberdeenshire"
                        },
                        new
                        {
                            Id = 57,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6712),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6714),
                            Name = "Angus"
                        },
                        new
                        {
                            Id = 58,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6717),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6719),
                            Name = "Antrim"
                        },
                        new
                        {
                            Id = 59,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6722),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6723),
                            Name = "Antrim and Newtownabbey"
                        },
                        new
                        {
                            Id = 60,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6727),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6729),
                            Name = "Ards"
                        },
                        new
                        {
                            Id = 61,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6732),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6733),
                            Name = "Ards and North Down"
                        },
                        new
                        {
                            Id = 62,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6737),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6739),
                            Name = "Argyll and Bute"
                        },
                        new
                        {
                            Id = 63,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6742),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6744),
                            Name = "Armagh City and District Council"
                        },
                        new
                        {
                            Id = 64,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6747),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6748),
                            Name = "Armagh, Banbridge and Craigavon"
                        },
                        new
                        {
                            Id = 65,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6751),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6753),
                            Name = "Ascension Island"
                        },
                        new
                        {
                            Id = 66,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6756),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6758),
                            Name = "Ballymena Borough"
                        },
                        new
                        {
                            Id = 67,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6761),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6762),
                            Name = "Ballymoney"
                        },
                        new
                        {
                            Id = 68,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6766),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6768),
                            Name = "Banbridge"
                        },
                        new
                        {
                            Id = 69,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6771),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6772),
                            Name = "Barnsley"
                        },
                        new
                        {
                            Id = 70,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6775),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6777),
                            Name = "Bath and North East Somerset"
                        },
                        new
                        {
                            Id = 71,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6780),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6781),
                            Name = "Bedford"
                        },
                        new
                        {
                            Id = 72,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6792),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6794),
                            Name = "Belfast district"
                        },
                        new
                        {
                            Id = 73,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6797),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6799),
                            Name = "Birmingham"
                        },
                        new
                        {
                            Id = 74,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6802),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6803),
                            Name = "Blackburn with Darwen"
                        },
                        new
                        {
                            Id = 75,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6807),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6808),
                            Name = "Blackpool"
                        },
                        new
                        {
                            Id = 76,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6812),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6813),
                            Name = "Blaenau Gwent County Borough"
                        },
                        new
                        {
                            Id = 77,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6816),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6818),
                            Name = "Bolton"
                        },
                        new
                        {
                            Id = 78,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6821),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6823),
                            Name = "Bournemouth"
                        },
                        new
                        {
                            Id = 79,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6826),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6828),
                            Name = "Bracknell Forest"
                        },
                        new
                        {
                            Id = 80,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6831),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6833),
                            Name = "Bradford"
                        },
                        new
                        {
                            Id = 81,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6836),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6838),
                            Name = "Bridgend County Borough"
                        },
                        new
                        {
                            Id = 82,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6841),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6843),
                            Name = "Brighton and Hove"
                        },
                        new
                        {
                            Id = 83,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6847),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6848),
                            Name = "Buckinghamshire"
                        },
                        new
                        {
                            Id = 84,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6852),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6853),
                            Name = "Bury"
                        },
                        new
                        {
                            Id = 85,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6856),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6858),
                            Name = "Caerphilly County Borough"
                        },
                        new
                        {
                            Id = 86,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6861),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6863),
                            Name = "Calderdale"
                        },
                        new
                        {
                            Id = 87,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6867),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6868),
                            Name = "Cambridgeshire"
                        },
                        new
                        {
                            Id = 88,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6871),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6873),
                            Name = "Carmarthenshire"
                        },
                        new
                        {
                            Id = 89,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6876),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6877),
                            Name = "Carrickfergus Borough Council"
                        },
                        new
                        {
                            Id = 90,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6880),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6882),
                            Name = "Castlereagh"
                        },
                        new
                        {
                            Id = 91,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6885),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6887),
                            Name = "Causeway Coast and Glens"
                        },
                        new
                        {
                            Id = 92,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6890),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6892),
                            Name = "Central Bedfordshire"
                        },
                        new
                        {
                            Id = 93,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6895),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6896),
                            Name = "Ceredigion"
                        },
                        new
                        {
                            Id = 94,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6900),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6901),
                            Name = "Cheshire East"
                        },
                        new
                        {
                            Id = 95,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6904),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6906),
                            Name = "Cheshire West and Chester"
                        },
                        new
                        {
                            Id = 96,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6909),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6910),
                            Name = "City and County of Cardiff"
                        },
                        new
                        {
                            Id = 97,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6913),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6915),
                            Name = "City and County of Swansea"
                        },
                        new
                        {
                            Id = 98,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6918),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6920),
                            Name = "City of Bristol"
                        },
                        new
                        {
                            Id = 99,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6923),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6924),
                            Name = "City of Derby"
                        },
                        new
                        {
                            Id = 100,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6928),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6929),
                            Name = "City of Kingston upon Hull"
                        },
                        new
                        {
                            Id = 101,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6932),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6934),
                            Name = "City of Leicester"
                        },
                        new
                        {
                            Id = 102,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6937),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6938),
                            Name = "City of London"
                        },
                        new
                        {
                            Id = 103,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6942),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6943),
                            Name = "City of Nottingham"
                        },
                        new
                        {
                            Id = 104,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6946),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6948),
                            Name = "City of Peterborough"
                        },
                        new
                        {
                            Id = 105,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6951),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6952),
                            Name = "City of Plymouth"
                        },
                        new
                        {
                            Id = 106,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6955),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6957),
                            Name = "City of Portsmouth"
                        },
                        new
                        {
                            Id = 107,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(6999),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7001),
                            Name = "City of Southampton"
                        },
                        new
                        {
                            Id = 108,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7005),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7007),
                            Name = "City of Stoke-on-Trent"
                        },
                        new
                        {
                            Id = 109,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7010),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7011),
                            Name = "City of Sunderland"
                        },
                        new
                        {
                            Id = 110,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7014),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7016),
                            Name = "City of Westminster"
                        },
                        new
                        {
                            Id = 111,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7020),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7021),
                            Name = "City of Wolverhampton"
                        },
                        new
                        {
                            Id = 112,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7024),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7026),
                            Name = "City of York"
                        },
                        new
                        {
                            Id = 113,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7029),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7030),
                            Name = "Clackmannanshire"
                        },
                        new
                        {
                            Id = 114,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7033),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7035),
                            Name = "Coleraine Borough Council"
                        },
                        new
                        {
                            Id = 115,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7039),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7040),
                            Name = "Conwy County Borough"
                        },
                        new
                        {
                            Id = 116,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7044),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7045),
                            Name = "Cookstown District Council"
                        },
                        new
                        {
                            Id = 117,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7048),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7050),
                            Name = "Cornwall"
                        },
                        new
                        {
                            Id = 118,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7053),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7054),
                            Name = "County Durham"
                        },
                        new
                        {
                            Id = 119,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7058),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7059),
                            Name = "Coventry"
                        },
                        new
                        {
                            Id = 120,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7062),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7064),
                            Name = "Craigavon Borough Council"
                        },
                        new
                        {
                            Id = 121,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7067),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7068),
                            Name = "Cumbria"
                        },
                        new
                        {
                            Id = 122,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7071),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7073),
                            Name = "Darlington"
                        },
                        new
                        {
                            Id = 123,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7076),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7078),
                            Name = "Denbighshire"
                        },
                        new
                        {
                            Id = 124,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7082),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7084),
                            Name = "Derbyshire"
                        },
                        new
                        {
                            Id = 125,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7087),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7088),
                            Name = "Derry City and Strabane"
                        },
                        new
                        {
                            Id = 126,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7091),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7093),
                            Name = "Derry City Council"
                        },
                        new
                        {
                            Id = 127,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7096),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7097),
                            Name = "Devon"
                        },
                        new
                        {
                            Id = 128,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7100),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7102),
                            Name = "Doncaster"
                        },
                        new
                        {
                            Id = 129,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7105),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7107),
                            Name = "Dorset"
                        },
                        new
                        {
                            Id = 130,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7109),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7111),
                            Name = "Down District Council"
                        },
                        new
                        {
                            Id = 131,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7114),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7116),
                            Name = "Dudley"
                        },
                        new
                        {
                            Id = 132,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7119),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7121),
                            Name = "Dumfries and Galloway"
                        },
                        new
                        {
                            Id = 133,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7124),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7126),
                            Name = "Dundee"
                        },
                        new
                        {
                            Id = 134,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7129),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7130),
                            Name = "Dungannon and South Tyrone Borough Council"
                        },
                        new
                        {
                            Id = 135,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7133),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7135),
                            Name = "East Ayrshire"
                        },
                        new
                        {
                            Id = 136,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7138),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7140),
                            Name = "East Dunbartonshire"
                        },
                        new
                        {
                            Id = 137,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7143),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7144),
                            Name = "East Lothian"
                        },
                        new
                        {
                            Id = 138,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7148),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7149),
                            Name = "East Renfrewshire"
                        },
                        new
                        {
                            Id = 139,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7152),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7154),
                            Name = "East Riding of Yorkshire"
                        },
                        new
                        {
                            Id = 140,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7157),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7158),
                            Name = "East Sussex"
                        },
                        new
                        {
                            Id = 141,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7162),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7163),
                            Name = "Edinburgh"
                        },
                        new
                        {
                            Id = 142,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7261),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7264),
                            Name = "England"
                        },
                        new
                        {
                            Id = 143,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7268),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7269),
                            Name = "Essex"
                        },
                        new
                        {
                            Id = 144,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7272),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7274),
                            Name = "Falkirk"
                        },
                        new
                        {
                            Id = 145,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7277),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7279),
                            Name = "Fermanagh and Omagh"
                        },
                        new
                        {
                            Id = 146,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7282),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7283),
                            Name = "Fermanagh District Council"
                        },
                        new
                        {
                            Id = 147,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7286),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7288),
                            Name = "Fife"
                        },
                        new
                        {
                            Id = 148,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7291),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7292),
                            Name = "Flintshire"
                        },
                        new
                        {
                            Id = 149,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7296),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7297),
                            Name = "Gateshead"
                        },
                        new
                        {
                            Id = 150,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7300),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7302),
                            Name = "Glasgow"
                        },
                        new
                        {
                            Id = 151,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7305),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7306),
                            Name = "Gloucestershire"
                        },
                        new
                        {
                            Id = 152,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7310),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7311),
                            Name = "Gwynedd"
                        },
                        new
                        {
                            Id = 153,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7314),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7316),
                            Name = "Halton"
                        },
                        new
                        {
                            Id = 154,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7319),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7320),
                            Name = "Hampshire"
                        },
                        new
                        {
                            Id = 155,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7324),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7326),
                            Name = "Hartlepool"
                        },
                        new
                        {
                            Id = 156,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7330),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7332),
                            Name = "Herefordshire"
                        },
                        new
                        {
                            Id = 157,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7335),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7337),
                            Name = "Hertfordshire"
                        },
                        new
                        {
                            Id = 158,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7341),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7342),
                            Name = "Highland"
                        },
                        new
                        {
                            Id = 159,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7345),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7347),
                            Name = "Inverclyde"
                        },
                        new
                        {
                            Id = 160,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7350),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7352),
                            Name = "Isle of Wight"
                        },
                        new
                        {
                            Id = 161,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7355),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7356),
                            Name = "Isles of Scilly"
                        },
                        new
                        {
                            Id = 162,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7359),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7361),
                            Name = "Kent"
                        },
                        new
                        {
                            Id = 163,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7364),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7366),
                            Name = "Kirklees"
                        },
                        new
                        {
                            Id = 164,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7369),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7370),
                            Name = "Knowsley"
                        },
                        new
                        {
                            Id = 165,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7374),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7375),
                            Name = "Lancashire"
                        },
                        new
                        {
                            Id = 166,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7378),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7380),
                            Name = "Larne Borough Council"
                        },
                        new
                        {
                            Id = 167,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7383),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7385),
                            Name = "Leeds"
                        },
                        new
                        {
                            Id = 168,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7388),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7390),
                            Name = "Leicestershire"
                        },
                        new
                        {
                            Id = 169,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7393),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7394),
                            Name = "Limavady Borough Council"
                        },
                        new
                        {
                            Id = 170,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7397),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7399),
                            Name = "Lincolnshire"
                        },
                        new
                        {
                            Id = 171,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7402),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7403),
                            Name = "Lisburn and Castlereagh"
                        },
                        new
                        {
                            Id = 172,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7406),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7408),
                            Name = "Lisburn City Council"
                        },
                        new
                        {
                            Id = 173,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7411),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7413),
                            Name = "Liverpool"
                        },
                        new
                        {
                            Id = 174,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7416),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7417),
                            Name = "London Borough of Barking and Dagenham"
                        },
                        new
                        {
                            Id = 175,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7420),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7422),
                            Name = "London Borough of Barnet"
                        },
                        new
                        {
                            Id = 176,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7425),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7427),
                            Name = "London Borough of Bexley"
                        },
                        new
                        {
                            Id = 177,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7439),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7440),
                            Name = "London Borough of Brent"
                        },
                        new
                        {
                            Id = 178,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7443),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7445),
                            Name = "London Borough of Bromley"
                        },
                        new
                        {
                            Id = 179,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7448),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7450),
                            Name = "London Borough of Camden"
                        },
                        new
                        {
                            Id = 180,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7453),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7454),
                            Name = "London Borough of Croydon"
                        },
                        new
                        {
                            Id = 181,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7458),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7460),
                            Name = "London Borough of Ealing"
                        },
                        new
                        {
                            Id = 182,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7463),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7464),
                            Name = "London Borough of Enfield"
                        },
                        new
                        {
                            Id = 183,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7467),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7469),
                            Name = "London Borough of Hackney"
                        },
                        new
                        {
                            Id = 184,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7472),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7474),
                            Name = "London Borough of Hammersmith and Fulham"
                        },
                        new
                        {
                            Id = 185,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7477),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7478),
                            Name = "London Borough of Haringey"
                        },
                        new
                        {
                            Id = 186,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7481),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7483),
                            Name = "London Borough of Harrow"
                        },
                        new
                        {
                            Id = 187,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7486),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7487),
                            Name = "London Borough of Havering"
                        },
                        new
                        {
                            Id = 188,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7490),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7492),
                            Name = "London Borough of Hillingdon"
                        },
                        new
                        {
                            Id = 189,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7496),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7498),
                            Name = "London Borough of Hounslow"
                        },
                        new
                        {
                            Id = 190,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7501),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7502),
                            Name = "London Borough of Islington"
                        },
                        new
                        {
                            Id = 191,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7505),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7507),
                            Name = "London Borough of Lambeth"
                        },
                        new
                        {
                            Id = 192,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7510),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7511),
                            Name = "London Borough of Lewisham"
                        },
                        new
                        {
                            Id = 193,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7515),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7516),
                            Name = "London Borough of Merton"
                        },
                        new
                        {
                            Id = 194,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7519),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7521),
                            Name = "London Borough of Newham"
                        },
                        new
                        {
                            Id = 195,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7524),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7525),
                            Name = "London Borough of Redbridge"
                        },
                        new
                        {
                            Id = 196,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7529),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7530),
                            Name = "London Borough of Richmond upon Thames"
                        },
                        new
                        {
                            Id = 197,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7534),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7536),
                            Name = "London Borough of Southwark"
                        },
                        new
                        {
                            Id = 198,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7539),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7540),
                            Name = "London Borough of Sutton"
                        },
                        new
                        {
                            Id = 199,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7543),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7545),
                            Name = "London Borough of Tower Hamlets"
                        },
                        new
                        {
                            Id = 200,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7548),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7549),
                            Name = "London Borough of Waltham Forest"
                        },
                        new
                        {
                            Id = 201,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7552),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7554),
                            Name = "London Borough of Wandsworth"
                        },
                        new
                        {
                            Id = 202,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7557),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7558),
                            Name = "Magherafelt District Council"
                        },
                        new
                        {
                            Id = 203,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7561),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7563),
                            Name = "Manchester"
                        },
                        new
                        {
                            Id = 204,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7566),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7568),
                            Name = "Medway"
                        },
                        new
                        {
                            Id = 205,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7571),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7573),
                            Name = "Merthyr Tydfil County Borough"
                        },
                        new
                        {
                            Id = 206,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7576),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7577),
                            Name = "Metropolitan Borough of Wigan"
                        },
                        new
                        {
                            Id = 207,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7581),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7582),
                            Name = "Mid and East Antrim"
                        },
                        new
                        {
                            Id = 208,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7585),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7587),
                            Name = "Mid Ulster"
                        },
                        new
                        {
                            Id = 209,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7590),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7591),
                            Name = "Middlesbrough"
                        },
                        new
                        {
                            Id = 210,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7594),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7596),
                            Name = "Midlothian"
                        },
                        new
                        {
                            Id = 211,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7599),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7601),
                            Name = "Milton Keynes"
                        },
                        new
                        {
                            Id = 212,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7610),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7612),
                            Name = "Monmouthshire"
                        },
                        new
                        {
                            Id = 213,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7615),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7617),
                            Name = "Moray"
                        },
                        new
                        {
                            Id = 214,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7620),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7621),
                            Name = "Moyle District Council"
                        },
                        new
                        {
                            Id = 215,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7624),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7626),
                            Name = "Neath Port Talbot County Borough"
                        },
                        new
                        {
                            Id = 216,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7629),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7630),
                            Name = "Newcastle upon Tyne"
                        },
                        new
                        {
                            Id = 217,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7633),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7635),
                            Name = "Newport"
                        },
                        new
                        {
                            Id = 218,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7638),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7640),
                            Name = "Newry and Mourne District Council"
                        },
                        new
                        {
                            Id = 219,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7643),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7645),
                            Name = "Newry, Mourne and Down"
                        },
                        new
                        {
                            Id = 220,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7648),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7649),
                            Name = "Newtownabbey Borough Council"
                        },
                        new
                        {
                            Id = 221,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7653),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7654),
                            Name = "Norfolk"
                        },
                        new
                        {
                            Id = 222,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7657),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7659),
                            Name = "North Ayrshire"
                        },
                        new
                        {
                            Id = 223,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7663),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7664),
                            Name = "North Down Borough Council"
                        },
                        new
                        {
                            Id = 224,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7667),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7669),
                            Name = "North East Lincolnshire"
                        },
                        new
                        {
                            Id = 225,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7672),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7674),
                            Name = "North Lanarkshire"
                        },
                        new
                        {
                            Id = 226,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7677),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7678),
                            Name = "North Lincolnshire"
                        },
                        new
                        {
                            Id = 227,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7681),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7683),
                            Name = "North Somerset"
                        },
                        new
                        {
                            Id = 228,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7686),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7687),
                            Name = "North Tyneside"
                        },
                        new
                        {
                            Id = 229,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7691),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7693),
                            Name = "North Yorkshire"
                        },
                        new
                        {
                            Id = 230,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7696),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7697),
                            Name = "Northamptonshire"
                        },
                        new
                        {
                            Id = 231,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7700),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7702),
                            Name = "Northern Ireland"
                        },
                        new
                        {
                            Id = 232,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7705),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7706),
                            Name = "Northumberland"
                        },
                        new
                        {
                            Id = 233,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7710),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7711),
                            Name = "Nottinghamshire"
                        },
                        new
                        {
                            Id = 234,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7714),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7716),
                            Name = "Oldham"
                        },
                        new
                        {
                            Id = 235,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7719),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7720),
                            Name = "Omagh District Council"
                        },
                        new
                        {
                            Id = 236,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7724),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7725),
                            Name = "Orkney Islands"
                        },
                        new
                        {
                            Id = 237,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7729),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7730),
                            Name = "Outer Hebrides"
                        },
                        new
                        {
                            Id = 238,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7733),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7735),
                            Name = "Oxfordshire"
                        },
                        new
                        {
                            Id = 239,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7738),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7739),
                            Name = "Pembrokeshire"
                        },
                        new
                        {
                            Id = 240,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7742),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7744),
                            Name = "Perth and Kinross"
                        },
                        new
                        {
                            Id = 241,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7748),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7750),
                            Name = "Poole"
                        },
                        new
                        {
                            Id = 242,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7753),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7755),
                            Name = "Powys"
                        },
                        new
                        {
                            Id = 243,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7758),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7759),
                            Name = "Reading"
                        },
                        new
                        {
                            Id = 244,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7762),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7764),
                            Name = "Redcar and Cleveland"
                        },
                        new
                        {
                            Id = 245,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7767),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7769),
                            Name = "Renfrewshire"
                        },
                        new
                        {
                            Id = 246,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7772),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7773),
                            Name = "Rhondda Cynon Taf"
                        },
                        new
                        {
                            Id = 247,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7776),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7778),
                            Name = "Rochdale"
                        },
                        new
                        {
                            Id = 248,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7788),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7789),
                            Name = "Rotherham"
                        },
                        new
                        {
                            Id = 249,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7792),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7794),
                            Name = "Royal Borough of Greenwich"
                        },
                        new
                        {
                            Id = 250,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7797),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7798),
                            Name = "Royal Borough of Kensington and Chelsea"
                        },
                        new
                        {
                            Id = 251,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7801),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7803),
                            Name = "Royal Borough of Kingston upon Thames"
                        },
                        new
                        {
                            Id = 252,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7806),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7807),
                            Name = "Rutland"
                        },
                        new
                        {
                            Id = 253,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7811),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7813),
                            Name = "Saint Helena"
                        },
                        new
                        {
                            Id = 254,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7816),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7817),
                            Name = "Salford"
                        },
                        new
                        {
                            Id = 255,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7820),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7822),
                            Name = "Sandwell"
                        },
                        new
                        {
                            Id = 256,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7825),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7826),
                            Name = "Scotland"
                        },
                        new
                        {
                            Id = 257,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7829),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7831),
                            Name = "Scottish Borders"
                        },
                        new
                        {
                            Id = 258,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7834),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7836),
                            Name = "Sefton"
                        },
                        new
                        {
                            Id = 259,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7839),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7840),
                            Name = "Sheffield"
                        },
                        new
                        {
                            Id = 260,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7843),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7845),
                            Name = "Shetland Islands"
                        },
                        new
                        {
                            Id = 261,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7849),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7850),
                            Name = "Shropshire"
                        },
                        new
                        {
                            Id = 262,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7853),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7855),
                            Name = "Slough"
                        },
                        new
                        {
                            Id = 263,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7858),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7859),
                            Name = "Solihull"
                        },
                        new
                        {
                            Id = 264,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7862),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7864),
                            Name = "Somerset"
                        },
                        new
                        {
                            Id = 265,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7867),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7869),
                            Name = "South Ayrshire"
                        },
                        new
                        {
                            Id = 266,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7872),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7873),
                            Name = "South Gloucestershire"
                        },
                        new
                        {
                            Id = 267,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7876),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7878),
                            Name = "South Lanarkshire"
                        },
                        new
                        {
                            Id = 268,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7881),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7882),
                            Name = "South Tyneside"
                        },
                        new
                        {
                            Id = 269,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7886),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7887),
                            Name = "Southend-on-Sea"
                        },
                        new
                        {
                            Id = 270,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7890),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7892),
                            Name = "St Helens"
                        },
                        new
                        {
                            Id = 271,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7895),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7896),
                            Name = "Staffordshire"
                        },
                        new
                        {
                            Id = 272,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7899),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7901),
                            Name = "Stirling"
                        },
                        new
                        {
                            Id = 273,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7904),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7906),
                            Name = "Stockport"
                        },
                        new
                        {
                            Id = 274,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7908),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7910),
                            Name = "Stockton-on-Tees"
                        },
                        new
                        {
                            Id = 275,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7913),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7915),
                            Name = "Strabane District Council"
                        },
                        new
                        {
                            Id = 276,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7918),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7919),
                            Name = "Suffolk"
                        },
                        new
                        {
                            Id = 277,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7922),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7924),
                            Name = "Surrey"
                        },
                        new
                        {
                            Id = 278,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7927),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7928),
                            Name = "Swindon"
                        },
                        new
                        {
                            Id = 279,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7931),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7933),
                            Name = "Tameside"
                        },
                        new
                        {
                            Id = 280,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7936),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7938),
                            Name = "Telford and Wrekin"
                        },
                        new
                        {
                            Id = 281,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7941),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7943),
                            Name = "Thurrock"
                        },
                        new
                        {
                            Id = 282,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7946),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7947),
                            Name = "Torbay"
                        },
                        new
                        {
                            Id = 283,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7956),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7958),
                            Name = "Torfaen"
                        },
                        new
                        {
                            Id = 284,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7961),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7963),
                            Name = "Trafford"
                        },
                        new
                        {
                            Id = 285,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7967),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7969),
                            Name = "United Kingdom"
                        },
                        new
                        {
                            Id = 286,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7972),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7974),
                            Name = "Vale of Glamorgan"
                        },
                        new
                        {
                            Id = 287,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7977),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7978),
                            Name = "Wakefield"
                        },
                        new
                        {
                            Id = 288,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7981),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7983),
                            Name = "Wales"
                        },
                        new
                        {
                            Id = 289,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7986),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7988),
                            Name = "Walsall"
                        },
                        new
                        {
                            Id = 290,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7991),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7992),
                            Name = "Warrington"
                        },
                        new
                        {
                            Id = 291,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7996),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(7997),
                            Name = "Warwickshire"
                        },
                        new
                        {
                            Id = 292,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8000),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8002),
                            Name = "West Berkshire"
                        },
                        new
                        {
                            Id = 293,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8005),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8007),
                            Name = "West Dunbartonshire"
                        },
                        new
                        {
                            Id = 294,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8010),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8012),
                            Name = "West Lothian"
                        },
                        new
                        {
                            Id = 295,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8015),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8016),
                            Name = "West Sussex"
                        },
                        new
                        {
                            Id = 296,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8019),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8021),
                            Name = "Wiltshire"
                        },
                        new
                        {
                            Id = 297,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8024),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8025),
                            Name = "Windsor and Maidenhead"
                        },
                        new
                        {
                            Id = 298,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8028),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8030),
                            Name = "Wirral"
                        },
                        new
                        {
                            Id = 299,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8033),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8035),
                            Name = "Wokingham"
                        },
                        new
                        {
                            Id = 300,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8038),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8039),
                            Name = "Worcestershire"
                        },
                        new
                        {
                            Id = 301,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8042),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8044),
                            Name = "Wrexham County Borough"
                        },
                        new
                        {
                            Id = 302,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8047),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8049),
                            Name = "Alabama"
                        },
                        new
                        {
                            Id = 303,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8052),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8053),
                            Name = "Alaska"
                        },
                        new
                        {
                            Id = 304,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8056),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8058),
                            Name = "American Samoa"
                        },
                        new
                        {
                            Id = 305,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8061),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8063),
                            Name = "Arizona"
                        },
                        new
                        {
                            Id = 306,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8066),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8068),
                            Name = "Arkansas"
                        },
                        new
                        {
                            Id = 307,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8071),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8072),
                            Name = "Baker Island"
                        },
                        new
                        {
                            Id = 308,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8075),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8077),
                            Name = "California"
                        },
                        new
                        {
                            Id = 309,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8080),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8082),
                            Name = "Colorado"
                        },
                        new
                        {
                            Id = 310,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8085),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8087),
                            Name = "Connecticut"
                        },
                        new
                        {
                            Id = 311,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8090),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8092),
                            Name = "Delaware"
                        },
                        new
                        {
                            Id = 312,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8095),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8096),
                            Name = "District of Columbia"
                        },
                        new
                        {
                            Id = 313,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8099),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8101),
                            Name = "Florida"
                        },
                        new
                        {
                            Id = 314,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8104),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8106),
                            Name = "Georgia"
                        },
                        new
                        {
                            Id = 315,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8109),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8110),
                            Name = "Guam"
                        },
                        new
                        {
                            Id = 316,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8114),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8115),
                            Name = "Hawaii"
                        },
                        new
                        {
                            Id = 317,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8118),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8120),
                            Name = "Howland Island"
                        },
                        new
                        {
                            Id = 318,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8130),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8131),
                            Name = "Idaho"
                        },
                        new
                        {
                            Id = 319,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8134),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8136),
                            Name = "Illinois"
                        },
                        new
                        {
                            Id = 320,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8139),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8141),
                            Name = "Indiana"
                        },
                        new
                        {
                            Id = 321,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8144),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8145),
                            Name = "Iowa"
                        },
                        new
                        {
                            Id = 322,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8149),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8151),
                            Name = "Jarvis Island"
                        },
                        new
                        {
                            Id = 323,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8154),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8155),
                            Name = "Johnston Atoll"
                        },
                        new
                        {
                            Id = 324,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8158),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8160),
                            Name = "Kansas"
                        },
                        new
                        {
                            Id = 325,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8163),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8164),
                            Name = "Kentucky"
                        },
                        new
                        {
                            Id = 326,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8167),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8169),
                            Name = "Kingman Reef"
                        },
                        new
                        {
                            Id = 327,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8172),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8174),
                            Name = "Louisiana"
                        },
                        new
                        {
                            Id = 328,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8177),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8178),
                            Name = "Maine"
                        },
                        new
                        {
                            Id = 329,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8181),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8183),
                            Name = "Maryland"
                        },
                        new
                        {
                            Id = 330,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8186),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8188),
                            Name = "Massachusetts"
                        },
                        new
                        {
                            Id = 331,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8191),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8193),
                            Name = "Michigan"
                        },
                        new
                        {
                            Id = 332,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8196),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8197),
                            Name = "Midway Atoll"
                        },
                        new
                        {
                            Id = 333,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8200),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8202),
                            Name = "Minnesota"
                        },
                        new
                        {
                            Id = 334,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8205),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8206),
                            Name = "Mississippi"
                        },
                        new
                        {
                            Id = 335,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8210),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8212),
                            Name = "Missouri"
                        },
                        new
                        {
                            Id = 336,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8215),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8216),
                            Name = "Montana"
                        },
                        new
                        {
                            Id = 337,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8219),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8221),
                            Name = "Navassa Island"
                        },
                        new
                        {
                            Id = 338,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8224),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8226),
                            Name = "Nebraska"
                        },
                        new
                        {
                            Id = 339,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8229),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8231),
                            Name = "Nevada"
                        },
                        new
                        {
                            Id = 340,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8234),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8236),
                            Name = "New Hampshire"
                        },
                        new
                        {
                            Id = 341,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8239),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8240),
                            Name = "New Jersey"
                        },
                        new
                        {
                            Id = 342,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8244),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8246),
                            Name = "New Mexico"
                        },
                        new
                        {
                            Id = 343,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8249),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8251),
                            Name = "New York"
                        },
                        new
                        {
                            Id = 344,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8254),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8255),
                            Name = "North Carolina"
                        },
                        new
                        {
                            Id = 345,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8258),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8260),
                            Name = "North Dakota"
                        },
                        new
                        {
                            Id = 346,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8263),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8265),
                            Name = "Northern Mariana Islands"
                        },
                        new
                        {
                            Id = 347,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8268),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8269),
                            Name = "Ohio"
                        },
                        new
                        {
                            Id = 348,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8272),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8274),
                            Name = "Oklahoma"
                        },
                        new
                        {
                            Id = 349,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8277),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8278),
                            Name = "Oregon"
                        },
                        new
                        {
                            Id = 350,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8281),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8283),
                            Name = "Palmyra Atoll"
                        },
                        new
                        {
                            Id = 351,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8286),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8288),
                            Name = "Pennsylvania"
                        },
                        new
                        {
                            Id = 352,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8291),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8293),
                            Name = "Puerto Rico"
                        },
                        new
                        {
                            Id = 353,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8302),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8304),
                            Name = "Rhode Island"
                        },
                        new
                        {
                            Id = 354,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8307),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8309),
                            Name = "South Carolina"
                        },
                        new
                        {
                            Id = 355,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8312),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8313),
                            Name = "South Dakota"
                        },
                        new
                        {
                            Id = 356,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8316),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8318),
                            Name = "Tennessee"
                        },
                        new
                        {
                            Id = 357,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8321),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8323),
                            Name = "Texas"
                        },
                        new
                        {
                            Id = 358,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8326),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8327),
                            Name = "United States Minor Outlying Islands"
                        },
                        new
                        {
                            Id = 359,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8330),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8333),
                            Name = "United States Virgin Islands"
                        },
                        new
                        {
                            Id = 360,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8336),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8337),
                            Name = "Utah"
                        },
                        new
                        {
                            Id = 361,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8340),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8342),
                            Name = "Vermont"
                        },
                        new
                        {
                            Id = 362,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8345),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8347),
                            Name = "Virginia"
                        },
                        new
                        {
                            Id = 363,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8350),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8352),
                            Name = "Wake Island"
                        },
                        new
                        {
                            Id = 364,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8355),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8356),
                            Name = "Washington"
                        },
                        new
                        {
                            Id = 365,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8359),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8361),
                            Name = "West Virginia"
                        },
                        new
                        {
                            Id = 366,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8364),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8366),
                            Name = "Wisconsin"
                        },
                        new
                        {
                            Id = 367,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8369),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 742, DateTimeKind.Local).AddTicks(8371),
                            Name = "Wyoming"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("MM.ClientModels.Tax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Tax");
                });

            modelBuilder.Entity("MM.ClientModels.TaxPolicy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("TaxPolicy");
                });

            modelBuilder.Entity("MM.ClientModels.TaxScope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("TaxScopeCode")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("TaxScope");
                });

            modelBuilder.Entity("MM.ClientModels.Theme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("ThemeNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Theme");
                });

            modelBuilder.Entity("MM.ClientModels.TimeFormat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("TimeFormat");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 750, DateTimeKind.Local).AddTicks(7849),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 750, DateTimeKind.Local).AddTicks(8653),
                            Name = "12:00 AM/PM"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 750, DateTimeKind.Local).AddTicks(9442),
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 750, DateTimeKind.Local).AddTicks(9461),
                            Name = "24 Hours"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Title", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Title");

                    b.HasData(
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 764, DateTimeKind.Local).AddTicks(2318),
                            Description = "Mr",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 764, DateTimeKind.Local).AddTicks(3085),
                            Name = "Mr"
                        },
                        new
                        {
                            Id = 20,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 764, DateTimeKind.Local).AddTicks(3852),
                            Description = "Mrs",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 764, DateTimeKind.Local).AddTicks(3872),
                            Name = "Mrs"
                        },
                        new
                        {
                            Id = 30,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 764, DateTimeKind.Local).AddTicks(3888),
                            Description = "Ms",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 764, DateTimeKind.Local).AddTicks(3889),
                            Name = "Ms"
                        },
                        new
                        {
                            Id = 40,
                            CreatedOn = new DateTime(2020, 7, 15, 13, 44, 17, 764, DateTimeKind.Local).AddTicks(3893),
                            Description = "Dr",
                            ModifiedOn = new DateTime(2020, 7, 15, 13, 44, 17, 764, DateTimeKind.Local).AddTicks(3894),
                            Name = "Dr"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.UserLoginAudit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("LoginTime")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LogoutTime")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserLoginAudit");
                });

            modelBuilder.Entity("MM.ClientModels.UserRoleXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoleXRef");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Value")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("MM.ClientModels.Address", b =>
                {
                    b.HasOne("MM.ClientModels.AddressType", "AddressType")
                        .WithMany("Address")
                        .HasForeignKey("AddressTypeId")
                        .HasConstraintName("FK_Address_AddressType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.City", "City")
                        .WithMany("Address")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_Address_City");

                    b.HasOne("MM.ClientModels.Country", "Country")
                        .WithMany("Address")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_Address_Country")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.State", "State")
                        .WithMany("Address")
                        .HasForeignKey("StateId")
                        .HasConstraintName("FK_Address_State")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.BankingDetail", b =>
                {
                    b.HasOne("MM.ClientModels.AccountType", "AccountType")
                        .WithMany("BankingDetail")
                        .HasForeignKey("AccountTypeId")
                        .HasConstraintName("FK_BankingDetail_AccountType")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.Billing", b =>
                {
                    b.HasOne("MM.ClientModels.Invoice", "Invoice")
                        .WithMany("Billing")
                        .HasForeignKey("InvoiceId")
                        .HasConstraintName("FK_Payment_Invoice");

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("Billing")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_Payment_Member")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PaymentGateway", "PaymentGateway")
                        .WithMany("Billing")
                        .HasForeignKey("PaymentGatewayId")
                        .HasConstraintName("FK_Payment_PaymentGateway")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("Billing")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_Billing_RelatedTo")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.BillingCommunication", b =>
                {
                    b.HasOne("MM.ClientModels.Billing", "Billing")
                        .WithOne("BillingCommunication")
                        .HasForeignKey("MM.ClientModels.BillingCommunication", "Id")
                        .HasConstraintName("FK_PaymentCommunication_Payment")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.City", b =>
                {
                    b.HasOne("MM.ClientModels.State", "State")
                        .WithMany("City")
                        .HasForeignKey("StateId")
                        .HasConstraintName("FK_City_State");
                });

            modelBuilder.Entity("MM.ClientModels.ClientOrganization", b =>
                {
                    b.HasOne("MM.ClientModels.ClientTimeZone", "ClientTimeZone")
                        .WithMany("Client")
                        .HasForeignKey("ClientTimeZoneId")
                        .HasConstraintName("FK_Client_TimeZone");

                    b.HasOne("MM.ClientModels.Currency", "Currency")
                        .WithMany("Client")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_Client_Currency");

                    b.HasOne("MM.ClientModels.DateSetting", "DateSetting")
                        .WithMany("Client")
                        .HasForeignKey("DateSettingId")
                        .HasConstraintName("FK_Client_DateSetting");

                    b.HasOne("MM.ClientModels.TimeFormat", "TimeFormat")
                        .WithMany("Client")
                        .HasForeignKey("TimeFormatId")
                        .HasConstraintName("FK_Client_TimeFormat");
                });

            modelBuilder.Entity("MM.ClientModels.ClientPlanHistory", b =>
                {
                    b.HasOne("MM.ClientModels.ClientUser", "BillingUser")
                        .WithMany("ClientPlanHistory")
                        .HasForeignKey("BillingUserId")
                        .HasConstraintName("FK_ClientPlanHistory_User")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.ClientUser", b =>
                {
                    b.HasOne("MM.ClientModels.Designation", "Designation")
                        .WithMany("User")
                        .HasForeignKey("DesignationId")
                        .HasConstraintName("FK_User_Designation");

                    b.HasOne("MM.ClientModels.Gender", "Gender")
                        .WithMany("User")
                        .HasForeignKey("GenderId")
                        .HasConstraintName("FK_User_Gender")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.ReferralType", "ReferralType")
                        .WithMany("User")
                        .HasForeignKey("ReferralTypeId")
                        .HasConstraintName("FK_User_ReferralType");

                    b.HasOne("MM.ClientModels.Role", "Role")
                        .WithMany("User")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_User_Role")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Title", "Title")
                        .WithMany("User")
                        .HasForeignKey("TitleId")
                        .HasConstraintName("FK_User_Title")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.CommunicationPreference", b =>
                {
                    b.HasOne("MM.ClientModels.CommunicationType", "CommunicationType")
                        .WithMany("CommunicationPreference")
                        .HasForeignKey("CommunicationTypeId")
                        .HasConstraintName("FK_CommunicationPreference_CommunicationType")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.Cpd", b =>
                {
                    b.HasOne("MM.ClientModels.ClientUser", "CpdawardedBy")
                        .WithMany("Cpd")
                        .HasForeignKey("CpdawardedById")
                        .HasConstraintName("FK_CPD_User")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("Cpd")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_CPD_Member")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("Cpd")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_CPD_RelatedTo")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberCategorySetUp", b =>
                {
                    b.HasOne("MM.ClientModels.MemberCategory", "MemberCategory")
                        .WithMany("CpdmemberCategorySetUp")
                        .HasForeignKey("MemberCategoryId")
                        .HasConstraintName("FK_CPDMemberCategorySetUp_MemberCategory");

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("CpdmemberCategorySetUp")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_CPDMemberCategorySetUp_RelatedTo")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberLevelSetUp", b =>
                {
                    b.HasOne("MM.ClientModels.MemberLevel", "MemberLevel")
                        .WithMany("CpdmemberLevelSetUp")
                        .HasForeignKey("MemberLevelId")
                        .HasConstraintName("FK_CPDMemberLevelSetUp_MemberLevel");

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("CpdmemberLevelSetUp")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_CPDMemberLevelSetUp_RelatedTo")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberTeamSetUp", b =>
                {
                    b.HasOne("MM.ClientModels.MemberTeam", "MemberTeam")
                        .WithMany("CpdmemberTeamSetUp")
                        .HasForeignKey("MemberTeamId")
                        .HasConstraintName("FK_CPDMemberTeamSetUp_MemberTeam");

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("CpdmemberTeamSetUp")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_CPDMemberTeamSetUp_RelatedTo")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberTypeSetUp", b =>
                {
                    b.HasOne("MM.ClientModels.MemberType", "MemberType")
                        .WithMany("CpdmemberTypeSetUp")
                        .HasForeignKey("MemberTypeId")
                        .HasConstraintName("FK_CPDMemberTypeSetUp_MemberType");

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("CpdmemberTypeSetUp")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_CPDMemberTypeSetUp_RelatedTo")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.Donation", b =>
                {
                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("Donation")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_Donation_Member")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PromotionDetail", "PromotionDetail")
                        .WithMany("Donation")
                        .HasForeignKey("PromotionDetailId")
                        .HasConstraintName("FK_Donation_PromotionDetail");
                });

            modelBuilder.Entity("MM.ClientModels.EmailCcrule", b =>
                {
                    b.HasOne("MM.ClientModels.EmailType", "EmailType")
                        .WithMany("EmailCcrule")
                        .HasForeignKey("EmailTypeId")
                        .HasConstraintName("FK_EmailCCRule_EmailType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Role", "Role")
                        .WithMany("EmailCcrule")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_EmailCCRule_Role")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EmailTemplateContent", b =>
                {
                    b.HasOne("MM.ClientModels.EmailTemplateName", "EmailTemplateName")
                        .WithMany("EmailTemplateContent")
                        .HasForeignKey("EmailTemplateNameId")
                        .HasConstraintName("FK_EmailTemplateContent_EmailTemplateName")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EquipmentCount", b =>
                {
                    b.HasOne("MM.ClientModels.Equipment", "Equipment")
                        .WithMany("EquipmentCount")
                        .HasForeignKey("EquipmentId")
                        .HasConstraintName("FK_EquipmentCount_Equipment")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.Event", b =>
                {
                    b.HasOne("MM.ClientModels.Address", "Address")
                        .WithMany("Event")
                        .HasForeignKey("AddressId")
                        .HasConstraintName("FK_Event_Address")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.ClientUser", "Organizer")
                        .WithMany("Event")
                        .HasForeignKey("OrganizerId")
                        .HasConstraintName("FK_Event_User")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.ClientTimeZone", "TimeZone")
                        .WithMany("Event")
                        .HasForeignKey("TimeZoneId")
                        .HasConstraintName("FK_Event_TimeZone")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventAccess", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventAccess")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventAccess_Event")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventAttendance", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventAttendance")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventAttendance_Event")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("EventAttendance")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_EventAttendance_Member")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventCommunication", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventCommunication")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventCommunication_Event")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventEquipment", b =>
                {
                    b.HasOne("MM.ClientModels.Equipment", "Equipment")
                        .WithMany("EventEquipment")
                        .HasForeignKey("EquipmentId")
                        .HasConstraintName("FK_EventEquipmentRequirement_Equipment")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventEquipment")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventEquipmentRequirement_Event")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventMinute", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventMinute")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventMinute_Event")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.EventMinuteStatus", "MinuteStatus")
                        .WithMany("EventMinute")
                        .HasForeignKey("MinuteStatusId")
                        .HasConstraintName("FK_EventMinute_EventMinuteStatus")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventPreRequisiteEvent", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventPreRequisiteEventEvent")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventPreRequisiteEvent_Event")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Event", "PreRequisiteEvent")
                        .WithMany("EventPreRequisiteEventPreRequisiteEvent")
                        .HasForeignKey("PreRequisiteEventId")
                        .HasConstraintName("FK_EventPreRequisiteEvent_PreRequisiteEventId_Event")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventRegistration", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventRegistration")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventRegistration_Event")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.EventResponseType", "EventResponseType")
                        .WithMany("EventRegistration")
                        .HasForeignKey("EventResponseTypeId")
                        .HasConstraintName("FK_EventRegistration_EventResponseType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("EventRegistration")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_EventRegistration_Member")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventRestrictionList", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventRestrictionList")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventRestrictionList_Event")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.MemberLevel", "MemberLevel")
                        .WithMany("EventRestrictionList")
                        .HasForeignKey("MemberLevelId")
                        .HasConstraintName("FK_EventRestrictionList_MemberLevel");

                    b.HasOne("MM.ClientModels.MemberTeam", "MemberTeam")
                        .WithMany("EventRestrictionList")
                        .HasForeignKey("MemberTeamId")
                        .HasConstraintName("FK_EventRestrictionList_MemberTeam");
                });

            modelBuilder.Entity("MM.ClientModels.EventRole", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventRole")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventRole_Event")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventRoleUserXref", b =>
                {
                    b.HasOne("MM.ClientModels.EventRole", "EventRole")
                        .WithMany("EventRoleUserXref")
                        .HasForeignKey("EventRoleId")
                        .HasConstraintName("FK_EventRoleUserXRef_EventRole")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.ClientUser", "User")
                        .WithMany("EventRoleUserXref")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_EventRoleUserXRef_User")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.Invoice", b =>
                {
                    b.HasOne("MM.ClientModels.InvoiceStatus", "InvoiceStatus")
                        .WithMany("Invoice")
                        .HasForeignKey("InvoiceStatusId")
                        .HasConstraintName("FK_Invoice_InvoiceStatus")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("Invoice")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_Invoice_Member")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PaymentGateway", "PaymentGateway")
                        .WithMany("Invoice")
                        .HasForeignKey("PaymentGatewayId")
                        .HasConstraintName("FK_Invoice_PaymentGateway")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("Invoice")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_Invoice_RelatedTo");
                });

            modelBuilder.Entity("MM.ClientModels.LandingPage", b =>
                {
                    b.HasOne("MM.ClientModels.MemberType", "MemberType")
                        .WithMany("LandingPage")
                        .HasForeignKey("MemberTypeId")
                        .HasConstraintName("FK_LandingPage_MemberType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Page", "Page")
                        .WithMany("LandingPage")
                        .HasForeignKey("PageId")
                        .HasConstraintName("FK_LandingPage_Page")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.MarketingGroupXref", b =>
                {
                    b.HasOne("MM.ClientModels.MarketingGroup", "MarketingGroup")
                        .WithMany("MarketingGroupXref")
                        .HasForeignKey("MarketingGroupId")
                        .HasConstraintName("FK_MarketingGroupXRef_MarketingGroup")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MarketingGroupXref")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MarketingGroupXRef_Member")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.MarketingProfileXref", b =>
                {
                    b.HasOne("MM.ClientModels.MarketingProfile", "MarketingProfile")
                        .WithMany("MarketingProfileXref")
                        .HasForeignKey("MarketingProfileId")
                        .HasConstraintName("FK_MarketingProfileXRef_MarketingProfile")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MarketingProfileXref")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MarketingProfileXRef_Member")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.Member", b =>
                {
                    b.HasOne("MM.ClientModels.Gender", "Gender")
                        .WithMany("Member")
                        .HasForeignKey("GenderId")
                        .HasConstraintName("FK_Member_Gender")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.MemberBranch", "MemberBranch")
                        .WithMany("Member")
                        .HasForeignKey("MemberBranchId")
                        .HasConstraintName("FK_Member_MemberBranch");

                    b.HasOne("MM.ClientModels.MemberLevel", "MemberLevel")
                        .WithMany("Member")
                        .HasForeignKey("MemberLevelId")
                        .HasConstraintName("FK_Member_MemberLevel");

                    b.HasOne("MM.ClientModels.MemberStatus", "MemberStatus")
                        .WithMany("Member")
                        .HasForeignKey("MemberStatusId")
                        .HasConstraintName("FK_Member_MemberStatus");

                    b.HasOne("MM.ClientModels.MemberTeam", "MemberTeam")
                        .WithMany("Member")
                        .HasForeignKey("MemberTeamId")
                        .HasConstraintName("FK_Member_MemberTeam");

                    b.HasOne("MM.ClientModels.MemberType", "MemberType")
                        .WithMany("Member")
                        .HasForeignKey("MemberTypeId")
                        .HasConstraintName("FK_Member_MemberType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Organization", "Organization")
                        .WithMany("Member")
                        .HasForeignKey("OrganizationId")
                        .HasConstraintName("FK_Member_Organization");

                    b.HasOne("MM.ClientModels.OrganizationStructure", "OrganizationStructure")
                        .WithMany("Member")
                        .HasForeignKey("OrganizationStructureId")
                        .HasConstraintName("FK_Member_OrganizationStructure");

                    b.HasOne("MM.ClientModels.ReferralType", "ReferralType")
                        .WithMany("Member")
                        .HasForeignKey("ReferralTypeId")
                        .HasConstraintName("FK_Member_ReferralType");

                    b.HasOne("MM.ClientModels.Title", "Title")
                        .WithMany("Member")
                        .HasForeignKey("TitleId")
                        .HasConstraintName("FK_Member_Title")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.MemberAddress", b =>
                {
                    b.HasOne("MM.ClientModels.AddressType", "AddressType")
                        .WithMany("MemberAddress")
                        .HasForeignKey("AddressTypeId")
                        .HasConstraintName("FK_MemberAddress_AddressType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.MemberBranch", "Branch")
                        .WithMany("MemberAddress")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_MemberAddress_MemberBranch");

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MemberAddress")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MemberAddress_Member");

                    b.HasOne("MM.ClientModels.Organization", "Organization")
                        .WithMany("MemberAddress")
                        .HasForeignKey("OrganizationId")
                        .HasConstraintName("FK_MemberAddress_Organization");
                });

            modelBuilder.Entity("MM.ClientModels.MemberAffliationXref", b =>
                {
                    b.HasOne("MM.ClientModels.Affliation", "Affliation")
                        .WithMany("MemberAffliationXref")
                        .HasForeignKey("AffliationId")
                        .HasConstraintName("FK_MemberAffliationXRef_Affliation");

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MemberAffliationXref")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MemberAffliationXRef_Member");
                });

            modelBuilder.Entity("MM.ClientModels.MemberBankingDetail", b =>
                {
                    b.HasOne("MM.ClientModels.AccountType", "AccountType")
                        .WithMany("MemberBankingDetail")
                        .HasForeignKey("AccountTypeId")
                        .HasConstraintName("FK_MemberBankingDetail_AccountType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MemberBankingDetail")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MemberBankingDetail_Member")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.MemberBranch", b =>
                {
                    b.HasOne("MM.ClientModels.Organization", "Organization")
                        .WithMany("MemberBranch")
                        .HasForeignKey("OrganizationId")
                        .HasConstraintName("FK_MemberBranch_Organization")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.MemberCommunicationPreference", b =>
                {
                    b.HasOne("MM.ClientModels.CommunicationType", "CommunicationType")
                        .WithMany("MemberCommunicationPreference")
                        .HasForeignKey("CommunicationTypeId")
                        .HasConstraintName("FK_MemberCommunicationPreference_CommunicationType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MemberCommunicationPreference")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MemberCommunicationPreference_Member")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.MemberFile", b =>
                {
                    b.HasOne("MM.ClientModels.FileType", "FileType")
                        .WithMany("MemberFile")
                        .HasForeignKey("FileTypeId")
                        .HasConstraintName("FK_MemberFile_FileType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MemberFile")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MemberFile_Member")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.MemberPlanHistory", b =>
                {
                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MemberPlanHistory")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MembershipHistory_Member");

                    b.HasOne("MM.ClientModels.PlanDetail", "MemberPlanDetail")
                        .WithMany("MemberPlanHistory")
                        .HasForeignKey("MemberPlanDetailId")
                        .HasConstraintName("FK_MemberPlanHistory_PlanDetail")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PlanMaster", "MemberPlanDetailNavigation")
                        .WithMany("MemberPlanHistory")
                        .HasForeignKey("MemberPlanDetailId")
                        .HasConstraintName("FK_MembershipHistory_PlanMaster")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Organization", "Organization")
                        .WithMany("MemberPlanHistory")
                        .HasForeignKey("OrganizationId")
                        .HasConstraintName("FK_MembershipHistory_Organization");
                });

            modelBuilder.Entity("MM.ClientModels.MemberQualificationXref", b =>
                {
                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MemberQualificationXref")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MemberQualificationXRef_Member")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Qualification", "Qualification")
                        .WithMany("MemberQualificationXref")
                        .HasForeignKey("QualificationId")
                        .HasConstraintName("FK_MemberQualificationXRef_Qualification");
                });

            modelBuilder.Entity("MM.ClientModels.MemberType", b =>
                {
                    b.HasOne("MM.ClientModels.MemberCategory", "MemberCategory")
                        .WithMany("MemberType")
                        .HasForeignKey("MemberCategoryId")
                        .HasConstraintName("FK_MemberType_MemberCategory")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.PaymentSetting", b =>
                {
                    b.HasOne("MM.ClientModels.Currency", "Currency")
                        .WithMany("PaymentSetting")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_PaymentSetting_Currency");
                });

            modelBuilder.Entity("MM.ClientModels.PaymentSettingAllowedCard", b =>
                {
                    b.HasOne("MM.ClientModels.PaymentCard", "PaymentCard")
                        .WithMany("PaymentSettingAllowedCard")
                        .HasForeignKey("PaymentCardId")
                        .HasConstraintName("FK_PaymentSettingAllowedCard_PaymentCard")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PaymentSetting", "PaymentSetting")
                        .WithMany("PaymentSettingAllowedCard")
                        .HasForeignKey("PaymentSettingId")
                        .HasConstraintName("FK_PaymentSettingAllowedCard_PaymentSetting")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.PlanCanChangeToXref", b =>
                {
                    b.HasOne("MM.ClientModels.PlanMaster", "FromPlanMaster")
                        .WithMany("PlanCanChangeToXrefFromPlanMaster")
                        .HasForeignKey("FromPlanMasterId")
                        .HasConstraintName("FK_MemberPlanCanChangeTo_PlanMaster")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PlanMaster", "ToPlanMaster")
                        .WithMany("PlanCanChangeToXrefToPlanMaster")
                        .HasForeignKey("ToPlanMasterId")
                        .HasConstraintName("FK_MemberPlanCanChangeTo_PlanMaster2")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.PlanDetail", b =>
                {
                    b.HasOne("MM.ClientModels.Currency", "Currency")
                        .WithMany("PlanDetail")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_PlanDetail_Currency")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PlanFrequency", "PlanFrequency")
                        .WithMany("PlanDetail")
                        .HasForeignKey("PlanFrequencyId")
                        .HasConstraintName("FK_PlanDetail_PlanFrequency")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PlanMaster", "PlanMaster")
                        .WithMany("PlanDetail")
                        .HasForeignKey("PlanMasterId")
                        .HasConstraintName("FK_PlanDetail_PlanMaster")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.PlanMaster", b =>
                {
                    b.HasOne("MM.ClientModels.MemberCategory", "MemberCategory")
                        .WithMany("PlanMaster")
                        .HasForeignKey("MemberCategoryId")
                        .HasConstraintName("FK_PlanMaster_MemberCategory")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PaymentSetting", "PaymentMethod")
                        .WithMany("PlanMaster")
                        .HasForeignKey("PaymentMethodId")
                        .HasConstraintName("FK_PlanMaster_PaymentSetting")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.PromotionDetail", b =>
                {
                    b.HasOne("MM.ClientModels.MemberLevel", "MemberLevel")
                        .WithMany("PromotionDetail")
                        .HasForeignKey("MemberLevelId")
                        .HasConstraintName("FK_PromotionDetail_MemberLevel");

                    b.HasOne("MM.ClientModels.MemberType", "MemberType")
                        .WithMany("PromotionDetail")
                        .HasForeignKey("MemberTypeId")
                        .HasConstraintName("FK_PromotionDetail_MemberType");

                    b.HasOne("MM.ClientModels.PromotionMaster", "PromotionMaster")
                        .WithMany("PromotionDetail")
                        .HasForeignKey("PromotionMasterId")
                        .HasConstraintName("FK_PromotionDetail_PromotionMaster")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.PromotionResponse", b =>
                {
                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("PromotionResponse")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_PromotionResponse_Member")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PromotionMaster", "PromotionMaster")
                        .WithMany("PromotionResponse")
                        .HasForeignKey("PromotionMasterId")
                        .HasConstraintName("FK_PromotionResponse_PromotionMaster")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PromotionResponseType", "PromotionResponseTypeNavigation")
                        .WithMany("PromotionResponse")
                        .HasForeignKey("PromotionResponseType")
                        .HasConstraintName("FK_PromotionResponse_PromotionResponseType")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.Refund", b =>
                {
                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("Refund")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_Refund_Member")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PaymentGateway", "PaymentGateway")
                        .WithMany("Refund")
                        .HasForeignKey("PaymentGatewayId")
                        .HasConstraintName("FK_Refund_PaymentGateway")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("Refund")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_Refund_RelatedTo");
                });

            modelBuilder.Entity("MM.ClientModels.RolePermissionXref", b =>
                {
                    b.HasOne("MM.ClientModels.Permission", "Permission")
                        .WithMany("RolePermissionXref")
                        .HasForeignKey("Permissionid")
                        .HasConstraintName("FK_RolePermissionXRef_Permission")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Role", "Role")
                        .WithMany("RolePermissionXref")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_RolePermissionXRef_Role")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.State", b =>
                {
                    b.HasOne("MM.ClientModels.Country", "Country")
                        .WithMany("State")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_State_Country")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.UserRoleXref", b =>
                {
                    b.HasOne("MM.ClientModels.Role", "Role")
                        .WithMany("UserRoleXref")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_UserRole_Role")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.ClientUser", "User")
                        .WithMany("UserRoleXref")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserRole_User")
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
