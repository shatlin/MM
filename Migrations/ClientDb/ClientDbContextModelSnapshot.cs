// <auto-generated />
using System;
using MM.ClientModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MM.Migrations.ClientDb
{
    [DbContext(typeof(ClientDbContext))]
    partial class ClientDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MM.ClientModels.AccountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("AccountType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 11, 936, DateTimeKind.Local).AddTicks(2394),
                            Description = "Savings Account",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 11, 939, DateTimeKind.Local).AddTicks(219),
                            Name = "Savings Account"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 11, 939, DateTimeKind.Local).AddTicks(1870),
                            Description = "Cheque Account",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 11, 939, DateTimeKind.Local).AddTicks(1903),
                            Name = "Cheque Account"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 11, 939, DateTimeKind.Local).AddTicks(1931),
                            Description = "Corporante Account",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 11, 939, DateTimeKind.Local).AddTicks(1934),
                            Name = "Corporante Account"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 11, 939, DateTimeKind.Local).AddTicks(1941),
                            Description = "Business Account",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 11, 939, DateTimeKind.Local).AddTicks(1944),
                            Name = "Business Account"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("AddressLine2")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("AddressTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BuidlingName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("ComplexName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Gpscoordinates")
                        .HasColumnName("GPSCoordinates")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("PostalCode")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("PrimaryContactNo")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("PrimaryEmail")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("SecondaryContactNo")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("SecondaryEmail")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("StreetName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressTypeId");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("StateId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("MM.ClientModels.AddressType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("AddressType");
                });

            modelBuilder.Entity("MM.ClientModels.Affliation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Affliation");
                });

            modelBuilder.Entity("MM.ClientModels.BankingDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("AccountTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("RoutingCode")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AccountTypeId");

                    b.ToTable("BankingDetail");
                });

            modelBuilder.Entity("MM.ClientModels.Billing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CommentsForPayer")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("InternalNotes")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("PaidAmount")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<DateTime?>("PaymentDueDate")
                        .HasColumnType("datetime");

                    b.Property<int>("PaymentGatewayId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentItem")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("MemberId");

                    b.HasIndex("PaymentGatewayId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("Billing");
                });

            modelBuilder.Entity("MM.ClientModels.BillingCommunication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BillingId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Reminder1ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Reminder1Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Reminder1SentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Reminder2ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Reminder2Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Reminder2SentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Reminder3ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Reminder3Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Reminder3SentDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("BillingCommunication");
                });

            modelBuilder.Entity("MM.ClientModels.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(563),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(2226),
                            Name = "Adelaide",
                            StateId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(3839),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(3888),
                            Name = "Alfred Nzo District Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(3939),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(3942),
                            Name = "Alice",
                            StateId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(3948),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(3951),
                            Name = "Aliwal North",
                            StateId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(3956),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(3958),
                            Name = "Amathole District Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(3963),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(3967),
                            Name = "Bhisho",
                            StateId = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(3973),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(3978),
                            Name = "Buffalo City Metropolitan Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(3984),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(3987),
                            Name = "Burgersdorp",
                            StateId = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(3992),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(3995),
                            Name = "Butterworth",
                            StateId = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4001),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4005),
                            Name = "Cacadu District Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 11,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4011),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4014),
                            Name = "Chris Hani District Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 12,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4020),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4023),
                            Name = "Cradock",
                            StateId = 1
                        },
                        new
                        {
                            Id = 13,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4029),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4033),
                            Name = "Dordrecht",
                            StateId = 1
                        },
                        new
                        {
                            Id = 14,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4039),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4044),
                            Name = "East London",
                            StateId = 1
                        },
                        new
                        {
                            Id = 15,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4080),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4085),
                            Name = "Elliot",
                            StateId = 1
                        },
                        new
                        {
                            Id = 16,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4090),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4093),
                            Name = "Fort Beaufort",
                            StateId = 1
                        },
                        new
                        {
                            Id = 17,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4098),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4101),
                            Name = "Graaff-Reinet",
                            StateId = 1
                        },
                        new
                        {
                            Id = 18,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4106),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4109),
                            Name = "Grahamstown",
                            StateId = 1
                        },
                        new
                        {
                            Id = 19,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4119),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4124),
                            Name = "Ilinge",
                            StateId = 1
                        },
                        new
                        {
                            Id = 20,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4129),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4131),
                            Name = "Joe Gqabi District Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 21,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4137),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4139),
                            Name = "Kirkwood",
                            StateId = 1
                        },
                        new
                        {
                            Id = 22,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4144),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4148),
                            Name = "Kruisfontein",
                            StateId = 1
                        },
                        new
                        {
                            Id = 23,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4153),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4157),
                            Name = "Lady Frere",
                            StateId = 1
                        },
                        new
                        {
                            Id = 24,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4161),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4164),
                            Name = "Middelburg",
                            StateId = 1
                        },
                        new
                        {
                            Id = 25,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4169),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4172),
                            Name = "Molteno",
                            StateId = 1
                        },
                        new
                        {
                            Id = 26,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4359),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4367),
                            Name = "Mthatha",
                            StateId = 1
                        },
                        new
                        {
                            Id = 27,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4372),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4375),
                            Name = "Nelson Mandela Bay Metropolitan Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 28,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4380),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4382),
                            Name = "OR Tambo District Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 29,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4387),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4392),
                            Name = "Port Alfred",
                            StateId = 1
                        },
                        new
                        {
                            Id = 30,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4396),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4399),
                            Name = "Port Elizabeth",
                            StateId = 1
                        },
                        new
                        {
                            Id = 31,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4405),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4407),
                            Name = "Port Saint Johnâ€™s",
                            StateId = 1
                        },
                        new
                        {
                            Id = 32,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4412),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4414),
                            Name = "Queensdale",
                            StateId = 1
                        },
                        new
                        {
                            Id = 33,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4419),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4422),
                            Name = "Queenstown",
                            StateId = 1
                        },
                        new
                        {
                            Id = 34,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4426),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4430),
                            Name = "Somerset East",
                            StateId = 1
                        },
                        new
                        {
                            Id = 35,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4434),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4438),
                            Name = "Stutterheim",
                            StateId = 1
                        },
                        new
                        {
                            Id = 36,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4442),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4445),
                            Name = "Uitenhage",
                            StateId = 1
                        },
                        new
                        {
                            Id = 37,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4450),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4452),
                            Name = "Whittlesea",
                            StateId = 1
                        },
                        new
                        {
                            Id = 38,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4456),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4459),
                            Name = "Willowmore",
                            StateId = 1
                        },
                        new
                        {
                            Id = 39,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4464),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4468),
                            Name = "Allanridge",
                            StateId = 2
                        },
                        new
                        {
                            Id = 40,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4473),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4476),
                            Name = "Bethlehem",
                            StateId = 2
                        },
                        new
                        {
                            Id = 41,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4482),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4485),
                            Name = "Bloemfontein",
                            StateId = 2
                        },
                        new
                        {
                            Id = 42,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4491),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4494),
                            Name = "Bothaville",
                            StateId = 2
                        },
                        new
                        {
                            Id = 43,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4501),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4505),
                            Name = "Botshabelo",
                            StateId = 2
                        },
                        new
                        {
                            Id = 44,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4509),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4512),
                            Name = "Brandfort",
                            StateId = 2
                        },
                        new
                        {
                            Id = 45,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4517),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4520),
                            Name = "Clocolan",
                            StateId = 2
                        },
                        new
                        {
                            Id = 46,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4524),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4527),
                            Name = "Deneysville",
                            StateId = 2
                        },
                        new
                        {
                            Id = 47,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4532),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4535),
                            Name = "Fezile Dabi District Municipality",
                            StateId = 2
                        },
                        new
                        {
                            Id = 48,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4540),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4543),
                            Name = "Frankfort",
                            StateId = 2
                        },
                        new
                        {
                            Id = 49,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4549),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4552),
                            Name = "Harrismith",
                            StateId = 2
                        },
                        new
                        {
                            Id = 50,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4556),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4560),
                            Name = "Heilbron",
                            StateId = 2
                        },
                        new
                        {
                            Id = 51,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4564),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4567),
                            Name = "Hennenman",
                            StateId = 2
                        },
                        new
                        {
                            Id = 52,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4572),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4575),
                            Name = "Hoopstad",
                            StateId = 2
                        },
                        new
                        {
                            Id = 53,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4581),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4584),
                            Name = "Koppies",
                            StateId = 2
                        },
                        new
                        {
                            Id = 54,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4588),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4592),
                            Name = "Kroonstad",
                            StateId = 2
                        },
                        new
                        {
                            Id = 55,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4598),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4601),
                            Name = "Kutloanong",
                            StateId = 2
                        },
                        new
                        {
                            Id = 56,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4605),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4608),
                            Name = "Ladybrand",
                            StateId = 2
                        },
                        new
                        {
                            Id = 57,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4612),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4615),
                            Name = "Lejweleputswa District Municipality",
                            StateId = 2
                        },
                        new
                        {
                            Id = 58,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4620),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4624),
                            Name = "Lindley",
                            StateId = 2
                        },
                        new
                        {
                            Id = 59,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4629),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4633),
                            Name = "Mangaung Metropolitan Municipality",
                            StateId = 2
                        },
                        new
                        {
                            Id = 60,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4639),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4642),
                            Name = "Marquard",
                            StateId = 2
                        },
                        new
                        {
                            Id = 61,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4648),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4651),
                            Name = "Parys",
                            StateId = 2
                        },
                        new
                        {
                            Id = 62,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4657),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4662),
                            Name = "Phuthaditjhaba",
                            StateId = 2
                        },
                        new
                        {
                            Id = 63,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4668),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4672),
                            Name = "Reitz",
                            StateId = 2
                        },
                        new
                        {
                            Id = 64,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4677),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4680),
                            Name = "Sasolburg",
                            StateId = 2
                        },
                        new
                        {
                            Id = 65,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4686),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4690),
                            Name = "Senekal",
                            StateId = 2
                        },
                        new
                        {
                            Id = 66,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4695),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4698),
                            Name = "Thaba Nchu",
                            StateId = 2
                        },
                        new
                        {
                            Id = 67,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4703),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4707),
                            Name = "Thabo Mofutsanyana District Municipality",
                            StateId = 2
                        },
                        new
                        {
                            Id = 68,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4712),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4715),
                            Name = "Theunissen",
                            StateId = 2
                        },
                        new
                        {
                            Id = 69,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4721),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4723),
                            Name = "Ventersburg",
                            StateId = 2
                        },
                        new
                        {
                            Id = 70,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4727),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4731),
                            Name = "Viljoenskroon",
                            StateId = 2
                        },
                        new
                        {
                            Id = 71,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4735),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4739),
                            Name = "Villiers",
                            StateId = 2
                        },
                        new
                        {
                            Id = 72,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4743),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4746),
                            Name = "Virginia",
                            StateId = 2
                        },
                        new
                        {
                            Id = 73,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4780),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4783),
                            Name = "Vrede",
                            StateId = 2
                        },
                        new
                        {
                            Id = 74,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4787),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4790),
                            Name = "Vredefort",
                            StateId = 2
                        },
                        new
                        {
                            Id = 75,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4795),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4797),
                            Name = "Welkom",
                            StateId = 2
                        },
                        new
                        {
                            Id = 76,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4802),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4804),
                            Name = "Wesselsbron",
                            StateId = 2
                        },
                        new
                        {
                            Id = 77,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4810),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4813),
                            Name = "Winburg",
                            StateId = 2
                        },
                        new
                        {
                            Id = 78,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4820),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4823),
                            Name = "Xhariep District Municipality",
                            StateId = 2
                        },
                        new
                        {
                            Id = 79,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4828),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4831),
                            Name = "Zastron",
                            StateId = 2
                        },
                        new
                        {
                            Id = 80,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4836),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4839),
                            Name = "Alberton",
                            StateId = 3
                        },
                        new
                        {
                            Id = 81,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4845),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4847),
                            Name = "Benoni",
                            StateId = 3
                        },
                        new
                        {
                            Id = 82,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4852),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4855),
                            Name = "Boksburg",
                            StateId = 3
                        },
                        new
                        {
                            Id = 83,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4861),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4864),
                            Name = "Brakpan",
                            StateId = 3
                        },
                        new
                        {
                            Id = 84,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4869),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4873),
                            Name = "Bronkhorstspruit",
                            StateId = 3
                        },
                        new
                        {
                            Id = 85,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4879),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4882),
                            Name = "Carletonville",
                            StateId = 3
                        },
                        new
                        {
                            Id = 86,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4887),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4890),
                            Name = "Centurion",
                            StateId = 3
                        },
                        new
                        {
                            Id = 87,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4896),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4899),
                            Name = "City of Johannesburg Metropolitan Municipality",
                            StateId = 3
                        },
                        new
                        {
                            Id = 88,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4904),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4906),
                            Name = "City of Tshwane Metropolitan Municipality",
                            StateId = 3
                        },
                        new
                        {
                            Id = 89,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4911),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4914),
                            Name = "Cullinan",
                            StateId = 3
                        },
                        new
                        {
                            Id = 90,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4918),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4922),
                            Name = "Diepsloot",
                            StateId = 3
                        },
                        new
                        {
                            Id = 91,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4927),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4930),
                            Name = "Eastleigh",
                            StateId = 3
                        },
                        new
                        {
                            Id = 92,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4936),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4939),
                            Name = "Eden Glen",
                            StateId = 3
                        },
                        new
                        {
                            Id = 93,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4944),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4947),
                            Name = "Eden Glen Ext 60",
                            StateId = 3
                        },
                        new
                        {
                            Id = 94,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4952),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4956),
                            Name = "Edenvale",
                            StateId = 3
                        },
                        new
                        {
                            Id = 95,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4961),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4965),
                            Name = "Ekangala",
                            StateId = 3
                        },
                        new
                        {
                            Id = 96,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4973),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4975),
                            Name = "Ekurhuleni Metropolitan Municipality",
                            StateId = 3
                        },
                        new
                        {
                            Id = 97,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4982),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4985),
                            Name = "Heidelberg",
                            StateId = 3
                        },
                        new
                        {
                            Id = 98,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4990),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(4994),
                            Name = "Johannesburg",
                            StateId = 3
                        },
                        new
                        {
                            Id = 99,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5000),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5005),
                            Name = "Krugersdorp",
                            StateId = 3
                        },
                        new
                        {
                            Id = 100,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5010),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5013),
                            Name = "Mabopane",
                            StateId = 3
                        },
                        new
                        {
                            Id = 101,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5019),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5021),
                            Name = "Midrand",
                            StateId = 3
                        },
                        new
                        {
                            Id = 102,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5026),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5030),
                            Name = "Midstream",
                            StateId = 3
                        },
                        new
                        {
                            Id = 103,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5035),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5062),
                            Name = "Modderfontein",
                            StateId = 3
                        },
                        new
                        {
                            Id = 104,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5077),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5080),
                            Name = "Muldersdriseloop",
                            StateId = 3
                        },
                        new
                        {
                            Id = 105,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5086),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5089),
                            Name = "Nigel",
                            StateId = 3
                        },
                        new
                        {
                            Id = 106,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5095),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5099),
                            Name = "Orange Farm",
                            StateId = 3
                        },
                        new
                        {
                            Id = 107,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5104),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5108),
                            Name = "Pretoria",
                            StateId = 3
                        },
                        new
                        {
                            Id = 108,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5113),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5116),
                            Name = "Randburg",
                            StateId = 3
                        },
                        new
                        {
                            Id = 109,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5123),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5126),
                            Name = "Randfontein",
                            StateId = 3
                        },
                        new
                        {
                            Id = 110,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5131),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5135),
                            Name = "Roodepoort",
                            StateId = 3
                        },
                        new
                        {
                            Id = 111,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5140),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5143),
                            Name = "Sedibeng District Municipality",
                            StateId = 3
                        },
                        new
                        {
                            Id = 112,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5148),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5150),
                            Name = "Soweto",
                            StateId = 3
                        },
                        new
                        {
                            Id = 113,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5155),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5159),
                            Name = "Springs",
                            StateId = 3
                        },
                        new
                        {
                            Id = 114,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5163),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5167),
                            Name = "Tembisa",
                            StateId = 3
                        },
                        new
                        {
                            Id = 115,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5172),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5175),
                            Name = "Vanderbijlpark",
                            StateId = 3
                        },
                        new
                        {
                            Id = 116,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5180),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5183),
                            Name = "Vereeniging",
                            StateId = 3
                        },
                        new
                        {
                            Id = 117,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5188),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5192),
                            Name = "West Rand District Municipality",
                            StateId = 3
                        },
                        new
                        {
                            Id = 118,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5196),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5200),
                            Name = "Westonaria",
                            StateId = 3
                        },
                        new
                        {
                            Id = 119,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5232),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5235),
                            Name = "Amajuba District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 120,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5242),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5245),
                            Name = "Ballito",
                            StateId = 4
                        },
                        new
                        {
                            Id = 121,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5250),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5253),
                            Name = "Berea",
                            StateId = 4
                        },
                        new
                        {
                            Id = 122,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5259),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5262),
                            Name = "Dundee",
                            StateId = 4
                        },
                        new
                        {
                            Id = 123,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5267),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5271),
                            Name = "Durban",
                            StateId = 4
                        },
                        new
                        {
                            Id = 124,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5276),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5279),
                            Name = "Ekuvukeni",
                            StateId = 4
                        },
                        new
                        {
                            Id = 125,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5284),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5287),
                            Name = "eMkhomazi",
                            StateId = 4
                        },
                        new
                        {
                            Id = 126,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5292),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5296),
                            Name = "Empangeni",
                            StateId = 4
                        },
                        new
                        {
                            Id = 127,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5301),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5305),
                            Name = "Eshowe",
                            StateId = 4
                        },
                        new
                        {
                            Id = 128,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5310),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5312),
                            Name = "eSikhaleni",
                            StateId = 4
                        },
                        new
                        {
                            Id = 129,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5319),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5322),
                            Name = "eThekwini Metropolitan Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 130,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5326),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5330),
                            Name = "Glencoe",
                            StateId = 4
                        },
                        new
                        {
                            Id = 131,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5335),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5338),
                            Name = "Greytown",
                            StateId = 4
                        },
                        new
                        {
                            Id = 132,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5343),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5346),
                            Name = "Hluhluwe",
                            StateId = 4
                        },
                        new
                        {
                            Id = 133,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5351),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5354),
                            Name = "Howick",
                            StateId = 4
                        },
                        new
                        {
                            Id = 134,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5359),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5363),
                            Name = "iLembe District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 135,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5368),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5372),
                            Name = "Kokstad",
                            StateId = 4
                        },
                        new
                        {
                            Id = 136,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5376),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5379),
                            Name = "KwaDukuza",
                            StateId = 4
                        },
                        new
                        {
                            Id = 137,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5384),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5387),
                            Name = "Margate",
                            StateId = 4
                        },
                        new
                        {
                            Id = 138,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5393),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5396),
                            Name = "Mondlo",
                            StateId = 4
                        },
                        new
                        {
                            Id = 139,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5401),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5404),
                            Name = "Mooirivier",
                            StateId = 4
                        },
                        new
                        {
                            Id = 140,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5410),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5413),
                            Name = "Mpophomeni",
                            StateId = 4
                        },
                        new
                        {
                            Id = 141,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5418),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5421),
                            Name = "Mpumalanga",
                            StateId = 4
                        },
                        new
                        {
                            Id = 142,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5425),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5429),
                            Name = "Mtubatuba",
                            StateId = 4
                        },
                        new
                        {
                            Id = 143,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5434),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5437),
                            Name = "Ndwedwe",
                            StateId = 4
                        },
                        new
                        {
                            Id = 144,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5442),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5445),
                            Name = "Newcastle",
                            StateId = 4
                        },
                        new
                        {
                            Id = 145,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5452),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5454),
                            Name = "Pietermaritzburg",
                            StateId = 4
                        },
                        new
                        {
                            Id = 146,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5459),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5462),
                            Name = "Port Shepstone",
                            StateId = 4
                        },
                        new
                        {
                            Id = 147,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5468),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5472),
                            Name = "Richards Bay",
                            StateId = 4
                        },
                        new
                        {
                            Id = 148,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5477),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5480),
                            Name = "Richmond",
                            StateId = 4
                        },
                        new
                        {
                            Id = 149,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5485),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5489),
                            Name = "Scottburgh",
                            StateId = 4
                        },
                        new
                        {
                            Id = 150,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5494),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5498),
                            Name = "Sisonke District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 151,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5503),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5506),
                            Name = "Sundumbili",
                            StateId = 4
                        },
                        new
                        {
                            Id = 152,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5511),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5514),
                            Name = "Ugu District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 153,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5519),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5522),
                            Name = "Ulundi",
                            StateId = 4
                        },
                        new
                        {
                            Id = 154,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5527),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5530),
                            Name = "uMgungundlovu District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 155,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5535),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5538),
                            Name = "uMkhanyakude District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 156,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5543),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5546),
                            Name = "uMzinyathi District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 157,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5551),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5554),
                            Name = "uThukela District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 158,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5558),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5561),
                            Name = "uThungulu District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 159,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5567),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5570),
                            Name = "Utrecht",
                            StateId = 4
                        },
                        new
                        {
                            Id = 160,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5575),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5578),
                            Name = "Vryheid",
                            StateId = 4
                        },
                        new
                        {
                            Id = 161,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5586),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5589),
                            Name = "Zululand District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 162,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5594),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5599),
                            Name = "Bochum",
                            StateId = 5
                        },
                        new
                        {
                            Id = 163,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5604),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5608),
                            Name = "Capricorn District Municipality",
                            StateId = 5
                        },
                        new
                        {
                            Id = 164,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5613),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5615),
                            Name = "Duiwelskloof",
                            StateId = 5
                        },
                        new
                        {
                            Id = 165,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5899),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5913),
                            Name = "Ga-Kgapane",
                            StateId = 5
                        },
                        new
                        {
                            Id = 166,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5921),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5924),
                            Name = "Giyani",
                            StateId = 5
                        },
                        new
                        {
                            Id = 167,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5929),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5932),
                            Name = "Lebowakgomo",
                            StateId = 5
                        },
                        new
                        {
                            Id = 168,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5939),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5942),
                            Name = "Louis Trichardt",
                            StateId = 5
                        },
                        new
                        {
                            Id = 169,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5947),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5950),
                            Name = "Mankoeng",
                            StateId = 5
                        },
                        new
                        {
                            Id = 170,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5954),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5957),
                            Name = "Modimolle",
                            StateId = 5
                        },
                        new
                        {
                            Id = 171,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5962),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5965),
                            Name = "Mokopane",
                            StateId = 5
                        },
                        new
                        {
                            Id = 172,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5970),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5973),
                            Name = "Mopani District Municipality",
                            StateId = 5
                        },
                        new
                        {
                            Id = 173,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5978),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5981),
                            Name = "Musina",
                            StateId = 5
                        },
                        new
                        {
                            Id = 174,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5985),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5988),
                            Name = "Nkowakowa",
                            StateId = 5
                        },
                        new
                        {
                            Id = 175,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5993),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(5997),
                            Name = "Phalaborwa",
                            StateId = 5
                        },
                        new
                        {
                            Id = 176,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6002),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6004),
                            Name = "Polokwane",
                            StateId = 5
                        },
                        new
                        {
                            Id = 177,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6010),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6013),
                            Name = "Sekhukhune District Municipality",
                            StateId = 5
                        },
                        new
                        {
                            Id = 178,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6018),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6020),
                            Name = "Thabazimbi",
                            StateId = 5
                        },
                        new
                        {
                            Id = 179,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6027),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6030),
                            Name = "Thohoyandou",
                            StateId = 5
                        },
                        new
                        {
                            Id = 180,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6034),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6037),
                            Name = "Thulamahashi",
                            StateId = 5
                        },
                        new
                        {
                            Id = 181,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6042),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6045),
                            Name = "Tzaneen",
                            StateId = 5
                        },
                        new
                        {
                            Id = 182,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6051),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6054),
                            Name = "Vhembe District Municipality",
                            StateId = 5
                        },
                        new
                        {
                            Id = 183,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6061),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6065),
                            Name = "Warmbaths",
                            StateId = 5
                        },
                        new
                        {
                            Id = 184,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6070),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6073),
                            Name = "Waterberg District Municipality",
                            StateId = 5
                        },
                        new
                        {
                            Id = 185,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6079),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6083),
                            Name = "Balfour",
                            StateId = 6
                        },
                        new
                        {
                            Id = 186,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6088),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6091),
                            Name = "Barberton",
                            StateId = 6
                        },
                        new
                        {
                            Id = 187,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6096),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6100),
                            Name = "Belfast",
                            StateId = 6
                        },
                        new
                        {
                            Id = 188,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6105),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6108),
                            Name = "Bethal",
                            StateId = 6
                        },
                        new
                        {
                            Id = 189,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6114),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6117),
                            Name = "Breyten",
                            StateId = 6
                        },
                        new
                        {
                            Id = 190,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6123),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6126),
                            Name = "Carolina",
                            StateId = 6
                        },
                        new
                        {
                            Id = 191,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6134),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6137),
                            Name = "Delmas",
                            StateId = 6
                        },
                        new
                        {
                            Id = 192,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6142),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6144),
                            Name = "Driefontein",
                            StateId = 6
                        },
                        new
                        {
                            Id = 193,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6150),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6153),
                            Name = "Ehlanzeni District",
                            StateId = 6
                        },
                        new
                        {
                            Id = 194,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6158),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6161),
                            Name = "eMbalenhle",
                            StateId = 6
                        },
                        new
                        {
                            Id = 195,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6166),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6169),
                            Name = "Ermelo",
                            StateId = 6
                        },
                        new
                        {
                            Id = 196,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6175),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6177),
                            Name = "Gert Sibande District Municipality",
                            StateId = 6
                        },
                        new
                        {
                            Id = 197,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6183),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6186),
                            Name = "Hendrina",
                            StateId = 6
                        },
                        new
                        {
                            Id = 198,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6191),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6195),
                            Name = "Komatipoort",
                            StateId = 6
                        },
                        new
                        {
                            Id = 199,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6201),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6205),
                            Name = "Kriel",
                            StateId = 6
                        },
                        new
                        {
                            Id = 200,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6210),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6213),
                            Name = "Lydenburg",
                            StateId = 6
                        },
                        new
                        {
                            Id = 201,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6219),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6222),
                            Name = "Middelburg",
                            StateId = 6
                        },
                        new
                        {
                            Id = 202,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6228),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6232),
                            Name = "Nelspruit",
                            StateId = 6
                        },
                        new
                        {
                            Id = 203,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6260),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6268),
                            Name = "Nkangala District Municipality",
                            StateId = 6
                        },
                        new
                        {
                            Id = 204,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6276),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6279),
                            Name = "Piet Retief",
                            StateId = 6
                        },
                        new
                        {
                            Id = 205,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6284),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6287),
                            Name = "Secunda",
                            StateId = 6
                        },
                        new
                        {
                            Id = 206,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6292),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6295),
                            Name = "Siyabuswa",
                            StateId = 6
                        },
                        new
                        {
                            Id = 207,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6300),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6304),
                            Name = "Standerton",
                            StateId = 6
                        },
                        new
                        {
                            Id = 208,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6310),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6312),
                            Name = "Volksrust",
                            StateId = 6
                        },
                        new
                        {
                            Id = 209,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6319),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6322),
                            Name = "White River",
                            StateId = 6
                        },
                        new
                        {
                            Id = 210,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6326),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6330),
                            Name = "Witbank",
                            StateId = 6
                        },
                        new
                        {
                            Id = 211,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6334),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6337),
                            Name = "Bloemhof",
                            StateId = 7
                        },
                        new
                        {
                            Id = 212,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6370),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6373),
                            Name = "Bojanala Platinum District Municipality",
                            StateId = 7
                        },
                        new
                        {
                            Id = 213,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6378),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6382),
                            Name = "Brits",
                            StateId = 7
                        },
                        new
                        {
                            Id = 214,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6386),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6389),
                            Name = "Christiana",
                            StateId = 7
                        },
                        new
                        {
                            Id = 215,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6393),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6397),
                            Name = "Dr Kenneth Kaunda District Municipality",
                            StateId = 7
                        },
                        new
                        {
                            Id = 216,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6402),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6405),
                            Name = "Dr Ruth Segomotsi Mompati District Municipality",
                            StateId = 7
                        },
                        new
                        {
                            Id = 217,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6409),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6412),
                            Name = "Fochville",
                            StateId = 7
                        },
                        new
                        {
                            Id = 218,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6416),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6420),
                            Name = "Ga-Rankuwa",
                            StateId = 7
                        },
                        new
                        {
                            Id = 219,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6424),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6427),
                            Name = "Jan Kempdorp",
                            StateId = 7
                        },
                        new
                        {
                            Id = 220,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6431),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6434),
                            Name = "Klerksdorp",
                            StateId = 7
                        },
                        new
                        {
                            Id = 221,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6440),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6443),
                            Name = "Koster",
                            StateId = 7
                        },
                        new
                        {
                            Id = 222,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6447),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6451),
                            Name = "Lichtenburg",
                            StateId = 7
                        },
                        new
                        {
                            Id = 223,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6455),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6459),
                            Name = "Mahikeng",
                            StateId = 7
                        },
                        new
                        {
                            Id = 224,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6464),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6467),
                            Name = "Maile",
                            StateId = 7
                        },
                        new
                        {
                            Id = 225,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6472),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6475),
                            Name = "Mmabatho",
                            StateId = 7
                        },
                        new
                        {
                            Id = 226,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6479),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6482),
                            Name = "Ngaka Modiri Molema District Municipality",
                            StateId = 7
                        },
                        new
                        {
                            Id = 227,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6487),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6490),
                            Name = "Orkney",
                            StateId = 7
                        },
                        new
                        {
                            Id = 228,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6494),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6497),
                            Name = "Potchefstroom",
                            StateId = 7
                        },
                        new
                        {
                            Id = 229,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6502),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6504),
                            Name = "Rustenburg",
                            StateId = 7
                        },
                        new
                        {
                            Id = 230,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6509),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6512),
                            Name = "Schweizer-Reneke",
                            StateId = 7
                        },
                        new
                        {
                            Id = 231,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6516),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6519),
                            Name = "Stilfontein",
                            StateId = 7
                        },
                        new
                        {
                            Id = 232,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6528),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6531),
                            Name = "Vryburg",
                            StateId = 7
                        },
                        new
                        {
                            Id = 233,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6536),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6539),
                            Name = "Wolmaransstad",
                            StateId = 7
                        },
                        new
                        {
                            Id = 234,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6544),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6547),
                            Name = "Zeerust",
                            StateId = 7
                        },
                        new
                        {
                            Id = 235,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6551),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6554),
                            Name = "Barkly West",
                            StateId = 8
                        },
                        new
                        {
                            Id = 236,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6558),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6562),
                            Name = "Brandvlei",
                            StateId = 8
                        },
                        new
                        {
                            Id = 237,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6567),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6569),
                            Name = "Calvinia",
                            StateId = 8
                        },
                        new
                        {
                            Id = 238,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6574),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6577),
                            Name = "Carnarvon",
                            StateId = 8
                        },
                        new
                        {
                            Id = 239,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6582),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6585),
                            Name = "Colesberg",
                            StateId = 8
                        },
                        new
                        {
                            Id = 240,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6590),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6593),
                            Name = "DaniÃ«lskuil",
                            StateId = 8
                        },
                        new
                        {
                            Id = 241,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6599),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6601),
                            Name = "De Aar",
                            StateId = 8
                        },
                        new
                        {
                            Id = 242,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6606),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6610),
                            Name = "Frances Baard District Municipality",
                            StateId = 8
                        },
                        new
                        {
                            Id = 243,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6615),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6619),
                            Name = "Fraserburg",
                            StateId = 8
                        },
                        new
                        {
                            Id = 244,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6624),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6627),
                            Name = "John Taolo Gaetsewe District Municipality",
                            StateId = 8
                        },
                        new
                        {
                            Id = 245,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6632),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6636),
                            Name = "Kathu",
                            StateId = 8
                        },
                        new
                        {
                            Id = 246,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6640),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6644),
                            Name = "Kenhardt",
                            StateId = 8
                        },
                        new
                        {
                            Id = 247,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6649),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6653),
                            Name = "Kimberley",
                            StateId = 8
                        },
                        new
                        {
                            Id = 248,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6659),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6662),
                            Name = "Kuruman",
                            StateId = 8
                        },
                        new
                        {
                            Id = 249,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6667),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6669),
                            Name = "Namakwa District Municipality",
                            StateId = 8
                        },
                        new
                        {
                            Id = 250,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6674),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6677),
                            Name = "Noupoort",
                            StateId = 8
                        },
                        new
                        {
                            Id = 251,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6681),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6685),
                            Name = "Orania",
                            StateId = 8
                        },
                        new
                        {
                            Id = 252,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6690),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6693),
                            Name = "Pampierstad",
                            StateId = 8
                        },
                        new
                        {
                            Id = 253,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6697),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6701),
                            Name = "Pixley ka Seme District Municipality",
                            StateId = 8
                        },
                        new
                        {
                            Id = 254,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6705),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6708),
                            Name = "Pofadder",
                            StateId = 8
                        },
                        new
                        {
                            Id = 255,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6713),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6716),
                            Name = "Postmasburg",
                            StateId = 8
                        },
                        new
                        {
                            Id = 256,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6721),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6723),
                            Name = "Prieska",
                            StateId = 8
                        },
                        new
                        {
                            Id = 257,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6728),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6730),
                            Name = "Ritchie",
                            StateId = 8
                        },
                        new
                        {
                            Id = 258,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6757),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6762),
                            Name = "Siyanda District Municipality",
                            StateId = 8
                        },
                        new
                        {
                            Id = 259,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6768),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6772),
                            Name = "Springbok",
                            StateId = 8
                        },
                        new
                        {
                            Id = 260,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6777),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6779),
                            Name = "Upington",
                            StateId = 8
                        },
                        new
                        {
                            Id = 261,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6784),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6787),
                            Name = "Van Wyksvlei",
                            StateId = 8
                        },
                        new
                        {
                            Id = 262,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6792),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6795),
                            Name = "Warrenton",
                            StateId = 8
                        },
                        new
                        {
                            Id = 263,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6799),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6803),
                            Name = "Albertina",
                            StateId = 9
                        },
                        new
                        {
                            Id = 264,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6808),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6811),
                            Name = "Arniston",
                            StateId = 9
                        },
                        new
                        {
                            Id = 265,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6816),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6819),
                            Name = "Atlantis",
                            StateId = 9
                        },
                        new
                        {
                            Id = 266,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6823),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6827),
                            Name = "Beaufort West",
                            StateId = 9
                        },
                        new
                        {
                            Id = 267,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6832),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6835),
                            Name = "Bergvliet",
                            StateId = 9
                        },
                        new
                        {
                            Id = 268,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6839),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6842),
                            Name = "Bredasdorp",
                            StateId = 9
                        },
                        new
                        {
                            Id = 269,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6846),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6849),
                            Name = "Caledon",
                            StateId = 9
                        },
                        new
                        {
                            Id = 270,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6853),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6857),
                            Name = "Calitzdorp",
                            StateId = 9
                        },
                        new
                        {
                            Id = 271,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6863),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6866),
                            Name = "Cape Town",
                            StateId = 9
                        },
                        new
                        {
                            Id = 272,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6871),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6874),
                            Name = "Cape Winelands District Municipality",
                            StateId = 9
                        },
                        new
                        {
                            Id = 273,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6878),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6881),
                            Name = "Central Karoo District Municipality",
                            StateId = 9
                        },
                        new
                        {
                            Id = 274,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6885),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6889),
                            Name = "Ceres",
                            StateId = 9
                        },
                        new
                        {
                            Id = 275,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6894),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6897),
                            Name = "City of Cape Town",
                            StateId = 9
                        },
                        new
                        {
                            Id = 276,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6901),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6904),
                            Name = "Clanwilliam",
                            StateId = 9
                        },
                        new
                        {
                            Id = 277,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6908),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6911),
                            Name = "Claremont",
                            StateId = 9
                        },
                        new
                        {
                            Id = 278,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6916),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6920),
                            Name = "Constantia",
                            StateId = 9
                        },
                        new
                        {
                            Id = 279,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6925),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6928),
                            Name = "De Rust",
                            StateId = 9
                        },
                        new
                        {
                            Id = 280,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6935),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6937),
                            Name = "Eden District Municipality",
                            StateId = 9
                        },
                        new
                        {
                            Id = 281,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6943),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6946),
                            Name = "George",
                            StateId = 9
                        },
                        new
                        {
                            Id = 282,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6953),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6957),
                            Name = "Grabouw",
                            StateId = 9
                        },
                        new
                        {
                            Id = 283,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6962),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(6996),
                            Name = "Hardys Memories of Africa",
                            StateId = 9
                        },
                        new
                        {
                            Id = 284,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7001),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7004),
                            Name = "Hermanus",
                            StateId = 9
                        },
                        new
                        {
                            Id = 285,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7009),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7011),
                            Name = "Knysna",
                            StateId = 9
                        },
                        new
                        {
                            Id = 286,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7016),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7019),
                            Name = "Kraaifontein",
                            StateId = 9
                        },
                        new
                        {
                            Id = 287,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7024),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7028),
                            Name = "Ladismith",
                            StateId = 9
                        },
                        new
                        {
                            Id = 288,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7034),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7037),
                            Name = "Lansdowne",
                            StateId = 9
                        },
                        new
                        {
                            Id = 289,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7043),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7045),
                            Name = "Malmesbury",
                            StateId = 9
                        },
                        new
                        {
                            Id = 290,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7050),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7053),
                            Name = "Montagu",
                            StateId = 9
                        },
                        new
                        {
                            Id = 291,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7059),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7062),
                            Name = "Moorreesburg",
                            StateId = 9
                        },
                        new
                        {
                            Id = 292,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7066),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7069),
                            Name = "Mossel Bay",
                            StateId = 9
                        },
                        new
                        {
                            Id = 293,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7100),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7108),
                            Name = "Newlands",
                            StateId = 9
                        },
                        new
                        {
                            Id = 294,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7115),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7118),
                            Name = "Oudtshoorn",
                            StateId = 9
                        },
                        new
                        {
                            Id = 295,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7122),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7125),
                            Name = "Overberg District Municipality",
                            StateId = 9
                        },
                        new
                        {
                            Id = 296,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7131),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7133),
                            Name = "Paarl",
                            StateId = 9
                        },
                        new
                        {
                            Id = 297,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7139),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7141),
                            Name = "Piketberg",
                            StateId = 9
                        },
                        new
                        {
                            Id = 298,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7146),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7148),
                            Name = "Plettenberg Bay",
                            StateId = 9
                        },
                        new
                        {
                            Id = 299,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7153),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7156),
                            Name = "Prince Albert",
                            StateId = 9
                        },
                        new
                        {
                            Id = 300,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7160),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7163),
                            Name = "Retreat",
                            StateId = 9
                        },
                        new
                        {
                            Id = 301,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7168),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7171),
                            Name = "Riversdale",
                            StateId = 9
                        },
                        new
                        {
                            Id = 302,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7176),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7179),
                            Name = "Robertson",
                            StateId = 9
                        },
                        new
                        {
                            Id = 303,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7184),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7187),
                            Name = "Rondebosch",
                            StateId = 9
                        },
                        new
                        {
                            Id = 304,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7193),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7195),
                            Name = "Rosebank",
                            StateId = 9
                        },
                        new
                        {
                            Id = 305,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7224),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7228),
                            Name = "Saldanha",
                            StateId = 9
                        },
                        new
                        {
                            Id = 306,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7234),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7237),
                            Name = "Stellenbosch",
                            StateId = 9
                        },
                        new
                        {
                            Id = 307,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7273),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7276),
                            Name = "Sunset Beach",
                            StateId = 9
                        },
                        new
                        {
                            Id = 308,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7281),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7283),
                            Name = "Swellendam",
                            StateId = 9
                        },
                        new
                        {
                            Id = 309,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7288),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7291),
                            Name = "Vredenburg",
                            StateId = 9
                        },
                        new
                        {
                            Id = 310,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7294),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7297),
                            Name = "Vredendal",
                            StateId = 9
                        },
                        new
                        {
                            Id = 311,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7300),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7303),
                            Name = "Wellington",
                            StateId = 9
                        },
                        new
                        {
                            Id = 312,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7308),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7311),
                            Name = "West Coast District Municipality",
                            StateId = 9
                        },
                        new
                        {
                            Id = 313,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7315),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7317),
                            Name = "Worcester",
                            StateId = 9
                        },
                        new
                        {
                            Id = 314,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7321),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 257, DateTimeKind.Local).AddTicks(7324),
                            Name = "Zoar",
                            StateId = 9
                        });
                });

            modelBuilder.Entity("MM.ClientModels.ClientOrganization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("AgreedToTerms")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ClientTimeZoneId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("CurrencyDecimalPlaces")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DateSettingId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("TimeFormatId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientTimeZoneId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DateSettingId");

                    b.HasIndex("TimeFormatId");

                    b.ToTable("ClientOrganization");
                });

            modelBuilder.Entity("MM.ClientModels.ClientPlanHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BillingUserId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsCurrentPlan")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int>("PlanDetailId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("BillingUserId");

                    b.ToTable("ClientPlanHistory");
                });

            modelBuilder.Entity("MM.ClientModels.ClientTimeZone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("ClientTimeZone");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(2380),
                            Description = "(GMT-12:00) International Date Line West",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(3586),
                            Name = "Dateline Standard Time"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4776),
                            Description = "(GMT-11:00) MIdway Island, Samoa",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4805),
                            Name = "Samoa Standard Time"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4830),
                            Description = "(GMT-10:00) Hawaii",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4833),
                            Name = "Hawaiian Standard Time"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4838),
                            Description = "(GMT-09:00) Alaska",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4841),
                            Name = "Alaskan Standard Time"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4847),
                            Description = "(GMT-08:00) Pacific Time (US and Canada); Tijuana",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4850),
                            Name = "Pacific Standard Time"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4856),
                            Description = "(GMT-07:00) Mountain Time (US and Canada)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4858),
                            Name = "Mountain Standard Time"
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4864),
                            Description = "(GMT-07:00) Chihuahua, La Paz, Mazatlan",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4867),
                            Name = "Mexico Standard Time 2"
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4872),
                            Description = "(GMT-07:00) Arizona",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4874),
                            Name = "U.S. Mountain Standard Time"
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4915),
                            Description = "(GMT-06:00) Central Time (US and Canada)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4918),
                            Name = "Central Standard Time"
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4923),
                            Description = "(GMT-06:00) Saskatchewan",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4926),
                            Name = "Canada Central Standard Time"
                        },
                        new
                        {
                            Id = 11,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4931),
                            Description = "(GMT-06:00) Guadalajara, Mexico City, Monterrey",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4934),
                            Name = "Mexico Standard Time"
                        },
                        new
                        {
                            Id = 12,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4939),
                            Description = "(GMT-06:00) Central America",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4942),
                            Name = "Central America Standard Time"
                        },
                        new
                        {
                            Id = 13,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4947),
                            Description = "(GMT-05:00) Eastern Time (US and Canada)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4950),
                            Name = "Eastern Standard Time"
                        },
                        new
                        {
                            Id = 14,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4954),
                            Description = "(GMT-05:00) Indiana (East)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4957),
                            Name = "U.S. Eastern Standard Time"
                        },
                        new
                        {
                            Id = 15,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4963),
                            Description = "(GMT-05:00) Bogota, Lima, Quito",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4966),
                            Name = "S.A. Pacific Standard Time"
                        },
                        new
                        {
                            Id = 16,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4971),
                            Description = "(GMT-04:00) Atlantic Time (Canada)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4974),
                            Name = "Atlantic Standard Time"
                        },
                        new
                        {
                            Id = 17,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4979),
                            Description = "(GMT-04:00) Georgetown, La Paz, San Juan",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4982),
                            Name = "S.A. Western Standard Time"
                        },
                        new
                        {
                            Id = 18,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4987),
                            Description = "(GMT-04:00) Santiago",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4990),
                            Name = "Pacific S.A. Standard Time"
                        },
                        new
                        {
                            Id = 19,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4995),
                            Description = "(GMT-03:30) Newfoundland",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(4998),
                            Name = "Newfoundland and Labrador Standard Time"
                        },
                        new
                        {
                            Id = 20,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5003),
                            Description = "(GMT-03:00) Brasilia",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5005),
                            Name = "E. South America Standard Time"
                        },
                        new
                        {
                            Id = 21,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5011),
                            Description = "(GMT-03:00) Georgetown",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5016),
                            Name = "S.A. Eastern Standard Time"
                        },
                        new
                        {
                            Id = 22,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5021),
                            Description = "(GMT-03:00) Greenland",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5024),
                            Name = "Greenland Standard Time"
                        },
                        new
                        {
                            Id = 23,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5029),
                            Description = "(GMT-02:00) MId-Atlantic",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5032),
                            Name = "MId-Atlantic Standard Time"
                        },
                        new
                        {
                            Id = 24,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5037),
                            Description = "(GMT-01:00) Azores",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5040),
                            Name = "Azores Standard Time"
                        },
                        new
                        {
                            Id = 25,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5045),
                            Description = "(GMT-01:00) Cape Verde Islands",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5049),
                            Name = "Cape Verde Standard Time"
                        },
                        new
                        {
                            Id = 26,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5055),
                            Description = "(GMT) Greenwich Mean Time: Dublin, Edinburgh, Lisbon, London",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5058),
                            Name = "GMT Standard Time"
                        },
                        new
                        {
                            Id = 27,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5063),
                            Description = "(GMT) Monrovia, Reykjavik",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5065),
                            Name = "Greenwich Standard Time"
                        },
                        new
                        {
                            Id = 28,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5071),
                            Description = "(GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5074),
                            Name = "Central Europe Standard Time"
                        },
                        new
                        {
                            Id = 29,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5079),
                            Description = "(GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5082),
                            Name = "Central European Standard Time"
                        },
                        new
                        {
                            Id = 30,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5087),
                            Description = "(GMT+01:00) Brussels, Copenhagen, MadrId, Paris",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5091),
                            Name = "Romance Standard Time"
                        },
                        new
                        {
                            Id = 31,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5096),
                            Description = "(GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5098),
                            Name = "W. Europe Standard Time"
                        },
                        new
                        {
                            Id = 32,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5104),
                            Description = "(GMT+01:00) West Central Africa",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5107),
                            Name = "W. Central Africa Standard Time"
                        },
                        new
                        {
                            Id = 33,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5112),
                            Description = "(GMT+02:00) Minsk",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5115),
                            Name = "E. Europe Standard Time"
                        },
                        new
                        {
                            Id = 34,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5120),
                            Description = "(GMT+02:00) Cairo",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5123),
                            Name = "Egypt Standard Time"
                        },
                        new
                        {
                            Id = 35,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5128),
                            Description = "(GMT+02:00) Helsinki, Kiev, Riga, Sofia, Tallinn, Vilnius",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5131),
                            Name = "FLE Standard Time"
                        },
                        new
                        {
                            Id = 36,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5137),
                            Description = "(GMT+02:00) Athens, Bucharest, Istanbul",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5140),
                            Name = "GTB Standard Time"
                        },
                        new
                        {
                            Id = 37,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5145),
                            Description = "(GMT+02:00) Jerusalem",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5149),
                            Name = "Israel Standard Time"
                        },
                        new
                        {
                            Id = 38,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5154),
                            Description = "(GMT+02:00) Harare, Pretoria",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5157),
                            Name = "South Africa Standard Time"
                        },
                        new
                        {
                            Id = 39,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5162),
                            Description = "(GMT+03:00) Moscow, St. Petersburg, Volgograd",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5165),
                            Name = "Russian Standard Time"
                        },
                        new
                        {
                            Id = 40,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5170),
                            Description = "(GMT+03:00) Kuwait, Riyadh",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5173),
                            Name = "Arab Standard Time"
                        },
                        new
                        {
                            Id = 41,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5178),
                            Description = "(GMT+03:00) Nairobi",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5181),
                            Name = "E. Africa Standard Time"
                        },
                        new
                        {
                            Id = 42,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5186),
                            Description = "(GMT+03:00) Baghdad",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5189),
                            Name = "Arabic Standard Time"
                        },
                        new
                        {
                            Id = 43,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5194),
                            Description = "(GMT+03:30) Tehran",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5197),
                            Name = "Iran Standard Time"
                        },
                        new
                        {
                            Id = 44,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5212),
                            Description = "(GMT+04:00) Abu Dhabi, Muscat",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5215),
                            Name = "Arabian Standard Time"
                        },
                        new
                        {
                            Id = 45,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5221),
                            Description = "(GMT+04:00) Baku, Tbilisi, Yerevan",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5224),
                            Name = "Caucasus Standard Time"
                        },
                        new
                        {
                            Id = 46,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5228),
                            Description = "(GMT+04:30) Kabul",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5231),
                            Name = "Transitional Islamic State of Afghanistan Standard Time"
                        },
                        new
                        {
                            Id = 47,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5236),
                            Description = "(GMT+05:00) Ekaterinburg",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5239),
                            Name = "Ekaterinburg Standard Time"
                        },
                        new
                        {
                            Id = 48,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5244),
                            Description = "(GMT+05:00) Tashkent",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5247),
                            Name = "West Asia Standard Time"
                        },
                        new
                        {
                            Id = 49,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5253),
                            Description = "(GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5256),
                            Name = "India Standard Time"
                        },
                        new
                        {
                            Id = 50,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5261),
                            Description = "(GMT+05:45) Kathmandu",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5264),
                            Name = "Nepal Standard Time"
                        },
                        new
                        {
                            Id = 51,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5269),
                            Description = "(GMT+06:00) Astana, Dhaka",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5272),
                            Name = "Central Asia Standard Time"
                        },
                        new
                        {
                            Id = 52,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5278),
                            Description = "(GMT+06:00) Sri Jayawardenepura",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5280),
                            Name = "Sri Lanka Standard Time"
                        },
                        new
                        {
                            Id = 53,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5286),
                            Description = "(GMT+06:00) Almaty, Novosibirsk",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5289),
                            Name = "N. Central Asia Standard Time"
                        },
                        new
                        {
                            Id = 54,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5293),
                            Description = "(GMT+06:30) Yangon (Rangoon)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5296),
                            Name = "Myanmar Standard Time"
                        },
                        new
                        {
                            Id = 55,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5301),
                            Description = "(GMT+07:00) Bangkok, Hanoi, Jakarta",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5304),
                            Name = "S.E. Asia Standard Time"
                        },
                        new
                        {
                            Id = 56,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5309),
                            Description = "(GMT+07:00) Krasnoyarsk",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5312),
                            Name = "North Asia Standard Time"
                        },
                        new
                        {
                            Id = 57,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5318),
                            Description = "(GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5321),
                            Name = "China Standard Time"
                        },
                        new
                        {
                            Id = 58,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5326),
                            Description = "(GMT+08:00) Kuala Lumpur, Singapore",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5329),
                            Name = "Singapore Standard Time"
                        },
                        new
                        {
                            Id = 59,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5334),
                            Description = "(GMT+08:00) Taipei",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5336),
                            Name = "Taipei Standard Time"
                        },
                        new
                        {
                            Id = 60,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5341),
                            Description = "(GMT+08:00) Perth",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5344),
                            Name = "W. Australia Standard Time"
                        },
                        new
                        {
                            Id = 61,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5350),
                            Description = "(GMT+08:00) Irkutsk, Ulaanbaatar",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5353),
                            Name = "North Asia East Standard Time"
                        },
                        new
                        {
                            Id = 62,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5358),
                            Description = "(GMT+09:00) Seoul",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5361),
                            Name = "Korea Standard Time"
                        },
                        new
                        {
                            Id = 63,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5365),
                            Description = "(GMT+09:00) Osaka, Sapporo, Tokyo",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5368),
                            Name = "Tokyo Standard Time"
                        },
                        new
                        {
                            Id = 64,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5373),
                            Description = "(GMT+09:00) Yakutsk",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5376),
                            Name = "Yakutsk Standard Time"
                        },
                        new
                        {
                            Id = 65,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5381),
                            Description = "(GMT+09:30) Darwin",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5383),
                            Name = "A.U.S. Central Standard Time"
                        },
                        new
                        {
                            Id = 66,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5388),
                            Description = "(GMT+09:30) AdelaIde",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5391),
                            Name = "Cen. Australia Standard Time"
                        },
                        new
                        {
                            Id = 67,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5396),
                            Description = "(GMT+10:00) Canberra, Melbourne, Sydney",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5399),
                            Name = "A.U.S. Eastern Standard Time"
                        },
                        new
                        {
                            Id = 68,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5404),
                            Description = "(GMT+10:00) Brisbane",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5406),
                            Name = "E. Australia Standard Time"
                        },
                        new
                        {
                            Id = 69,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5412),
                            Description = "(GMT+10:00) Hobart",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5414),
                            Name = "Tasmania Standard Time"
                        },
                        new
                        {
                            Id = 70,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5419),
                            Description = "(GMT+10:00) Vladivostok",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5422),
                            Name = "Vladivostok Standard Time"
                        },
                        new
                        {
                            Id = 71,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5427),
                            Description = "(GMT+10:00) Guam, Port Moresby",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5430),
                            Name = "West Pacific Standard Time"
                        },
                        new
                        {
                            Id = 72,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5435),
                            Description = "(GMT+11:00) Magadan, Solomon Islands, New Caledonia",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5438),
                            Name = "Central Pacific Standard Time"
                        },
                        new
                        {
                            Id = 73,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5443),
                            Description = "(GMT+12:00) Fiji, Kamchatka, Marshall Is.",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5446),
                            Name = "Fiji Islands Standard Time"
                        },
                        new
                        {
                            Id = 74,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5452),
                            Description = "(GMT+12:00) Auckland, Wellington",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5455),
                            Name = "New Zealand Standard Time"
                        },
                        new
                        {
                            Id = 75,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5460),
                            Description = "(GMT+13:00) Nuku'alofa",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5463),
                            Name = "Tonga Standard Time"
                        },
                        new
                        {
                            Id = 76,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5469),
                            Description = "(GMT-03:00) Buenos Aires",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5472),
                            Name = "Azerbaijan Standard Time "
                        },
                        new
                        {
                            Id = 77,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5478),
                            Description = "(GMT+02:00) Beirut",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5481),
                            Name = "MIddle East Standard Time"
                        },
                        new
                        {
                            Id = 78,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5486),
                            Description = "(GMT+02:00) Amman",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5489),
                            Name = "Jordan Standard Time"
                        },
                        new
                        {
                            Id = 79,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5495),
                            Description = "(GMT-06:00) Guadalajara, Mexico City, Monterrey - New",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5498),
                            Name = "Central Standard Time (Mexico)"
                        },
                        new
                        {
                            Id = 80,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5513),
                            Description = "(GMT-07:00) Chihuahua, La Paz, Mazatlan - New",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5515),
                            Name = "Mountain Standard Time (Mexico)"
                        },
                        new
                        {
                            Id = 81,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5521),
                            Description = "(GMT-08:00) Tijuana, Baja California",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5526),
                            Name = "Pacific Standard Time (Mexico)"
                        },
                        new
                        {
                            Id = 82,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5531),
                            Description = "(GMT+02:00) Windhoek",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5535),
                            Name = "Namibia Standard Time"
                        },
                        new
                        {
                            Id = 83,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5540),
                            Description = "(GMT+03:00) Tbilisi",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5543),
                            Name = "Georgian Standard Time"
                        },
                        new
                        {
                            Id = 84,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5549),
                            Description = "(GMT-04:00) Manaus",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5552),
                            Name = "Central Brazilian Standard Time"
                        },
                        new
                        {
                            Id = 85,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5558),
                            Description = "(GMT-03:00) MontevIdeo",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5561),
                            Name = "MontevIdeo Standard Time"
                        },
                        new
                        {
                            Id = 86,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5566),
                            Description = "(GMT+04:00) Yerevan",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5569),
                            Name = "Armenian Standard Time"
                        },
                        new
                        {
                            Id = 87,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5574),
                            Description = "(GMT-04:30) Caracas",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5577),
                            Name = "Venezuela Standard Time"
                        },
                        new
                        {
                            Id = 88,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5582),
                            Description = "(GMT-03:00) Buenos Aires",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5585),
                            Name = "Argentina Standard Time"
                        },
                        new
                        {
                            Id = 89,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5591),
                            Description = "(GMT) Casablanca",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5593),
                            Name = "Morocco Standard Time"
                        },
                        new
                        {
                            Id = 90,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5599),
                            Description = "(GMT+05:00) Islamabad, Karachi",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5601),
                            Name = "Pakistan Standard Time"
                        },
                        new
                        {
                            Id = 91,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5606),
                            Description = "(GMT+04:00) Port Louis",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5609),
                            Name = "Mauritius Standard Time"
                        },
                        new
                        {
                            Id = 92,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5615),
                            Description = "(GMT) Coordinated Universal Time",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5617),
                            Name = "UTC"
                        },
                        new
                        {
                            Id = 93,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5622),
                            Description = "(GMT-04:00) Asuncion",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5627),
                            Name = "Paraguay Standard Time"
                        },
                        new
                        {
                            Id = 94,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5632),
                            Description = "(GMT+12:00) Petropavlovsk-Kamchatsky",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 780, DateTimeKind.Local).AddTicks(5635),
                            Name = "Kamchatka Standard Time"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.ClientType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("ClientType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 273, DateTimeKind.Local).AddTicks(9948),
                            Description = "Individual",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 274, DateTimeKind.Local).AddTicks(1137),
                            Name = "Individual"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 274, DateTimeKind.Local).AddTicks(2315),
                            Description = "Organization",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 274, DateTimeKind.Local).AddTicks(2344),
                            Name = "Organization"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.ClientUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("BillingContact")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("DesignationId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<bool>("EmailActivated")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsInternalUser")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("MiddleName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<bool>("PrimaryContact")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ReferralTypeId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<bool>("TermsAccepted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("TitleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DesignationId");

                    b.HasIndex("GenderId");

                    b.HasIndex("ReferralTypeId");

                    b.HasIndex("RoleId");

                    b.HasIndex("TitleId");

                    b.ToTable("ClientUser");
                });

            modelBuilder.Entity("MM.ClientModels.CommunicationPreference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CommunicationTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan?>("PreferredTimeFrom")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("PreferredTimeTo")
                        .HasColumnType("time(6)");

                    b.HasKey("Id");

                    b.HasIndex("CommunicationTypeId");

                    b.ToTable("CommunicationPreference");
                });

            modelBuilder.Entity("MM.ClientModels.CommunicationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("CommunicationType");
                });

            modelBuilder.Entity("MM.ClientModels.CorrespondenceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("CorrespondenceType");
                });

            modelBuilder.Entity("MM.ClientModels.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("ISO2Code")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<string>("ISO3Code")
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("PhoneCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 307, DateTimeKind.Local).AddTicks(2365),
                            ISO2Code = "ZA",
                            ISO3Code = "ZAF",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 307, DateTimeKind.Local).AddTicks(3568),
                            Name = "South Africa",
                            PhoneCode = 27
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 307, DateTimeKind.Local).AddTicks(4893),
                            ISO2Code = "AU",
                            ISO3Code = "AUS",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 307, DateTimeKind.Local).AddTicks(4925),
                            Name = "Australia",
                            PhoneCode = 61
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 307, DateTimeKind.Local).AddTicks(4960),
                            ISO2Code = "IN",
                            ISO3Code = "IND",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 307, DateTimeKind.Local).AddTicks(4964),
                            Name = "India",
                            PhoneCode = 91
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 307, DateTimeKind.Local).AddTicks(4972),
                            ISO2Code = "GB",
                            ISO3Code = "GBR",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 307, DateTimeKind.Local).AddTicks(4975),
                            Name = "United Kingdom",
                            PhoneCode = 44
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 307, DateTimeKind.Local).AddTicks(4982),
                            ISO2Code = "US",
                            ISO3Code = "USA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 307, DateTimeKind.Local).AddTicks(4985),
                            Name = "United States",
                            PhoneCode = 1
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Cpd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CpdawardedById")
                        .HasColumnName("CPDAwardedById")
                        .HasColumnType("int");

                    b.Property<int>("Cpdearned")
                        .HasColumnName("CPDEarned")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CpdawardedById");

                    b.HasIndex("MemberId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("CPD");
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberCategorySetUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cpdcount")
                        .HasColumnName("CPDCount")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("MemberCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberCategoryId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("CPDMemberCategorySetUp");
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberLevelSetUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cpdcount")
                        .HasColumnName("CPDCount")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("MemberLevelId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberLevelId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("CPDMemberLevelSetUp");
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberTeamSetUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cpdcount")
                        .HasColumnName("CPDCount")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("MemberTeamId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberTeamId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("CPDMemberTeamSetUp");
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberTypeSetUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cpdcount")
                        .HasColumnName("CPDCount")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("MemberTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberTypeId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("CPDMemberTypeSetUp");
                });

            modelBuilder.Entity("MM.ClientModels.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Symbol")
                        .HasColumnType("varchar(5) CHARACTER SET utf8mb4")
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.ToTable("Currency");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "AFN",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 472, DateTimeKind.Local).AddTicks(8050),
                            Description = "Currency for  AFGHANISTAN",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 472, DateTimeKind.Local).AddTicks(9262),
                            Name = "Afghani",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 2,
                            Code = "ALL",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(489),
                            Description = "ALBANIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(535),
                            Name = "Lek",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 3,
                            Code = "DZD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(567),
                            Description = "ALGERIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(571),
                            Name = "Algerian Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 4,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(579),
                            Description = "AMERICAN SAMOA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(583),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 5,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(590),
                            Description = "ANDORRA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(593),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 6,
                            Code = "AOA",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(600),
                            Description = "ANGOLA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(602),
                            Name = "Kwanza",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 7,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(610),
                            Description = "ANGUILLA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(612),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 8,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(624),
                            Description = "ANTIGUA AND BARBUDA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(627),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 9,
                            Code = "ARS",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(634),
                            Description = "ARGENTINA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(638),
                            Name = "Argentine Peso",
                            Symbol = ""
                        },
                        new
                        {
                            Id = 10,
                            Code = "AMD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(644),
                            Description = "ARMENIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(646),
                            Name = "Armenian Dram",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 11,
                            Code = "AWG",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(652),
                            Description = "ARUBA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(656),
                            Name = "Aruban Florin",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 12,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(664),
                            Description = "AUSTRALIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(666),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 13,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(672),
                            Description = "AUSTRIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(674),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 14,
                            Code = "AZN",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(682),
                            Description = "AZERBAIJAN",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(684),
                            Name = "Azerbaijanian Manat",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 15,
                            Code = "BSD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(691),
                            Description = "BAHAMAS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(693),
                            Name = "Bahamian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 16,
                            Code = "BHD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(701),
                            Description = "BAHRAIN",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(705),
                            Name = "Bahraini Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 17,
                            Code = "BDT",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(711),
                            Description = "BANGLADESH",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(713),
                            Name = "Taka",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 18,
                            Code = "BBD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(719),
                            Description = "BARBADOS",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(721),
                            Name = "Barbados Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 19,
                            Code = "BYN",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(728),
                            Description = "BELARUS",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(731),
                            Name = "Belarussian Ruble",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 20,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(736),
                            Description = "BELGIUM",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(739),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 21,
                            Code = "BZD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(745),
                            Description = "BELIZE",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(748),
                            Name = "Belize Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 22,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(754),
                            Description = "BENIN",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(757),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 23,
                            Code = "BMD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(764),
                            Description = "BERMUDA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(767),
                            Name = "Bermudian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 24,
                            Code = "BTN",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(816),
                            Description = "BHUTAN",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(819),
                            Name = "Ngultrum",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 25,
                            Code = "INR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(825),
                            Description = "BHUTAN",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(828),
                            Name = "Indian Rupee",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 26,
                            Code = "BOB",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(836),
                            Description = "BOLIVIA (PLURINATIONAL STATE OF)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(839),
                            Name = "Boliviano",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 27,
                            Code = "BOV",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(847),
                            Description = "BOLIVIA (PLURINATIONAL STATE OF)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(849),
                            Name = "Mvdol",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 28,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(855),
                            Description = "BONAIRE, SINT EUSTATIUS AND SABA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(858),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 29,
                            Code = "BAM",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(865),
                            Description = "BOSNIA AND HERZEGOVINA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(867),
                            Name = "Convertible Mark",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 30,
                            Code = "BWP",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(873),
                            Description = "BOTSWANA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(876),
                            Name = "Pula",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 31,
                            Code = "NOK",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(882),
                            Description = "BOUVET ISLAND",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(885),
                            Name = "Norwegian Krone",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 32,
                            Code = "BRL",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(891),
                            Description = "BRAZIL",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(894),
                            Name = "Brazilian Real",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 33,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(899),
                            Description = "BRITISH INDIAN OCEAN TERRITORY (THE)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(902),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 34,
                            Code = "BND",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(908),
                            Description = "BRUNEI DARUSSALAM",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(910),
                            Name = "Brunei Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 35,
                            Code = "BGN",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(916),
                            Description = "BULGARIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(919),
                            Name = "Bulgarian Lev",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 36,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(926),
                            Description = "BURKINA FASO",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(928),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 37,
                            Code = "BIF",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(934),
                            Description = "BURUNDI",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(937),
                            Name = "Burundi Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 38,
                            Code = "CVE",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(943),
                            Description = "CABO VERDE",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(946),
                            Name = "Cabo Verde Escudo",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 39,
                            Code = "KHR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(952),
                            Description = "CAMBODIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(954),
                            Name = "Riel",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 40,
                            Code = "XAF",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(960),
                            Description = "CAMEROON",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(963),
                            Name = "CFA Franc BEAC",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 41,
                            Code = "CAD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(969),
                            Description = "CANADA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(971),
                            Name = "Canadian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 42,
                            Code = "KYD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(977),
                            Description = "CAYMAN ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(981),
                            Name = "Cayman Islands Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 43,
                            Code = "XAF",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(987),
                            Description = "CENTRAL AFRICAN REPUBLIC (THE)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(989),
                            Name = "CFA Franc BEAC",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 44,
                            Code = "XAF",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(995),
                            Description = "CHAD",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(998),
                            Name = "CFA Franc BEAC",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 45,
                            Code = "CLF",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1005),
                            Description = "CHILE",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1008),
                            Name = "Unidad de Fomento",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 46,
                            Code = "CLP",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1016),
                            Description = "CHILE",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1019),
                            Name = "Chilean Peso",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 47,
                            Code = "CNY",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1027),
                            Description = "CHINA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1031),
                            Name = "Yuan Renminbi",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 48,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1037),
                            Description = "CHRISTMAS ISLAND",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1039),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 49,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1070),
                            Description = "COCOS (KEELING) ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1074),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 50,
                            Code = "COP",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1080),
                            Description = "COLOMBIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1083),
                            Name = "Colombian Peso",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 51,
                            Code = "COU",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1089),
                            Description = "COLOMBIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1092),
                            Name = "Unidad de Valor Real",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 52,
                            Code = "KMF",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1098),
                            Description = "COMOROS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1101),
                            Name = "Comoro Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 53,
                            Code = "CDF",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1107),
                            Description = "CONGO (THE DEMOCRATIC REPUBLIC OF THE)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1110),
                            Name = "Congolese Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 54,
                            Code = "XAF",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1118),
                            Description = "CONGO (THE)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1122),
                            Name = "CFA Franc BEAC",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 55,
                            Code = "NZD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1130),
                            Description = "COOK ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1132),
                            Name = "New Zealand Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 56,
                            Code = "CRC",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1139),
                            Description = "COSTA RICA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1142),
                            Name = "Costa Rican Colon",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 57,
                            Code = "HRK",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1148),
                            Description = "CROATIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1151),
                            Name = "Kuna",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 58,
                            Code = "CUC",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1158),
                            Description = "CUBA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1161),
                            Name = "Peso Convertible",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 59,
                            Code = "CUP",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1167),
                            Description = "CUBA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1169),
                            Name = "Cuban Peso",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 60,
                            Code = "ANG",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1175),
                            Description = "CURAÇAO",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1177),
                            Name = "Netherlands Antillean Guilder",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 61,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1183),
                            Description = "CYPRUS",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1186),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 62,
                            Code = "CZK",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1193),
                            Description = "CZECH REPUBLIC (THE)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1197),
                            Name = "Czech Koruna",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 63,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1204),
                            Description = "CÔTE D'IVOIRE",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1206),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 64,
                            Code = "DKK",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1213),
                            Description = "DENMARK",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1215),
                            Name = "Danish Krone",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 65,
                            Code = "DJF",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1224),
                            Description = "DJIBOUTI",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1227),
                            Name = "Djibouti Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 66,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1234),
                            Description = "DOMINICA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1237),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 67,
                            Code = "DOP",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1242),
                            Description = "DOMINICAN REPUBLIC (THE)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1245),
                            Name = "Dominican Peso",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 68,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1250),
                            Description = "ECUADOR",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1255),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 69,
                            Code = "EGP",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1261),
                            Description = "EGYPT",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1263),
                            Name = "Egyptian Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 70,
                            Code = "SVC",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1270),
                            Description = "EL SALVADOR",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1272),
                            Name = "El Salvador Colon",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 71,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1279),
                            Description = "EL SALVADOR",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1282),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 72,
                            Code = "XAF",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1287),
                            Description = "EQUATORIAL GUINEA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1290),
                            Name = "CFA Franc BEAC",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 73,
                            Code = "ERN",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1296),
                            Description = "ERITREA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1298),
                            Name = "Nakfa",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 74,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1305),
                            Description = "ESTONIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1308),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 75,
                            Code = "ETB",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1335),
                            Description = "ETHIOPIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1338),
                            Name = "Ethiopian Birr",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 76,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1344),
                            Description = "EUROPEAN UNION",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1346),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 77,
                            Code = "FKP",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1352),
                            Description = "FALKLAND ISLANDS (THE) [MALVINAS]",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1355),
                            Name = "Falkland Islands Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 78,
                            Code = "DKK",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1361),
                            Description = "FAROE ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1364),
                            Name = "Danish Krone",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 79,
                            Code = "FJD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1370),
                            Description = "FIJI",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1373),
                            Name = "Fiji Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 80,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1379),
                            Description = "FINLAND",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1381),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 81,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1387),
                            Description = "FRANCE",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1389),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 82,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1395),
                            Description = "FRENCH GUIANA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1398),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 83,
                            Code = "XPF",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1404),
                            Description = "FRENCH POLYNESIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1407),
                            Name = "CFP Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 84,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1413),
                            Description = "FRENCH SOUTHERN TERRITORIES (THE)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1415),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 85,
                            Code = "XAF",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1424),
                            Description = "GABON",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1426),
                            Name = "CFA Franc BEAC",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 86,
                            Code = "GMD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1432),
                            Description = "GAMBIA (THE)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1435),
                            Name = "Dalasi",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 87,
                            Code = "GEL",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1441),
                            Description = "GEORGIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1443),
                            Name = "Lari",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 88,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1449),
                            Description = "GERMANY",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1451),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 89,
                            Code = "GHS",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1458),
                            Description = "GHANA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1460),
                            Name = "Ghana Cedi",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 90,
                            Code = "GIP",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1467),
                            Description = "GIBRALTAR",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1469),
                            Name = "Gibraltar Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 91,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1476),
                            Description = "GREECE",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1478),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 92,
                            Code = "DKK",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1484),
                            Description = "GREENLAND",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1486),
                            Name = "Danish Krone",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 93,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1492),
                            Description = "GRENADA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1495),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 94,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1500),
                            Description = "GUADELOUPE",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1503),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 95,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1508),
                            Description = "GUAM",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1511),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 96,
                            Code = "GTQ",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1518),
                            Description = "GUATEMALA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1520),
                            Name = "Quetzal",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 97,
                            Code = "GBP",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1526),
                            Description = "GUERNSEY",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1528),
                            Name = "Pound Sterling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 98,
                            Code = "GNF",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1534),
                            Description = "GUINEA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1537),
                            Name = "Guinea Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 99,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1544),
                            Description = "GUINEA-BISSAU",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1547),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 100,
                            Code = "GYD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1714),
                            Description = "GUYANA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1719),
                            Name = "Guyana Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 101,
                            Code = "HTG",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1727),
                            Description = "HAITI",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1730),
                            Name = "Gourde",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 102,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1736),
                            Description = "HAITI",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1739),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 103,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1745),
                            Description = "HEARD ISLAND AND McDONALD ISLANDS",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1748),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 104,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1754),
                            Description = "HOLY SEE (THE)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1756),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 105,
                            Code = "HNL",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1762),
                            Description = "HONDURAS",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1765),
                            Name = "Lempira",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 106,
                            Code = "HKD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1771),
                            Description = "HONG KONG",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1773),
                            Name = "Hong Kong Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 107,
                            Code = "HUF",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1779),
                            Description = "HUNGARY",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1781),
                            Name = "Forint",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 108,
                            Code = "ISK",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1788),
                            Description = "ICELAND",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1790),
                            Name = "Iceland Krona",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 109,
                            Code = "INR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1796),
                            Description = "INDIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1799),
                            Name = "Indian Rupee",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 110,
                            Code = "IDR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1807),
                            Description = "INDONESIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1809),
                            Name = "Rupiah",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 111,
                            Code = "XDR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1818),
                            Description = "INTERNATIONAL MONETARY FUND (IMF) ",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1820),
                            Name = "SDR (Special Drawing Right)",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 112,
                            Code = "IRR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1826),
                            Description = "IRAN (ISLAMIC REPUBLIC OF)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1828),
                            Name = "Iranian Rial",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 113,
                            Code = "IQD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1835),
                            Description = "IRAQ",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1837),
                            Name = "Iraqi Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 114,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1844),
                            Description = "IRELAND",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1847),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 115,
                            Code = "GBP",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1853),
                            Description = "ISLE OF MAN",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1856),
                            Name = "Pound Sterling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 116,
                            Code = "ILS",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1861),
                            Description = "ISRAEL",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1864),
                            Name = "New Israeli Sheqel",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 117,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1870),
                            Description = "ITALY",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1873),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 118,
                            Code = "JMD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1879),
                            Description = "JAMAICA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1881),
                            Name = "Jamaican Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 119,
                            Code = "JPY",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1887),
                            Description = "JAPAN",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1890),
                            Name = "Yen",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 120,
                            Code = "GBP",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1897),
                            Description = "JERSEY",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1899),
                            Name = "Pound Sterling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 121,
                            Code = "JOD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1905),
                            Description = "JORDAN",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1908),
                            Name = "Jordanian Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 122,
                            Code = "KZT",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1915),
                            Description = "KAZAKHSTAN",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1917),
                            Name = "Tenge",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 123,
                            Code = "KES",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1924),
                            Description = "KENYA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1927),
                            Name = "Kenyan Shilling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 124,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1934),
                            Description = "KIRIBATI",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1936),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 125,
                            Code = "KPW",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1942),
                            Description = "KOREA (THE DEMOCRATIC PEOPLE’S REPUBLIC OF)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1944),
                            Name = "North Korean Won",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 126,
                            Code = "KRW",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1974),
                            Description = "KOREA (THE REPUBLIC OF)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1976),
                            Name = "Won",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 127,
                            Code = "KWD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1982),
                            Description = "KUWAIT",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1985),
                            Name = "Kuwaiti Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 128,
                            Code = "KGS",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1993),
                            Description = "KYRGYZSTAN",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(1995),
                            Name = "Som",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 129,
                            Code = "LAK",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2003),
                            Description = "LAO PEOPLE’S DEMOCRATIC REPUBLIC (THE)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2005),
                            Name = "Kip",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 130,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2011),
                            Description = "LATVIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2013),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 131,
                            Code = "LBP",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2020),
                            Description = "LEBANON",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2024),
                            Name = "Lebanese Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 132,
                            Code = "LSL",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2030),
                            Description = "LESOTHO",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2033),
                            Name = "Loti",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 133,
                            Code = "ZAR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2039),
                            Description = "LESOTHO",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2041),
                            Name = "Rand",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 134,
                            Code = "LRD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2048),
                            Description = "LIBERIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2050),
                            Name = "Liberian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 135,
                            Code = "LYD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2057),
                            Description = "LIBYA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2059),
                            Name = "Libyan Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 136,
                            Code = "CHF",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2066),
                            Description = "LIECHTENSTEIN",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2068),
                            Name = "Swiss Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 137,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2074),
                            Description = "LITHUANIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2077),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 138,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2083),
                            Description = "LUXEMBOURG",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2085),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 139,
                            Code = "MOP",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2091),
                            Description = "MACAO",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2094),
                            Name = "Pataca",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 140,
                            Code = "MGA",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2100),
                            Description = "MADAGASCAR",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2103),
                            Name = "Malagasy Ariary",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 141,
                            Code = "MWK",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2109),
                            Description = "MALAWI",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2113),
                            Name = "Kwacha",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 142,
                            Code = "MYR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2119),
                            Description = "MALAYSIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2122),
                            Name = "Malaysian Ringgit",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 143,
                            Code = "MVR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2129),
                            Description = "MALDIVES",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2131),
                            Name = "Rufiyaa",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 144,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2138),
                            Description = "MALI",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2140),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 145,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2146),
                            Description = "MALTA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2148),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 146,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2154),
                            Description = "MARSHALL ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2156),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 147,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2162),
                            Description = "MARTINIQUE",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2165),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 148,
                            Code = "MRU",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2171),
                            Description = "MAURITANIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2174),
                            Name = "Ouguiya",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 149,
                            Code = "MUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2180),
                            Description = "MAURITIUS",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2182),
                            Name = "Mauritius Rupee",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 150,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2189),
                            Description = "MAYOTTE",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2192),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 151,
                            Code = "MXN",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2216),
                            Description = "MEXICO",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2220),
                            Name = "Mexican Peso",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 152,
                            Code = "MXV",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2227),
                            Description = "MEXICO",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2230),
                            Name = "Mexican Unidad de Inversion (UDI)",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 153,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2236),
                            Description = "MICRONESIA (FEDERATED STATES OF)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2238),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 154,
                            Code = "MDL",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2245),
                            Description = "MOLDOVA (THE REPUBLIC OF)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2247),
                            Name = "Moldovan Leu",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 155,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2254),
                            Description = "MONACO",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2257),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 156,
                            Code = "MNT",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2263),
                            Description = "MONGOLIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2266),
                            Name = "Tugrik",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 157,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2272),
                            Description = "MONTENEGRO",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2274),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 158,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2281),
                            Description = "MONTSERRAT",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2283),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 159,
                            Code = "MAD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2289),
                            Description = "MOROCCO",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2292),
                            Name = "Moroccan Dirham",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 160,
                            Code = "MZN",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2300),
                            Description = "MOZAMBIQUE",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2302),
                            Name = "Mozambique Metical",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 161,
                            Code = "MMK",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2308),
                            Description = "MYANMAR",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2311),
                            Name = "Kyat",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 162,
                            Code = "NAD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2318),
                            Description = "NAMIBIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2321),
                            Name = "Namibia Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 163,
                            Code = "ZAR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2327),
                            Description = "NAMIBIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2329),
                            Name = "Rand",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 164,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2335),
                            Description = "NAURU",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2338),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 165,
                            Code = "NPR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2344),
                            Description = "NEPAL",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2346),
                            Name = "Nepalese Rupee",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 166,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2352),
                            Description = "NETHERLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2354),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 167,
                            Code = "XPF",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2361),
                            Description = "NEW CALEDONIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2363),
                            Name = "CFP Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 168,
                            Code = "NZD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2370),
                            Description = "NEW ZEALAND",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2373),
                            Name = "New Zealand Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 169,
                            Code = "NIO",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2379),
                            Description = "NICARAGUA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2381),
                            Name = "Cordoba Oro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 170,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2387),
                            Description = "NIGER (THE)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2390),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 171,
                            Code = "NGN",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2396),
                            Description = "NIGERIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2398),
                            Name = "Naira",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 172,
                            Code = "NZD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2406),
                            Description = "NIUE",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2409),
                            Name = "New Zealand Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 173,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2416),
                            Description = "NORFOLK ISLAND",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2419),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 174,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2424),
                            Description = "NORTHERN MARIANA ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2427),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 175,
                            Code = "NOK",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2433),
                            Description = "NORWAY",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2436),
                            Name = "Norwegian Krone",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 176,
                            Code = "OMR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2442),
                            Description = "OMAN",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2445),
                            Name = "Rial Omani",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 177,
                            Code = "PKR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2470),
                            Description = "PAKISTAN",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2474),
                            Name = "Pakistan Rupee",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 178,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2479),
                            Description = "PALAU",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2482),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 179,
                            Code = "PAB",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2488),
                            Description = "PANAMA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2490),
                            Name = "Balboa",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 180,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2496),
                            Description = "PANAMA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2499),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 181,
                            Code = "PGK",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2504),
                            Description = "PAPUA NEW GUINEA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2508),
                            Name = "Kina",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 182,
                            Code = "PYG",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2515),
                            Description = "PARAGUAY",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2518),
                            Name = "Guarani",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 183,
                            Code = "PEN",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2527),
                            Description = "PERU",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2529),
                            Name = "Nuevo Sol",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 184,
                            Code = "PHP",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2535),
                            Description = "PHILIPPINES (THE)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2538),
                            Name = "Philippine Peso",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 185,
                            Code = "NZD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2546),
                            Description = "PITCAIRN",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2548),
                            Name = "New Zealand Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 186,
                            Code = "PLN",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2557),
                            Description = "POLAND",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2559),
                            Name = "Zloty",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 187,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2567),
                            Description = "PORTUGAL",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2569),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 188,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2575),
                            Description = "PUERTO RICO",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2578),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 189,
                            Code = "QAR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2584),
                            Description = "QATAR",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2586),
                            Name = "Qatari Rial",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 190,
                            Code = "MKD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2592),
                            Description = "REPUBLIC OF NORTH MACEDONIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2596),
                            Name = "Denar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 191,
                            Code = "RON",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2601),
                            Description = "ROMANIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2604),
                            Name = "Romanian Leu",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 192,
                            Code = "RUB",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2611),
                            Description = "RUSSIAN FEDERATION (THE)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2613),
                            Name = "Russian Ruble",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 193,
                            Code = "RWF",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2620),
                            Description = "RWANDA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2624),
                            Name = "Rwanda Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 194,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2630),
                            Description = "RÉUNION",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2633),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 195,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2639),
                            Description = "SAINT BARTHÉLEMY",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2641),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 196,
                            Code = "SHP",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2647),
                            Description = "SAINT HELENA, ASCENSION AND TRISTAN DA CUNHA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2650),
                            Name = "Saint Helena Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 197,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2656),
                            Description = "SAINT KITTS AND NEVIS",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2659),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 198,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2665),
                            Description = "SAINT LUCIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2668),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 199,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2674),
                            Description = "SAINT MARTIN (FRENCH PART)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2677),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 200,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2682),
                            Description = "SAINT PIERRE AND MIQUELON",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2685),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 201,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2691),
                            Description = "SAINT VINCENT AND THE GRENADINES",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2693),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 202,
                            Code = "WST",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2700),
                            Description = "SAMOA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2703),
                            Name = "Tala",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 203,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2729),
                            Description = "SAN MARINO",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2733),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 204,
                            Code = "STN",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2739),
                            Description = "SAO TOME AND PRINCIPE",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2741),
                            Name = "Dobra",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 205,
                            Code = "SAR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2747),
                            Description = "SAUDI ARABIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2749),
                            Name = "Saudi Riyal",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 206,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2756),
                            Description = "SENEGAL",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2759),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 207,
                            Code = "RSD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2765),
                            Description = "SERBIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2768),
                            Name = "Serbian Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 208,
                            Code = "SCR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2776),
                            Description = "SEYCHELLES",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2778),
                            Name = "Seychelles Rupee",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 209,
                            Code = "SLL",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2785),
                            Description = "SIERRA LEONE",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2787),
                            Name = "Leone",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 210,
                            Code = "SGD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2793),
                            Description = "SINGAPORE",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2796),
                            Name = "Singapore Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 211,
                            Code = "ANG",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2803),
                            Description = "SINT MAARTEN (DUTCH PART)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2806),
                            Name = "Netherlands Antillean Guilder",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 212,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2812),
                            Description = "SLOVAKIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2814),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 213,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2820),
                            Description = "SLOVENIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2822),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 214,
                            Code = "SBD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2830),
                            Description = "SOLOMON ISLANDS",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2832),
                            Name = "Solomon Islands Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 215,
                            Code = "SOS",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2838),
                            Description = "SOMALIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2841),
                            Name = "Somali Shilling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 216,
                            Code = "ZAR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2846),
                            Description = "SOUTH AFRICA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2850),
                            Name = "Rand",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 217,
                            Code = "SSP",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2856),
                            Description = "SOUTH SUDAN",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2859),
                            Name = "South Sudanese Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 218,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2865),
                            Description = "SPAIN",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2867),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 219,
                            Code = "LKR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2873),
                            Description = "SRI LANKA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2875),
                            Name = "Sri Lanka Rupee",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 220,
                            Code = "SDG",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2882),
                            Description = "SUDAN (THE)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2885),
                            Name = "Sudanese Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 221,
                            Code = "SRD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2891),
                            Description = "SURINAME",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2894),
                            Name = "Surinam Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 222,
                            Code = "NOK",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2899),
                            Description = "SVALBARD AND JAN MAYEN",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2902),
                            Name = "Norwegian Krone",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 223,
                            Code = "SZL",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2908),
                            Description = "SWAZILAND",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2911),
                            Name = "Lilangeni",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 224,
                            Code = "SEK",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2917),
                            Description = "SWEDEN",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2919),
                            Name = "Swedish Krona",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 225,
                            Code = "CHE",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2926),
                            Description = "SWITZERLAND",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2928),
                            Name = "WIR Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 226,
                            Code = "CHF",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2937),
                            Description = "SWITZERLAND",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2940),
                            Name = "Swiss Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 227,
                            Code = "CHW",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2945),
                            Description = "SWITZERLAND",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2949),
                            Name = "WIR Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 228,
                            Code = "SYP",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2984),
                            Description = "SYRIAN ARAB REPUBLIC",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2987),
                            Name = "Syrian Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 229,
                            Code = "TWD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2993),
                            Description = "TAIWAN (PROVINCE OF CHINA)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(2995),
                            Name = "New Taiwan Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 230,
                            Code = "TJS",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3001),
                            Description = "TAJIKISTAN",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3004),
                            Name = "Somoni",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 231,
                            Code = "TZS",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3010),
                            Description = "TANZANIA, UNITED REPUBLIC OF",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3012),
                            Name = "Tanzanian Shilling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 232,
                            Code = "THB",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3017),
                            Description = "THAILAND",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3020),
                            Name = "Baht",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 233,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3025),
                            Description = "TIMOR-LESTE",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3028),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 234,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3034),
                            Description = "TOGO",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3037),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 235,
                            Code = "NZD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3045),
                            Description = "TOKELAU",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3048),
                            Name = "New Zealand Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 236,
                            Code = "TOP",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3054),
                            Description = "TONGA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3056),
                            Name = "Pa’anga",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 237,
                            Code = "TTD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3062),
                            Description = "TRINIDAD AND TOBAGO",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3064),
                            Name = "Trinidad and Tobago Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 238,
                            Code = "TND",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3071),
                            Description = "TUNISIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3073),
                            Name = "Tunisian Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 239,
                            Code = "TRY",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3079),
                            Description = "TURKEY",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3081),
                            Name = "Turkish Lira",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 240,
                            Code = "TMT",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3087),
                            Description = "TURKMENISTAN",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3090),
                            Name = "Turkmenistan New Manat",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 241,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3096),
                            Description = "TURKS AND CAICOS ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3098),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 242,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3104),
                            Description = "TUVALU",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3107),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 243,
                            Code = "UGX",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3113),
                            Description = "UGANDA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3115),
                            Name = "Uganda Shilling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 244,
                            Code = "UAH",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3125),
                            Description = "UKRAINE",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3128),
                            Name = "Hryvnia",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 245,
                            Code = "AED",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3134),
                            Description = "UNITED ARAB EMIRATES (THE)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3137),
                            Name = "UAE Dirham",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 246,
                            Code = "GBP",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3144),
                            Description = "UNITED KINGDOM OF GREAT BRITAIN AND NORTHERN IRELAND (THE)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3146),
                            Name = "Pound Sterling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 247,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3153),
                            Description = "UNITED STATES MINOR OUTLYING ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3155),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 248,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3162),
                            Description = "UNITED STATES OF AMERICA (THE)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3164),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 249,
                            Code = "USN",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3172),
                            Description = "UNITED STATES OF AMERICA (THE)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3175),
                            Name = "US Dollar (Next day)",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 250,
                            Code = "UYI",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3180),
                            Description = "URUGUAY",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3183),
                            Name = "Uruguay Peso en Unidades Indexadas (URUIURUI)",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 251,
                            Code = "UYU",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3189),
                            Description = "URUGUAY",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3192),
                            Name = "Peso Uruguayo",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 252,
                            Code = "UZS",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3198),
                            Description = "UZBEKISTAN",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3200),
                            Name = "Uzbekistan Sum",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 253,
                            Code = "VUV",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3206),
                            Description = "VANUATU",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3209),
                            Name = "Vatu",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 254,
                            Code = "VEF",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3232),
                            Description = "VENEZUELA (BOLIVARIAN REPUBLIC OF)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3234),
                            Name = "Bolivar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 255,
                            Code = "VND",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3240),
                            Description = "VIET NAM",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3243),
                            Name = "Dong",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 256,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3250),
                            Description = "VIRGIN ISLANDS (BRITISH)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3252),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 257,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3258),
                            Description = "VIRGIN ISLANDS (U.S.)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3260),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 258,
                            Code = "XPF",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3267),
                            Description = "WALLIS AND FUTUNA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3269),
                            Name = "CFP Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 259,
                            Code = "MAD",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3275),
                            Description = "WESTERN SAHARA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3278),
                            Name = "Moroccan Dirham",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 260,
                            Code = "YER",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3286),
                            Description = "YEMEN",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3288),
                            Name = "Yemeni Rial",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 261,
                            Code = "ZMW",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3295),
                            Description = "ZAMBIA",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3297),
                            Name = "Zambian Kwacha",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 262,
                            Code = "ZWL",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3303),
                            Description = "ZIMBABWE",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3306),
                            Name = "Zimbabwe Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 263,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3312),
                            Description = "ÅLAND ISLANDS",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 473, DateTimeKind.Local).AddTicks(3314),
                            Name = "Euro",
                            Symbol = " "
                        });
                });

            modelBuilder.Entity("MM.ClientModels.CustomField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime1")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime10")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime11")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime12")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime13")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime14")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime15")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime16")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime17")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime18")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime19")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime2")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime20")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime3")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime4")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime5")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime6")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime7")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime8")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime9")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("Decimal1")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal10")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal11")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal12")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal13")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal14")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal15")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal16")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal17")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal18")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal19")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal2")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal20")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal3")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal4")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal5")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal6")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal7")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal8")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal9")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("Int1")
                        .HasColumnType("int");

                    b.Property<int?>("Int10")
                        .HasColumnType("int");

                    b.Property<int?>("Int11")
                        .HasColumnType("int");

                    b.Property<int?>("Int12")
                        .HasColumnType("int");

                    b.Property<int?>("Int13")
                        .HasColumnType("int");

                    b.Property<int?>("Int14")
                        .HasColumnType("int");

                    b.Property<int?>("Int15")
                        .HasColumnType("int");

                    b.Property<int?>("Int16")
                        .HasColumnType("int");

                    b.Property<int?>("Int17")
                        .HasColumnType("int");

                    b.Property<int?>("Int18")
                        .HasColumnType("int");

                    b.Property<int?>("Int19")
                        .HasColumnType("int");

                    b.Property<int?>("Int2")
                        .HasColumnType("int");

                    b.Property<int?>("Int20")
                        .HasColumnType("int");

                    b.Property<int?>("Int3")
                        .HasColumnType("int");

                    b.Property<int?>("Int4")
                        .HasColumnType("int");

                    b.Property<int?>("Int5")
                        .HasColumnType("int");

                    b.Property<int?>("Int6")
                        .HasColumnType("int");

                    b.Property<int?>("Int7")
                        .HasColumnType("int");

                    b.Property<int?>("Int8")
                        .HasColumnType("int");

                    b.Property<int?>("Int9")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup1")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup10")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup11")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup12")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup13")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup14")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup15")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup16")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup17")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup18")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup19")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup2")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup20")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup3")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup4")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup5")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup6")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup7")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup8")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup9")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TableName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("TablePrimaryKeyValue")
                        .HasColumnType("int");

                    b.Property<string>("Text1")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text10")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text11")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text12")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text13")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text14")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text15")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text16")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text17")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text18")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text19")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text2")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text20")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text3")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text4")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text5")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text6")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text7")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text8")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text9")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("CustomField");
                });

            modelBuilder.Entity("MM.ClientModels.CustomFieldLookUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("FieldIndex")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("CustomFieldLookUp");
                });

            modelBuilder.Entity("MM.ClientModels.CustomFieldName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DataType")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("FieldIndex")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("CustomFieldName");
                });

            modelBuilder.Entity("MM.ClientModels.DateSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(40) CHARACTER SET utf8mb4")
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.ToTable("DateSetting");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 482, DateTimeKind.Local).AddTicks(5119),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 482, DateTimeKind.Local).AddTicks(6329),
                            Name = "12/03/2020"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 483, DateTimeKind.Local).AddTicks(264),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 483, DateTimeKind.Local).AddTicks(325),
                            Name = "03/12/2020"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 483, DateTimeKind.Local).AddTicks(349),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 483, DateTimeKind.Local).AddTicks(354),
                            Name = "03.12.2020"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 483, DateTimeKind.Local).AddTicks(359),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 483, DateTimeKind.Local).AddTicks(361),
                            Name = "03-12-2020"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 483, DateTimeKind.Local).AddTicks(465),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 483, DateTimeKind.Local).AddTicks(469),
                            Name = "03 Dec 2020"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 483, DateTimeKind.Local).AddTicks(474),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 483, DateTimeKind.Local).AddTicks(477),
                            Name = "03-Dec-2020"
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 483, DateTimeKind.Local).AddTicks(481),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 483, DateTimeKind.Local).AddTicks(484),
                            Name = "2020-12-03"
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 483, DateTimeKind.Local).AddTicks(488),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 483, DateTimeKind.Local).AddTicks(492),
                            Name = "Friday, December 03, 2020"
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 483, DateTimeKind.Local).AddTicks(497),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 483, DateTimeKind.Local).AddTicks(500),
                            Name = "Fri, December 03, 2020"
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 483, DateTimeKind.Local).AddTicks(505),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 483, DateTimeKind.Local).AddTicks(508),
                            Name = "December 03, 2020"
                        },
                        new
                        {
                            Id = 11,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 483, DateTimeKind.Local).AddTicks(514),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 483, DateTimeKind.Local).AddTicks(518),
                            Name = "03 December 2020"
                        },
                        new
                        {
                            Id = 12,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 483, DateTimeKind.Local).AddTicks(523),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 483, DateTimeKind.Local).AddTicks(526),
                            Name = "3 Dec 2020"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Designation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Designation");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 513, DateTimeKind.Local).AddTicks(3358),
                            Description = "Operations manager",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 513, DateTimeKind.Local).AddTicks(4952),
                            Name = "Operations manager"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 513, DateTimeKind.Local).AddTicks(6495),
                            Description = "Quality control, safety, environmental manager",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 513, DateTimeKind.Local).AddTicks(6534),
                            Name = "Quality control, safety, environmental manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 513, DateTimeKind.Local).AddTicks(6566),
                            Description = "Accountant, bookkeeper, controller",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 513, DateTimeKind.Local).AddTicks(6570),
                            Name = "Accountant, bookkeeper, controller"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 513, DateTimeKind.Local).AddTicks(6575),
                            Description = "Office manager",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 513, DateTimeKind.Local).AddTicks(6578),
                            Name = "Office manager"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 513, DateTimeKind.Local).AddTicks(6584),
                            Description = "Receptionist",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 513, DateTimeKind.Local).AddTicks(6587),
                            Name = "Receptionist"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 513, DateTimeKind.Local).AddTicks(6746),
                            Description = "Foreperson, supervisor, lead person",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 513, DateTimeKind.Local).AddTicks(6750),
                            Name = "Foreperson, supervisor, lead person"
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 513, DateTimeKind.Local).AddTicks(6754),
                            Description = "Marketing manager",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 513, DateTimeKind.Local).AddTicks(6757),
                            Name = "Marketing manager"
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 513, DateTimeKind.Local).AddTicks(6761),
                            Description = "Purchasing manager",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 513, DateTimeKind.Local).AddTicks(6764),
                            Name = "Purchasing manager"
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 513, DateTimeKind.Local).AddTicks(6769),
                            Description = "Shipping and receiving person or manager",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 513, DateTimeKind.Local).AddTicks(6772),
                            Name = "Shipping and receiving person or manager"
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 513, DateTimeKind.Local).AddTicks(6777),
                            Description = "Professional staff",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 513, DateTimeKind.Local).AddTicks(6780),
                            Name = "Professional staff"
                        },
                        new
                        {
                            Id = 11,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 513, DateTimeKind.Local).AddTicks(6785),
                            Description = "Production Manager",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 513, DateTimeKind.Local).AddTicks(6788),
                            Name = "Production Manager"
                        },
                        new
                        {
                            Id = 12,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 513, DateTimeKind.Local).AddTicks(6794),
                            Description = "Chief Financial Officer (CFO)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 513, DateTimeKind.Local).AddTicks(6796),
                            Name = "Chief Financial Officer (CFO)"
                        },
                        new
                        {
                            Id = 13,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 513, DateTimeKind.Local).AddTicks(6802),
                            Description = "Vice President of Marketing or Marketing Manager",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 513, DateTimeKind.Local).AddTicks(6805),
                            Name = "Vice President of Marketing or Marketing Manager"
                        },
                        new
                        {
                            Id = 14,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 513, DateTimeKind.Local).AddTicks(6810),
                            Description = "Chief Operating Officer (COO)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 513, DateTimeKind.Local).AddTicks(6814),
                            Name = "Chief Operating Officer (COO)"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Chief Executive Officer (CEO) or President",
                            Name = "Chief Executive Officer (CEO) or President"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Donation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DonatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DonorNotes")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("PromotionDetailId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("PromotionDetailId");

                    b.ToTable("Donation");
                });

            modelBuilder.Entity("MM.ClientModels.EmailCcrule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EmailTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmailTypeId");

                    b.HasIndex("RoleId");

                    b.ToTable("EmailCCRule");
                });

            modelBuilder.Entity("MM.ClientModels.EmailTemplateContent", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailContent")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasMaxLength(4000);

                    b.Property<int>("EmailTemplateNameId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("EmailTemplateNameId");

                    b.ToTable("EmailTemplateContent");
                });

            modelBuilder.Entity("MM.ClientModels.EmailTemplateName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("EmailTemplateName");
                });

            modelBuilder.Entity("MM.ClientModels.EmailType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("EmailType");
                });

            modelBuilder.Entity("MM.ClientModels.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("MM.ClientModels.EquipmentCount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AvaialbleCount")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.ToTable("EquipmentCount");
                });

            modelBuilder.Entity("MM.ClientModels.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<bool>("AllowCancellations")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("AllowGuestRegistrations")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("AllowRegistration")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CancellationbeforeDays")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(2000) CHARACTER SET utf8mb4")
                        .HasMaxLength(2000);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time(2)");

                    b.Property<string>("EventUniqueName")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<int?>("GuestLimitPerRegistrant")
                        .HasColumnType("int");

                    b.Property<bool>("InternalOrExternal")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsChargableEvent")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsCpdevent")
                        .HasColumnName("IsCPDEvent")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MaxRegistrationsAllowed")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("OrganizerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegEndDate")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan>("RegEndTime")
                        .HasColumnType("time(2)");

                    b.Property<DateTime>("RegStartDate")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan>("RegStartTime")
                        .HasColumnType("time(2)");

                    b.Property<bool>("ShowMaxRegistrationsAllowed")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time(2)");

                    b.Property<int>("TimeZoneId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("OrganizerId");

                    b.HasIndex("TimeZoneId");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("MM.ClientModels.EventAccess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool?>("AdminOnly")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("Anyone")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<bool?>("RestrictedList")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("EventAccess");
                });

            modelBuilder.Entity("MM.ClientModels.EventAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan>("SignInTime")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan>("SingOutTime")
                        .HasColumnType("time(6)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("MemberId");

                    b.ToTable("EventAttendance");
                });

            modelBuilder.Entity("MM.ClientModels.EventCommunication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Announcement1ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Announcement1Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Announcement1SentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Announcement2ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Announcement2Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Announcement2SentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Announcement3ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Announcement3Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Announcement3SentDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Reminder1ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Reminder1Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Reminder1SentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Reminder2ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Reminder2Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Reminder2SentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Reminder3ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Reminder3Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Reminder3SentDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("EventCommunication");
                });

            modelBuilder.Entity("MM.ClientModels.EventCost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 3)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EventCostItemId")
                        .HasColumnType("int");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("EventCost");
                });

            modelBuilder.Entity("MM.ClientModels.EventCostItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("EventCostItem");
                });

            modelBuilder.Entity("MM.ClientModels.EventEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RequiredCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("EventId");

                    b.ToTable("EventEquipment");
                });

            modelBuilder.Entity("MM.ClientModels.EventMinute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AssignedTo")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("Heading")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Minute")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("MinuteStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RaisedBy")
                        .HasColumnType("int");

                    b.Property<string>("SubHeading")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("MinuteStatusId");

                    b.ToTable("EventMinute");
                });

            modelBuilder.Entity("MM.ClientModels.EventMinuteStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("EventMinuteStatus");
                });

            modelBuilder.Entity("MM.ClientModels.EventPreRequisiteEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PreRequisiteEventId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("PreRequisiteEventId");

                    b.ToTable("EventPreRequisiteEvent");
                });

            modelBuilder.Entity("MM.ClientModels.EventRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Cancelled")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("EventResponseTypeId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("NumberOfGuests")
                        .HasColumnType("int");

                    b.Property<bool>("Paid")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("EventResponseTypeId");

                    b.HasIndex("MemberId");

                    b.ToTable("EventRegistration");
                });

            modelBuilder.Entity("MM.ClientModels.EventResponseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("EventResponseType");
                });

            modelBuilder.Entity("MM.ClientModels.EventRestrictionList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberLevelId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberTeamId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("MemberLevelId");

                    b.HasIndex("MemberTeamId");

                    b.ToTable("EventRestrictionList");
                });

            modelBuilder.Entity("MM.ClientModels.EventRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasMaxLength(500);

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("EventRole");
                });

            modelBuilder.Entity("MM.ClientModels.EventRoleUserXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int>("EventRoleId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventRoleId");

                    b.HasIndex("UserId");

                    b.ToTable("EventRoleUserXRef");
                });

            modelBuilder.Entity("MM.ClientModels.FileType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("FileType");
                });

            modelBuilder.Entity("MM.ClientModels.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Gender");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 776, DateTimeKind.Local).AddTicks(3584),
                            Description = "Male",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 776, DateTimeKind.Local).AddTicks(4969),
                            Name = "Male"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 776, DateTimeKind.Local).AddTicks(6349),
                            Description = "Female",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 776, DateTimeKind.Local).AddTicks(6379),
                            Name = "Female"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 12, 776, DateTimeKind.Local).AddTicks(6403),
                            Description = "Other",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 12, 776, DateTimeKind.Local).AddTicks(6407),
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CommentsForPayer")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("InternalNotes")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<decimal>("InvoiceAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("InvoiceCode")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InvoiceItem")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("InvoiceStatusId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PaymentGatewayId")
                        .HasColumnType("int");

                    b.Property<int?>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int?>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceStatusId");

                    b.HasIndex("MemberId");

                    b.HasIndex("PaymentGatewayId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("MM.ClientModels.InvoiceSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("CopyInvToOrgContact")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CopyRecToOrgContact")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("NextInvoiceNumber")
                        .HasColumnType("int");

                    b.Property<bool>("SendInvForPendingPayments")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("SendRecToPayer")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("InvoiceSetting");
                });

            modelBuilder.Entity("MM.ClientModels.InvoiceStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("InvoiceStatus");
                });

            modelBuilder.Entity("MM.ClientModels.LandingPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("MemberTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberTypeId");

                    b.HasIndex("PageId");

                    b.ToTable("LandingPage");
                });

            modelBuilder.Entity("MM.ClientModels.MarketingGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("MarketingGroup");
                });

            modelBuilder.Entity("MM.ClientModels.MarketingGroupXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("MarketingGroupId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("MarketingGroupId");

                    b.HasIndex("MemberId");

                    b.ToTable("MarketingGroupXRef");
                });

            modelBuilder.Entity("MM.ClientModels.MarketingProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("MarketingProfile");
                });

            modelBuilder.Entity("MM.ClientModels.MarketingProfileXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("MarketingProfileId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("MarketingProfileId");

                    b.HasIndex("MemberId");

                    b.ToTable("MarketingProfileXRef");
                });

            modelBuilder.Entity("MM.ClientModels.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ConfirmedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<bool>("EmailActivated")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsBillingContact")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsBranchContact")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("MemberBranchId")
                        .HasColumnType("int");

                    b.Property<string>("MemberCode")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("MemberLevelId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberTeamId")
                        .HasColumnType("int");

                    b.Property<int>("MemberTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("MembershipConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("NextRenewalDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int?>("OrganizationStructureId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<byte[]>("Photo")
                        .HasColumnType("blob");

                    b.Property<int?>("ReferralTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("TermAccepted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("TitleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.HasIndex("MemberBranchId");

                    b.HasIndex("MemberLevelId");

                    b.HasIndex("MemberStatusId");

                    b.HasIndex("MemberTeamId");

                    b.HasIndex("MemberTypeId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("OrganizationStructureId");

                    b.HasIndex("ReferralTypeId");

                    b.HasIndex("TitleId");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("MM.ClientModels.MemberAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("AddressLine2")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("AddressTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("BuidlingName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("ComplexName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Gpscoordinates")
                        .HasColumnName("GPSCoordinates")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("PrimaryContactNo")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("PrimaryEmail")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("SecondaryContactNo")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("SecondaryEmail")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("StreetName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("AddressTypeId");

                    b.HasIndex("BranchId");

                    b.HasIndex("MemberId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("MemberAddress");
                });

            modelBuilder.Entity("MM.ClientModels.MemberAffliationXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("AffliatedFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("AffliatedTill")
                        .HasColumnType("datetime");

                    b.Property<int?>("AffliationId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<bool>("IsActiveAffliatedNow")
                        .HasColumnName("isActiveAffliatedNow")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("MemberSpecificAffliationName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("AffliationId");

                    b.HasIndex("MemberId");

                    b.ToTable("MemberAffliationXRef");
                });

            modelBuilder.Entity("MM.ClientModels.MemberBankingDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("AccountTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BankName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("RoutingCode")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AccountTypeId");

                    b.HasIndex("MemberId");

                    b.ToTable("MemberBankingDetail");
                });

            modelBuilder.Entity("MM.ClientModels.MemberBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("MemberBranch");
                });

            modelBuilder.Entity("MM.ClientModels.MemberCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("MemberCategory");
                });

            modelBuilder.Entity("MM.ClientModels.MemberCodeGenerator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CodeGenerationRule")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("LastNumber")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Prefix")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Suffix")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("MemberCodeGenerator");
                });

            modelBuilder.Entity("MM.ClientModels.MemberCommunicationPreference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CommunicationTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan?>("PreferredTimeFrom")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("PreferredTimeTo")
                        .HasColumnType("time(6)");

                    b.HasKey("Id");

                    b.HasIndex("CommunicationTypeId");

                    b.HasIndex("MemberId");

                    b.ToTable("MemberCommunicationPreference");
                });

            modelBuilder.Entity("MM.ClientModels.MemberFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<byte[]>("FileContent")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<int>("FileTypeId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("FileTypeId");

                    b.HasIndex("MemberId");

                    b.ToTable("MemberFile");
                });

            modelBuilder.Entity("MM.ClientModels.MemberLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("MemberLevel");
                });

            modelBuilder.Entity("MM.ClientModels.MemberLoginAudit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("LoginTime")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LogoutTime")
                        .HasColumnType("datetime");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MemberLoginAudit");
                });

            modelBuilder.Entity("MM.ClientModels.MemberPlanHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsCurrentPlan")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("MemberPlanDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("MemberPlanDetailId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("MemberPlanHistory");
                });

            modelBuilder.Entity("MM.ClientModels.MemberQualificationXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("MemberSpecificQualificationName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("QualificationFrom")
                        .HasColumnType("datetime");

                    b.Property<int?>("QualificationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("QualificationTill")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("QualificationId");

                    b.ToTable("MemberQualificationXRef");
                });

            modelBuilder.Entity("MM.ClientModels.MemberStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("MemberStatus");
                });

            modelBuilder.Entity("MM.ClientModels.MemberTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("MemberTeam");
                });

            modelBuilder.Entity("MM.ClientModels.MemberType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("MemberCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("MemberCategoryId");

                    b.ToTable("MemberType");
                });

            modelBuilder.Entity("MM.ClientModels.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Acronym")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("WebSite")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("MM.ClientModels.OrganizationStructure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("LevelOfMember")
                        .HasColumnType("int");

                    b.Property<int>("MaximumNumber")
                        .HasColumnType("int");

                    b.Property<int?>("MaximumTimeInYears")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<bool?>("ShowMaximumTimeInYears")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("OrganizationStructure");
                });

            modelBuilder.Entity("MM.ClientModels.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Page");
                });

            modelBuilder.Entity("MM.ClientModels.PayPalConnectionMode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("PayPalConnectionMode");
                });

            modelBuilder.Entity("MM.ClientModels.PayPalPreferredPaymentGateway", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("PayPalPreferredPaymentGateway");
                });

            modelBuilder.Entity("MM.ClientModels.PaymentCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("PaymentCard");
                });

            modelBuilder.Entity("MM.ClientModels.PaymentGateway", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClientApicodeForMerchant")
                        .HasColumnName("ClientAPICodeForMerchant")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("ClientIdForMerchant")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("ClientPasswordForMerchant")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<decimal?>("CommisionPercentage")
                        .HasColumnType("decimal(6, 3)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("MerchantLocation")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("MerchantName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("MerchantNumber")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("PaymentGateway");
                });

            modelBuilder.Entity("MM.ClientModels.PaymentSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApplicationInstructions")
                        .HasColumnType("varchar(2000) CHARACTER SET utf8mb4")
                        .HasMaxLength(2000);

                    b.Property<int?>("ClientPayPalConnectionModeId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultCountryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("EventsInstructions")
                        .HasColumnType("varchar(2000) CHARACTER SET utf8mb4")
                        .HasMaxLength(2000);

                    b.Property<string>("GeneralInstructions")
                        .HasColumnType("varchar(2000) CHARACTER SET utf8mb4")
                        .HasMaxLength(2000);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("PayPalAccountId")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("PayPalApipassword")
                        .HasColumnName("PayPalAPIPassword")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("PayPalApisignature")
                        .HasColumnName("PayPalAPISignature")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("PayPalApiuserName")
                        .HasColumnName("PayPalAPIUserName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("PayPalPdtidentityToken")
                        .HasColumnName("PayPalPDTIdentityToken")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("PayPalPreferredPaymentGatewayId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("PaymentSetting");
                });

            modelBuilder.Entity("MM.ClientModels.PaymentSettingAllowedCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PaymentCardId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentSettingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaymentCardId");

                    b.HasIndex("PaymentSettingId");

                    b.ToTable("PaymentSettingAllowedCard");
                });

            modelBuilder.Entity("MM.ClientModels.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasMaxLength(500);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Permission");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 150, DateTimeKind.Local).AddTicks(8635),
                            Description = "Can create new contacts, modify all existing ones  ",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 150, DateTimeKind.Local).AddTicks(9962),
                            Name = "Membership manager"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 151, DateTimeKind.Local).AddTicks(1281),
                            Description = "Can create and manage all events",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 151, DateTimeKind.Local).AddTicks(1322),
                            Name = "Event manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 151, DateTimeKind.Local).AddTicks(1347),
                            Description = "Can manage all donations",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 151, DateTimeKind.Local).AddTicks(1351),
                            Name = "Donations manager"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 151, DateTimeKind.Local).AddTicks(1355),
                            Description = "Can send manual emails (e.g. newsletters)",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 151, DateTimeKind.Local).AddTicks(1358),
                            Name = "Newsletter manager"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 151, DateTimeKind.Local).AddTicks(1364),
                            Description = "Can modify your website pages. With this option selected, you can provide access to all pages on your site or to selected pages. When you grant access to a page, you automatically grant access to all of its child or sub pages.",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 151, DateTimeKind.Local).AddTicks(1367),
                            Name = "Website editor"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.PlanCanChangeToXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("FromPlanMasterId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("ToPlanMasterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromPlanMasterId");

                    b.HasIndex("ToPlanMasterId");

                    b.ToTable("PlanCanChangeToXref");
                });

            modelBuilder.Entity("MM.ClientModels.PlanDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PlanFrequencyId")
                        .HasColumnType("int");

                    b.Property<int>("PlanMasterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("PlanFrequencyId");

                    b.HasIndex("PlanMasterId");

                    b.ToTable("PlanDetail");
                });

            modelBuilder.Entity("MM.ClientModels.PlanFrequency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("PlanFrequency");
                });

            modelBuilder.Entity("MM.ClientModels.PlanMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("ApplyTaxSettings")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanPublicApply")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<bool?>("IsLimited")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("LimitToMemberCount")
                        .HasColumnType("int");

                    b.Property<int>("MemberCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberCategoryId");

                    b.HasIndex("PaymentMethodId");

                    b.ToTable("PlanMaster");
                });

            modelBuilder.Entity("MM.ClientModels.PromotionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(9, 3)");

                    b.Property<int?>("MemberLevelId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PromotionMasterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberLevelId");

                    b.HasIndex("MemberTypeId");

                    b.HasIndex("PromotionMasterId");

                    b.ToTable("PromotionDetail");
                });

            modelBuilder.Entity("MM.ClientModels.PromotionMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BenefitEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("BenefitStartDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("IsActive")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("PromotionMaster");
                });

            modelBuilder.Entity("MM.ClientModels.PromotionResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PromotionMasterId")
                        .HasColumnType("int");

                    b.Property<int>("PromotionResponseType")
                        .HasColumnType("int");

                    b.Property<DateTime>("ResponseDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("PromotionMasterId");

                    b.HasIndex("PromotionResponseType");

                    b.ToTable("PromotionResponse");
                });

            modelBuilder.Entity("MM.ClientModels.PromotionResponseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("PromotionResponseType");
                });

            modelBuilder.Entity("MM.ClientModels.Qualification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Qualification");
                });

            modelBuilder.Entity("MM.ClientModels.ReferralType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("ReferralType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 508, DateTimeKind.Local).AddTicks(851),
                            Description = "Google",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 508, DateTimeKind.Local).AddTicks(2249),
                            Name = "Google"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 508, DateTimeKind.Local).AddTicks(3498),
                            Description = "Facebook",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 508, DateTimeKind.Local).AddTicks(3532),
                            Name = "Facebook"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 508, DateTimeKind.Local).AddTicks(3558),
                            Description = "Twitter",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 508, DateTimeKind.Local).AddTicks(3561),
                            Name = "Twitter"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 508, DateTimeKind.Local).AddTicks(3567),
                            Description = "TV",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 508, DateTimeKind.Local).AddTicks(3569),
                            Name = "TV"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 508, DateTimeKind.Local).AddTicks(3578),
                            Description = "Friends",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 508, DateTimeKind.Local).AddTicks(3581),
                            Name = "Friends"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 508, DateTimeKind.Local).AddTicks(3587),
                            Description = "Other",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 508, DateTimeKind.Local).AddTicks(3590),
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Refund", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CommentsForPayer")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("InternalNotes")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PaymentGatewayId")
                        .HasColumnType("int");

                    b.Property<decimal>("RefundAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("RefundDate")
                        .HasColumnType("datetime");

                    b.Property<string>("RefundItem")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int?>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("PaymentGatewayId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("Refund");
                });

            modelBuilder.Entity("MM.ClientModels.RelatedTo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(30) CHARACTER SET utf8mb4")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("RelatedTo");
                });

            modelBuilder.Entity("MM.ClientModels.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasMaxLength(500);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 541, DateTimeKind.Local).AddTicks(2681),
                            Description = "Select this option to remove admin access for existing administrators  ",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 541, DateTimeKind.Local).AddTicks(3890),
                            Name = "No administrative privileges"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 541, DateTimeKind.Local).AddTicks(5723),
                            Description = "Grants full access to all administrative functions. Take care when granting this level of access since full admins can delete other admins and even the entire site.",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 541, DateTimeKind.Local).AddTicks(5760),
                            Name = "Account administrator"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 541, DateTimeKind.Local).AddTicks(5794),
                            Description = "Allows viewing of everything in the admin backend without being able to make any changes.  ",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 541, DateTimeKind.Local).AddTicks(5798),
                            Name = "Account administrator (Read-only access)"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 541, DateTimeKind.Local).AddTicks(5807),
                            Description = "Provides administrative access to selected Wild Apricot modules. Use this option if you have dedicated personnel in charge of events, memberships, editing webpages, or managing donations. With this option selected, you can limit access to selected Functions",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 541, DateTimeKind.Local).AddTicks(5810),
                            Name = "Limited administrator"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.RolePermissionXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("Permissionid")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Permissionid");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissionXRef");
                });

            modelBuilder.Entity("MM.ClientModels.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("State");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 691, DateTimeKind.Local).AddTicks(9129),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(340),
                            Name = "Eastern Cape"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1564),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1608),
                            Name = "Free State"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1638),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1642),
                            Name = "Gauteng"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1648),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1651),
                            Name = "KwaZulu-Natal"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1657),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1661),
                            Name = "Limpopo"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1667),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1669),
                            Name = "Mpumalanga"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1674),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1677),
                            Name = "North West"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1681),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1684),
                            Name = "Northern Cape"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1689),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1691),
                            Name = "Western Cape"
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1695),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1698),
                            Name = "Australian Capital Territory"
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1703),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1705),
                            Name = "New South Wales"
                        },
                        new
                        {
                            Id = 12,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1713),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1716),
                            Name = "Northern Territory"
                        },
                        new
                        {
                            Id = 13,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1722),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1724),
                            Name = "Queensland"
                        },
                        new
                        {
                            Id = 14,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1765),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1768),
                            Name = "South Australia"
                        },
                        new
                        {
                            Id = 15,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1774),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1776),
                            Name = "Tasmania"
                        },
                        new
                        {
                            Id = 16,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1782),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1784),
                            Name = "Victoria"
                        },
                        new
                        {
                            Id = 17,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1790),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1793),
                            Name = "Western Australia"
                        },
                        new
                        {
                            Id = 18,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1797),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1800),
                            Name = "Andaman and Nicobar Islands"
                        },
                        new
                        {
                            Id = 19,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1804),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1806),
                            Name = "Andhra Pradesh"
                        },
                        new
                        {
                            Id = 20,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1811),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1814),
                            Name = "Arunachal Pradesh"
                        },
                        new
                        {
                            Id = 21,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1818),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1820),
                            Name = "Assam"
                        },
                        new
                        {
                            Id = 22,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1825),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1827),
                            Name = "Bihar"
                        },
                        new
                        {
                            Id = 23,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1832),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1835),
                            Name = "Chandigarh"
                        },
                        new
                        {
                            Id = 24,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1840),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1842),
                            Name = "Chhattisgarh"
                        },
                        new
                        {
                            Id = 25,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1847),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1850),
                            Name = "Dadra and Nagar Haveli"
                        },
                        new
                        {
                            Id = 26,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1854),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1856),
                            Name = "Daman and Diu"
                        },
                        new
                        {
                            Id = 27,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1861),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1864),
                            Name = "Delhi"
                        },
                        new
                        {
                            Id = 28,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1868),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1870),
                            Name = "Goa"
                        },
                        new
                        {
                            Id = 29,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1875),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1877),
                            Name = "Gujarat"
                        },
                        new
                        {
                            Id = 30,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1882),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1884),
                            Name = "Haryana"
                        },
                        new
                        {
                            Id = 31,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1889),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1891),
                            Name = "Himachal Pradesh"
                        },
                        new
                        {
                            Id = 32,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1896),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1898),
                            Name = "Jammu and Kashmir"
                        },
                        new
                        {
                            Id = 33,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1902),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1905),
                            Name = "Jharkhand"
                        },
                        new
                        {
                            Id = 34,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1910),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1912),
                            Name = "Karnataka"
                        },
                        new
                        {
                            Id = 35,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1917),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1919),
                            Name = "Kerala"
                        },
                        new
                        {
                            Id = 36,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1923),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1926),
                            Name = "Ladakh"
                        },
                        new
                        {
                            Id = 37,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1930),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1933),
                            Name = "Lakshadweep"
                        },
                        new
                        {
                            Id = 38,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1941),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1943),
                            Name = "Madhya Pradesh"
                        },
                        new
                        {
                            Id = 39,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1948),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1950),
                            Name = "Maharashtra"
                        },
                        new
                        {
                            Id = 40,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1955),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1957),
                            Name = "Manipur"
                        },
                        new
                        {
                            Id = 41,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1962),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1966),
                            Name = "Meghalaya"
                        },
                        new
                        {
                            Id = 42,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1970),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1973),
                            Name = "Mizoram"
                        },
                        new
                        {
                            Id = 43,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1978),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1980),
                            Name = "Nagaland"
                        },
                        new
                        {
                            Id = 44,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1985),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1987),
                            Name = "Odisha"
                        },
                        new
                        {
                            Id = 45,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1992),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(1994),
                            Name = "Puducherry"
                        },
                        new
                        {
                            Id = 46,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2000),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2002),
                            Name = "Punjab"
                        },
                        new
                        {
                            Id = 47,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2008),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2010),
                            Name = "Rajasthan"
                        },
                        new
                        {
                            Id = 48,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2015),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2017),
                            Name = "Sikkim"
                        },
                        new
                        {
                            Id = 49,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2022),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2024),
                            Name = "Tamil Nadu"
                        },
                        new
                        {
                            Id = 50,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2044),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2047),
                            Name = "Telangana"
                        },
                        new
                        {
                            Id = 51,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2051),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2054),
                            Name = "Tripura"
                        },
                        new
                        {
                            Id = 52,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2059),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2062),
                            Name = "Uttar Pradesh"
                        },
                        new
                        {
                            Id = 53,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2066),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2069),
                            Name = "Uttarakhand"
                        },
                        new
                        {
                            Id = 54,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2073),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2075),
                            Name = "West Bengal"
                        },
                        new
                        {
                            Id = 55,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2081),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2083),
                            Name = "Aberdeen"
                        },
                        new
                        {
                            Id = 56,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2088),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2090),
                            Name = "Aberdeenshire"
                        },
                        new
                        {
                            Id = 57,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2095),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2097),
                            Name = "Angus"
                        },
                        new
                        {
                            Id = 58,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2102),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2106),
                            Name = "Antrim"
                        },
                        new
                        {
                            Id = 59,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2111),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2114),
                            Name = "Antrim and Newtownabbey"
                        },
                        new
                        {
                            Id = 60,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2118),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2121),
                            Name = "Ards"
                        },
                        new
                        {
                            Id = 61,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2125),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2128),
                            Name = "Ards and North Down"
                        },
                        new
                        {
                            Id = 62,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2132),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2134),
                            Name = "Argyll and Bute"
                        },
                        new
                        {
                            Id = 63,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2140),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2143),
                            Name = "Armagh City and District Council"
                        },
                        new
                        {
                            Id = 64,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2148),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2150),
                            Name = "Armagh, Banbridge and Craigavon"
                        },
                        new
                        {
                            Id = 65,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2155),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2158),
                            Name = "Ascension Island"
                        },
                        new
                        {
                            Id = 66,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2162),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2165),
                            Name = "Ballymena Borough"
                        },
                        new
                        {
                            Id = 67,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2169),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2172),
                            Name = "Ballymoney"
                        },
                        new
                        {
                            Id = 68,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2178),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2180),
                            Name = "Banbridge"
                        },
                        new
                        {
                            Id = 69,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2185),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2187),
                            Name = "Barnsley"
                        },
                        new
                        {
                            Id = 70,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2191),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2194),
                            Name = "Bath and North East Somerset"
                        },
                        new
                        {
                            Id = 71,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2199),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2201),
                            Name = "Bedford"
                        },
                        new
                        {
                            Id = 72,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2207),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2209),
                            Name = "Belfast district"
                        },
                        new
                        {
                            Id = 73,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2214),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2216),
                            Name = "Birmingham"
                        },
                        new
                        {
                            Id = 74,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2222),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2224),
                            Name = "Blackburn with Darwen"
                        },
                        new
                        {
                            Id = 75,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2230),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2232),
                            Name = "Blackpool"
                        },
                        new
                        {
                            Id = 76,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2237),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2239),
                            Name = "Blaenau Gwent County Borough"
                        },
                        new
                        {
                            Id = 77,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2244),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2248),
                            Name = "Bolton"
                        },
                        new
                        {
                            Id = 78,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2252),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2254),
                            Name = "Bournemouth"
                        },
                        new
                        {
                            Id = 79,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2259),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2262),
                            Name = "Bracknell Forest"
                        },
                        new
                        {
                            Id = 80,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2267),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2269),
                            Name = "Bradford"
                        },
                        new
                        {
                            Id = 81,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2273),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2276),
                            Name = "Bridgend County Borough"
                        },
                        new
                        {
                            Id = 82,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2282),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2285),
                            Name = "Brighton and Hove"
                        },
                        new
                        {
                            Id = 83,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2289),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2292),
                            Name = "Buckinghamshire"
                        },
                        new
                        {
                            Id = 84,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2296),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2298),
                            Name = "Bury"
                        },
                        new
                        {
                            Id = 85,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2486),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2494),
                            Name = "Caerphilly County Borough"
                        },
                        new
                        {
                            Id = 86,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2498),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2502),
                            Name = "Calderdale"
                        },
                        new
                        {
                            Id = 87,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2507),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2510),
                            Name = "Cambridgeshire"
                        },
                        new
                        {
                            Id = 88,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2517),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2519),
                            Name = "Carmarthenshire"
                        },
                        new
                        {
                            Id = 89,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2524),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2526),
                            Name = "Carrickfergus Borough Council"
                        },
                        new
                        {
                            Id = 90,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2530),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2533),
                            Name = "Castlereagh"
                        },
                        new
                        {
                            Id = 91,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2537),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2539),
                            Name = "Causeway Coast and Glens"
                        },
                        new
                        {
                            Id = 92,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2544),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2546),
                            Name = "Central Bedfordshire"
                        },
                        new
                        {
                            Id = 93,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2551),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2553),
                            Name = "Ceredigion"
                        },
                        new
                        {
                            Id = 94,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2557),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2560),
                            Name = "Cheshire East"
                        },
                        new
                        {
                            Id = 95,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2565),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2568),
                            Name = "Cheshire West and Chester"
                        },
                        new
                        {
                            Id = 96,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2572),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2574),
                            Name = "City and County of Cardiff"
                        },
                        new
                        {
                            Id = 97,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2579),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2581),
                            Name = "City and County of Swansea"
                        },
                        new
                        {
                            Id = 98,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2586),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2588),
                            Name = "City of Bristol"
                        },
                        new
                        {
                            Id = 99,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2593),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2595),
                            Name = "City of Derby"
                        },
                        new
                        {
                            Id = 100,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2600),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2603),
                            Name = "City of Kingston upon Hull"
                        },
                        new
                        {
                            Id = 101,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2608),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2610),
                            Name = "City of Leicester"
                        },
                        new
                        {
                            Id = 102,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2614),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2617),
                            Name = "City of London"
                        },
                        new
                        {
                            Id = 103,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2622),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2626),
                            Name = "City of Nottingham"
                        },
                        new
                        {
                            Id = 104,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2632),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2634),
                            Name = "City of Peterborough"
                        },
                        new
                        {
                            Id = 105,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2639),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2641),
                            Name = "City of Plymouth"
                        },
                        new
                        {
                            Id = 106,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2646),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2648),
                            Name = "City of Portsmouth"
                        },
                        new
                        {
                            Id = 107,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2653),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2655),
                            Name = "City of Southampton"
                        },
                        new
                        {
                            Id = 108,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2659),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2662),
                            Name = "City of Stoke-on-Trent"
                        },
                        new
                        {
                            Id = 109,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2666),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2669),
                            Name = "City of Sunderland"
                        },
                        new
                        {
                            Id = 110,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2673),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2676),
                            Name = "City of Westminster"
                        },
                        new
                        {
                            Id = 111,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2681),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2684),
                            Name = "City of Wolverhampton"
                        },
                        new
                        {
                            Id = 112,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2690),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2692),
                            Name = "City of York"
                        },
                        new
                        {
                            Id = 113,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2697),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2699),
                            Name = "Clackmannanshire"
                        },
                        new
                        {
                            Id = 114,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2703),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2706),
                            Name = "Coleraine Borough Council"
                        },
                        new
                        {
                            Id = 115,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2710),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2713),
                            Name = "Conwy County Borough"
                        },
                        new
                        {
                            Id = 116,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2717),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2720),
                            Name = "Cookstown District Council"
                        },
                        new
                        {
                            Id = 117,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2724),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2727),
                            Name = "Cornwall"
                        },
                        new
                        {
                            Id = 118,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2731),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2734),
                            Name = "County Durham"
                        },
                        new
                        {
                            Id = 119,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2739),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2741),
                            Name = "Coventry"
                        },
                        new
                        {
                            Id = 120,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2762),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2764),
                            Name = "Craigavon Borough Council"
                        },
                        new
                        {
                            Id = 121,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2768),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2771),
                            Name = "Cumbria"
                        },
                        new
                        {
                            Id = 122,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2775),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2778),
                            Name = "Darlington"
                        },
                        new
                        {
                            Id = 123,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2782),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2785),
                            Name = "Denbighshire"
                        },
                        new
                        {
                            Id = 124,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2789),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2792),
                            Name = "Derbyshire"
                        },
                        new
                        {
                            Id = 125,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2796),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2799),
                            Name = "Derry City and Strabane"
                        },
                        new
                        {
                            Id = 126,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2803),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2806),
                            Name = "Derry City Council"
                        },
                        new
                        {
                            Id = 127,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2811),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2813),
                            Name = "Devon"
                        },
                        new
                        {
                            Id = 128,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2818),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2821),
                            Name = "Doncaster"
                        },
                        new
                        {
                            Id = 129,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2825),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2828),
                            Name = "Dorset"
                        },
                        new
                        {
                            Id = 130,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2833),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2835),
                            Name = "Down District Council"
                        },
                        new
                        {
                            Id = 131,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2840),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2843),
                            Name = "Dudley"
                        },
                        new
                        {
                            Id = 132,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2848),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2851),
                            Name = "Dumfries and Galloway"
                        },
                        new
                        {
                            Id = 133,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2856),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2859),
                            Name = "Dundee"
                        },
                        new
                        {
                            Id = 134,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2863),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2866),
                            Name = "Dungannon and South Tyrone Borough Council"
                        },
                        new
                        {
                            Id = 135,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2870),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2872),
                            Name = "East Ayrshire"
                        },
                        new
                        {
                            Id = 136,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2877),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2879),
                            Name = "East Dunbartonshire"
                        },
                        new
                        {
                            Id = 137,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2885),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2891),
                            Name = "East Lothian"
                        },
                        new
                        {
                            Id = 138,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2896),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2898),
                            Name = "East Renfrewshire"
                        },
                        new
                        {
                            Id = 139,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2903),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2905),
                            Name = "East Riding of Yorkshire"
                        },
                        new
                        {
                            Id = 140,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2912),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2914),
                            Name = "East Sussex"
                        },
                        new
                        {
                            Id = 141,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2919),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2921),
                            Name = "Edinburgh"
                        },
                        new
                        {
                            Id = 142,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2926),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2928),
                            Name = "England"
                        },
                        new
                        {
                            Id = 143,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2932),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2935),
                            Name = "Essex"
                        },
                        new
                        {
                            Id = 144,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2940),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2942),
                            Name = "Falkirk"
                        },
                        new
                        {
                            Id = 145,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2946),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2949),
                            Name = "Fermanagh and Omagh"
                        },
                        new
                        {
                            Id = 146,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2954),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2956),
                            Name = "Fermanagh District Council"
                        },
                        new
                        {
                            Id = 147,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2962),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2964),
                            Name = "Fife"
                        },
                        new
                        {
                            Id = 148,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2969),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2972),
                            Name = "Flintshire"
                        },
                        new
                        {
                            Id = 149,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2977),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2980),
                            Name = "Gateshead"
                        },
                        new
                        {
                            Id = 150,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2985),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2988),
                            Name = "Glasgow"
                        },
                        new
                        {
                            Id = 151,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2993),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(2995),
                            Name = "Gloucestershire"
                        },
                        new
                        {
                            Id = 152,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3001),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3003),
                            Name = "Gwynedd"
                        },
                        new
                        {
                            Id = 153,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3008),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3011),
                            Name = "Halton"
                        },
                        new
                        {
                            Id = 154,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3015),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3018),
                            Name = "Hampshire"
                        },
                        new
                        {
                            Id = 155,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3034),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3037),
                            Name = "Hartlepool"
                        },
                        new
                        {
                            Id = 156,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3042),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3044),
                            Name = "Herefordshire"
                        },
                        new
                        {
                            Id = 157,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3049),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3052),
                            Name = "Hertfordshire"
                        },
                        new
                        {
                            Id = 158,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3056),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3059),
                            Name = "Highland"
                        },
                        new
                        {
                            Id = 159,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3064),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3066),
                            Name = "Inverclyde"
                        },
                        new
                        {
                            Id = 160,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3071),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3074),
                            Name = "Isle of Wight"
                        },
                        new
                        {
                            Id = 161,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3079),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3082),
                            Name = "Isles of Scilly"
                        },
                        new
                        {
                            Id = 162,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3087),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3089),
                            Name = "Kent"
                        },
                        new
                        {
                            Id = 163,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3095),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3097),
                            Name = "Kirklees"
                        },
                        new
                        {
                            Id = 164,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3101),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3104),
                            Name = "Knowsley"
                        },
                        new
                        {
                            Id = 165,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3108),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3111),
                            Name = "Lancashire"
                        },
                        new
                        {
                            Id = 166,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3116),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3119),
                            Name = "Larne Borough Council"
                        },
                        new
                        {
                            Id = 167,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3123),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3125),
                            Name = "Leeds"
                        },
                        new
                        {
                            Id = 168,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3130),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3133),
                            Name = "Leicestershire"
                        },
                        new
                        {
                            Id = 169,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3137),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3140),
                            Name = "Limavady Borough Council"
                        },
                        new
                        {
                            Id = 170,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3144),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3147),
                            Name = "Lincolnshire"
                        },
                        new
                        {
                            Id = 171,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3151),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3154),
                            Name = "Lisburn and Castlereagh"
                        },
                        new
                        {
                            Id = 172,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3160),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3163),
                            Name = "Lisburn City Council"
                        },
                        new
                        {
                            Id = 173,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3167),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3170),
                            Name = "Liverpool"
                        },
                        new
                        {
                            Id = 174,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3176),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3179),
                            Name = "London Borough of Barking and Dagenham"
                        },
                        new
                        {
                            Id = 175,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3183),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3186),
                            Name = "London Borough of Barnet"
                        },
                        new
                        {
                            Id = 176,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3191),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3193),
                            Name = "London Borough of Bexley"
                        },
                        new
                        {
                            Id = 177,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3198),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3201),
                            Name = "London Borough of Brent"
                        },
                        new
                        {
                            Id = 178,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3205),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3208),
                            Name = "London Borough of Bromley"
                        },
                        new
                        {
                            Id = 179,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3212),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3215),
                            Name = "London Borough of Camden"
                        },
                        new
                        {
                            Id = 180,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3219),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3221),
                            Name = "London Borough of Croydon"
                        },
                        new
                        {
                            Id = 181,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3226),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3229),
                            Name = "London Borough of Ealing"
                        },
                        new
                        {
                            Id = 182,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3233),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3236),
                            Name = "London Borough of Enfield"
                        },
                        new
                        {
                            Id = 183,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3240),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3242),
                            Name = "London Borough of Hackney"
                        },
                        new
                        {
                            Id = 184,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3247),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3250),
                            Name = "London Borough of Hammersmith and Fulham"
                        },
                        new
                        {
                            Id = 185,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3254),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3256),
                            Name = "London Borough of Haringey"
                        },
                        new
                        {
                            Id = 186,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3262),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3264),
                            Name = "London Borough of Harrow"
                        },
                        new
                        {
                            Id = 187,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3268),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3271),
                            Name = "London Borough of Havering"
                        },
                        new
                        {
                            Id = 188,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3275),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3278),
                            Name = "London Borough of Hillingdon"
                        },
                        new
                        {
                            Id = 189,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3283),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3286),
                            Name = "London Borough of Hounslow"
                        },
                        new
                        {
                            Id = 190,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3305),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3307),
                            Name = "London Borough of Islington"
                        },
                        new
                        {
                            Id = 191,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3312),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3314),
                            Name = "London Borough of Lambeth"
                        },
                        new
                        {
                            Id = 192,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3319),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3321),
                            Name = "London Borough of Lewisham"
                        },
                        new
                        {
                            Id = 193,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3326),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3329),
                            Name = "London Borough of Merton"
                        },
                        new
                        {
                            Id = 194,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3333),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3338),
                            Name = "London Borough of Newham"
                        },
                        new
                        {
                            Id = 195,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3342),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3346),
                            Name = "London Borough of Redbridge"
                        },
                        new
                        {
                            Id = 196,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3351),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3353),
                            Name = "London Borough of Richmond upon Thames"
                        },
                        new
                        {
                            Id = 197,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3358),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3360),
                            Name = "London Borough of Southwark"
                        },
                        new
                        {
                            Id = 198,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3366),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3369),
                            Name = "London Borough of Sutton"
                        },
                        new
                        {
                            Id = 199,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3374),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3376),
                            Name = "London Borough of Tower Hamlets"
                        },
                        new
                        {
                            Id = 200,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3381),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3383),
                            Name = "London Borough of Waltham Forest"
                        },
                        new
                        {
                            Id = 201,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3387),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3390),
                            Name = "London Borough of Wandsworth"
                        },
                        new
                        {
                            Id = 202,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3395),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3397),
                            Name = "Magherafelt District Council"
                        },
                        new
                        {
                            Id = 203,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3402),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3404),
                            Name = "Manchester"
                        },
                        new
                        {
                            Id = 204,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3409),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3411),
                            Name = "Medway"
                        },
                        new
                        {
                            Id = 205,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3415),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3418),
                            Name = "Merthyr Tydfil County Borough"
                        },
                        new
                        {
                            Id = 206,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3423),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3425),
                            Name = "Metropolitan Borough of Wigan"
                        },
                        new
                        {
                            Id = 207,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3430),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3432),
                            Name = "Mid and East Antrim"
                        },
                        new
                        {
                            Id = 208,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3437),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3440),
                            Name = "Mid Ulster"
                        },
                        new
                        {
                            Id = 209,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3445),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3448),
                            Name = "Middlesbrough"
                        },
                        new
                        {
                            Id = 210,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3452),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3454),
                            Name = "Midlothian"
                        },
                        new
                        {
                            Id = 211,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3459),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3462),
                            Name = "Milton Keynes"
                        },
                        new
                        {
                            Id = 212,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3467),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3469),
                            Name = "Monmouthshire"
                        },
                        new
                        {
                            Id = 213,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3473),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3476),
                            Name = "Moray"
                        },
                        new
                        {
                            Id = 214,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3480),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3483),
                            Name = "Moyle District Council"
                        },
                        new
                        {
                            Id = 215,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3488),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3490),
                            Name = "Neath Port Talbot County Borough"
                        },
                        new
                        {
                            Id = 216,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3495),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3497),
                            Name = "Newcastle upon Tyne"
                        },
                        new
                        {
                            Id = 217,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3501),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3504),
                            Name = "Newport"
                        },
                        new
                        {
                            Id = 218,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3509),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3512),
                            Name = "Newry and Mourne District Council"
                        },
                        new
                        {
                            Id = 219,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3516),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3518),
                            Name = "Newry, Mourne and Down"
                        },
                        new
                        {
                            Id = 220,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3523),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3525),
                            Name = "Newtownabbey Borough Council"
                        },
                        new
                        {
                            Id = 221,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3529),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3533),
                            Name = "Norfolk"
                        },
                        new
                        {
                            Id = 222,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3538),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3540),
                            Name = "North Ayrshire"
                        },
                        new
                        {
                            Id = 223,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3545),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3547),
                            Name = "North Down Borough Council"
                        },
                        new
                        {
                            Id = 224,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3553),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3556),
                            Name = "North East Lincolnshire"
                        },
                        new
                        {
                            Id = 225,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3560),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3562),
                            Name = "North Lanarkshire"
                        },
                        new
                        {
                            Id = 226,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3580),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3582),
                            Name = "North Lincolnshire"
                        },
                        new
                        {
                            Id = 227,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3587),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3589),
                            Name = "North Somerset"
                        },
                        new
                        {
                            Id = 228,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3594),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3596),
                            Name = "North Tyneside"
                        },
                        new
                        {
                            Id = 229,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3600),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3603),
                            Name = "North Yorkshire"
                        },
                        new
                        {
                            Id = 230,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3607),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3609),
                            Name = "Northamptonshire"
                        },
                        new
                        {
                            Id = 231,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3614),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3616),
                            Name = "Northern Ireland"
                        },
                        new
                        {
                            Id = 232,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3622),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3625),
                            Name = "Northumberland"
                        },
                        new
                        {
                            Id = 233,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3629),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3632),
                            Name = "Nottinghamshire"
                        },
                        new
                        {
                            Id = 234,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3636),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3639),
                            Name = "Oldham"
                        },
                        new
                        {
                            Id = 235,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3643),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3645),
                            Name = "Omagh District Council"
                        },
                        new
                        {
                            Id = 236,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3651),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3653),
                            Name = "Orkney Islands"
                        },
                        new
                        {
                            Id = 237,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3658),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3661),
                            Name = "Outer Hebrides"
                        },
                        new
                        {
                            Id = 238,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3665),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3667),
                            Name = "Oxfordshire"
                        },
                        new
                        {
                            Id = 239,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3672),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3674),
                            Name = "Pembrokeshire"
                        },
                        new
                        {
                            Id = 240,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3680),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3682),
                            Name = "Perth and Kinross"
                        },
                        new
                        {
                            Id = 241,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3687),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3689),
                            Name = "Poole"
                        },
                        new
                        {
                            Id = 242,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3694),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3696),
                            Name = "Powys"
                        },
                        new
                        {
                            Id = 243,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3701),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3704),
                            Name = "Reading"
                        },
                        new
                        {
                            Id = 244,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3708),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3711),
                            Name = "Redcar and Cleveland"
                        },
                        new
                        {
                            Id = 245,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3715),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3717),
                            Name = "Renfrewshire"
                        },
                        new
                        {
                            Id = 246,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3723),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3725),
                            Name = "Rhondda Cynon Taf"
                        },
                        new
                        {
                            Id = 247,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3730),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3733),
                            Name = "Rochdale"
                        },
                        new
                        {
                            Id = 248,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3737),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3740),
                            Name = "Rotherham"
                        },
                        new
                        {
                            Id = 249,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3745),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3747),
                            Name = "Royal Borough of Greenwich"
                        },
                        new
                        {
                            Id = 250,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3752),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3754),
                            Name = "Royal Borough of Kensington and Chelsea"
                        },
                        new
                        {
                            Id = 251,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3759),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3761),
                            Name = "Royal Borough of Kingston upon Thames"
                        },
                        new
                        {
                            Id = 252,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3766),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3768),
                            Name = "Rutland"
                        },
                        new
                        {
                            Id = 253,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3772),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3775),
                            Name = "Saint Helena"
                        },
                        new
                        {
                            Id = 254,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3779),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3782),
                            Name = "Salford"
                        },
                        new
                        {
                            Id = 255,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3786),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3789),
                            Name = "Sandwell"
                        },
                        new
                        {
                            Id = 256,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3793),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3796),
                            Name = "Scotland"
                        },
                        new
                        {
                            Id = 257,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3800),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3803),
                            Name = "Scottish Borders"
                        },
                        new
                        {
                            Id = 258,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3807),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3811),
                            Name = "Sefton"
                        },
                        new
                        {
                            Id = 259,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3815),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3817),
                            Name = "Sheffield"
                        },
                        new
                        {
                            Id = 260,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3824),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3826),
                            Name = "Shetland Islands"
                        },
                        new
                        {
                            Id = 261,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3841),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3843),
                            Name = "Shropshire"
                        },
                        new
                        {
                            Id = 262,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3848),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3850),
                            Name = "Slough"
                        },
                        new
                        {
                            Id = 263,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3855),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3857),
                            Name = "Solihull"
                        },
                        new
                        {
                            Id = 264,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3863),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3866),
                            Name = "Somerset"
                        },
                        new
                        {
                            Id = 265,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3870),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3872),
                            Name = "South Ayrshire"
                        },
                        new
                        {
                            Id = 266,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3877),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3880),
                            Name = "South Gloucestershire"
                        },
                        new
                        {
                            Id = 267,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3884),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3888),
                            Name = "South Lanarkshire"
                        },
                        new
                        {
                            Id = 268,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3892),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3895),
                            Name = "South Tyneside"
                        },
                        new
                        {
                            Id = 269,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3899),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3902),
                            Name = "Southend-on-Sea"
                        },
                        new
                        {
                            Id = 270,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3907),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3910),
                            Name = "St Helens"
                        },
                        new
                        {
                            Id = 271,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3914),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3917),
                            Name = "Staffordshire"
                        },
                        new
                        {
                            Id = 272,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3922),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3924),
                            Name = "Stirling"
                        },
                        new
                        {
                            Id = 273,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3929),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3933),
                            Name = "Stockport"
                        },
                        new
                        {
                            Id = 274,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3938),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3940),
                            Name = "Stockton-on-Tees"
                        },
                        new
                        {
                            Id = 275,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3944),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3947),
                            Name = "Strabane District Council"
                        },
                        new
                        {
                            Id = 276,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3952),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3954),
                            Name = "Suffolk"
                        },
                        new
                        {
                            Id = 277,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3959),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3961),
                            Name = "Surrey"
                        },
                        new
                        {
                            Id = 278,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3966),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3968),
                            Name = "Swindon"
                        },
                        new
                        {
                            Id = 279,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3973),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3976),
                            Name = "Tameside"
                        },
                        new
                        {
                            Id = 280,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3982),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3985),
                            Name = "Telford and Wrekin"
                        },
                        new
                        {
                            Id = 281,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3990),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3992),
                            Name = "Thurrock"
                        },
                        new
                        {
                            Id = 282,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(3997),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4000),
                            Name = "Torbay"
                        },
                        new
                        {
                            Id = 283,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4004),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4007),
                            Name = "Torfaen"
                        },
                        new
                        {
                            Id = 284,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4012),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4015),
                            Name = "Trafford"
                        },
                        new
                        {
                            Id = 285,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4020),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4023),
                            Name = "United Kingdom"
                        },
                        new
                        {
                            Id = 286,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4028),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4030),
                            Name = "Vale of Glamorgan"
                        },
                        new
                        {
                            Id = 287,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4036),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4038),
                            Name = "Wakefield"
                        },
                        new
                        {
                            Id = 288,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4043),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4045),
                            Name = "Wales"
                        },
                        new
                        {
                            Id = 289,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4050),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4052),
                            Name = "Walsall"
                        },
                        new
                        {
                            Id = 290,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4060),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4063),
                            Name = "Warrington"
                        },
                        new
                        {
                            Id = 291,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4068),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4070),
                            Name = "Warwickshire"
                        },
                        new
                        {
                            Id = 292,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4075),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4077),
                            Name = "West Berkshire"
                        },
                        new
                        {
                            Id = 293,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4082),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4084),
                            Name = "West Dunbartonshire"
                        },
                        new
                        {
                            Id = 294,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4089),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4092),
                            Name = "West Lothian"
                        },
                        new
                        {
                            Id = 295,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4096),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4099),
                            Name = "West Sussex"
                        },
                        new
                        {
                            Id = 296,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4114),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4117),
                            Name = "Wiltshire"
                        },
                        new
                        {
                            Id = 297,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4123),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4125),
                            Name = "Windsor and Maidenhead"
                        },
                        new
                        {
                            Id = 298,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4130),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4135),
                            Name = "Wirral"
                        },
                        new
                        {
                            Id = 299,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4139),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4141),
                            Name = "Wokingham"
                        },
                        new
                        {
                            Id = 300,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4146),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4148),
                            Name = "Worcestershire"
                        },
                        new
                        {
                            Id = 301,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4153),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4156),
                            Name = "Wrexham County Borough"
                        },
                        new
                        {
                            Id = 302,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4161),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4163),
                            Name = "Alabama"
                        },
                        new
                        {
                            Id = 303,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4168),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4170),
                            Name = "Alaska"
                        },
                        new
                        {
                            Id = 304,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4177),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4179),
                            Name = "American Samoa"
                        },
                        new
                        {
                            Id = 305,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4184),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4188),
                            Name = "Arizona"
                        },
                        new
                        {
                            Id = 306,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4194),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4198),
                            Name = "Arkansas"
                        },
                        new
                        {
                            Id = 307,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4203),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4205),
                            Name = "Baker Island"
                        },
                        new
                        {
                            Id = 308,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4210),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4212),
                            Name = "California"
                        },
                        new
                        {
                            Id = 309,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4217),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4219),
                            Name = "Colorado"
                        },
                        new
                        {
                            Id = 310,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4224),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4227),
                            Name = "Connecticut"
                        },
                        new
                        {
                            Id = 311,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4231),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4233),
                            Name = "Delaware"
                        },
                        new
                        {
                            Id = 312,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4238),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4241),
                            Name = "District of Columbia"
                        },
                        new
                        {
                            Id = 313,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4246),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4248),
                            Name = "Florida"
                        },
                        new
                        {
                            Id = 314,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4253),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4255),
                            Name = "Georgia"
                        },
                        new
                        {
                            Id = 315,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4259),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4262),
                            Name = "Guam"
                        },
                        new
                        {
                            Id = 316,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4267),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4269),
                            Name = "Hawaii"
                        },
                        new
                        {
                            Id = 317,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4274),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4277),
                            Name = "Howland Island"
                        },
                        new
                        {
                            Id = 318,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4281),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4283),
                            Name = "Idaho"
                        },
                        new
                        {
                            Id = 319,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4288),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4290),
                            Name = "Illinois"
                        },
                        new
                        {
                            Id = 320,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4295),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4297),
                            Name = "Indiana"
                        },
                        new
                        {
                            Id = 321,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4302),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4305),
                            Name = "Iowa"
                        },
                        new
                        {
                            Id = 322,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4309),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4313),
                            Name = "Jarvis Island"
                        },
                        new
                        {
                            Id = 323,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4317),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4319),
                            Name = "Johnston Atoll"
                        },
                        new
                        {
                            Id = 324,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4324),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4327),
                            Name = "Kansas"
                        },
                        new
                        {
                            Id = 325,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4331),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4334),
                            Name = "Kentucky"
                        },
                        new
                        {
                            Id = 326,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4340),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4343),
                            Name = "Kingman Reef"
                        },
                        new
                        {
                            Id = 327,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4348),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4350),
                            Name = "Louisiana"
                        },
                        new
                        {
                            Id = 328,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4354),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4357),
                            Name = "Maine"
                        },
                        new
                        {
                            Id = 329,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4361),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4364),
                            Name = "Maryland"
                        },
                        new
                        {
                            Id = 330,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4368),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4371),
                            Name = "Massachusetts"
                        },
                        new
                        {
                            Id = 331,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4386),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4388),
                            Name = "Michigan"
                        },
                        new
                        {
                            Id = 332,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4392),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4395),
                            Name = "Midway Atoll"
                        },
                        new
                        {
                            Id = 333,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4400),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4402),
                            Name = "Minnesota"
                        },
                        new
                        {
                            Id = 334,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4407),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4410),
                            Name = "Mississippi"
                        },
                        new
                        {
                            Id = 335,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4415),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4418),
                            Name = "Missouri"
                        },
                        new
                        {
                            Id = 336,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4422),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4425),
                            Name = "Montana"
                        },
                        new
                        {
                            Id = 337,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4429),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4432),
                            Name = "Navassa Island"
                        },
                        new
                        {
                            Id = 338,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4436),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4438),
                            Name = "Nebraska"
                        },
                        new
                        {
                            Id = 339,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4443),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4445),
                            Name = "Nevada"
                        },
                        new
                        {
                            Id = 340,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4451),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4454),
                            Name = "New Hampshire"
                        },
                        new
                        {
                            Id = 341,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4458),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4460),
                            Name = "New Jersey"
                        },
                        new
                        {
                            Id = 342,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4465),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4468),
                            Name = "New Mexico"
                        },
                        new
                        {
                            Id = 343,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4472),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4475),
                            Name = "New York"
                        },
                        new
                        {
                            Id = 344,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4480),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4482),
                            Name = "North Carolina"
                        },
                        new
                        {
                            Id = 345,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4487),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4490),
                            Name = "North Dakota"
                        },
                        new
                        {
                            Id = 346,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4494),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4497),
                            Name = "Northern Mariana Islands"
                        },
                        new
                        {
                            Id = 347,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4503),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4506),
                            Name = "Ohio"
                        },
                        new
                        {
                            Id = 348,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4511),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4513),
                            Name = "Oklahoma"
                        },
                        new
                        {
                            Id = 349,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4518),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4520),
                            Name = "Oregon"
                        },
                        new
                        {
                            Id = 350,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4525),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4527),
                            Name = "Palmyra Atoll"
                        },
                        new
                        {
                            Id = 351,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4532),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4534),
                            Name = "Pennsylvania"
                        },
                        new
                        {
                            Id = 352,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4538),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4541),
                            Name = "Puerto Rico"
                        },
                        new
                        {
                            Id = 353,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4546),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4549),
                            Name = "Rhode Island"
                        },
                        new
                        {
                            Id = 354,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4553),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4556),
                            Name = "South Carolina"
                        },
                        new
                        {
                            Id = 355,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4562),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4564),
                            Name = "South Dakota"
                        },
                        new
                        {
                            Id = 356,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4569),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4571),
                            Name = "Tennessee"
                        },
                        new
                        {
                            Id = 357,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4575),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4578),
                            Name = "Texas"
                        },
                        new
                        {
                            Id = 358,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4582),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4585),
                            Name = "United States Minor Outlying Islands"
                        },
                        new
                        {
                            Id = 359,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4589),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4592),
                            Name = "United States Virgin Islands"
                        },
                        new
                        {
                            Id = 360,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4597),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4599),
                            Name = "Utah"
                        },
                        new
                        {
                            Id = 361,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4604),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4606),
                            Name = "Vermont"
                        },
                        new
                        {
                            Id = 362,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4611),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4614),
                            Name = "Virginia"
                        },
                        new
                        {
                            Id = 363,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4618),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4620),
                            Name = "Wake Island"
                        },
                        new
                        {
                            Id = 364,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4625),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4627),
                            Name = "Washington"
                        },
                        new
                        {
                            Id = 365,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4632),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4635),
                            Name = "West Virginia"
                        },
                        new
                        {
                            Id = 366,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4651),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4653),
                            Name = "Wisconsin"
                        },
                        new
                        {
                            Id = 367,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4657),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 692, DateTimeKind.Local).AddTicks(4660),
                            Name = "Wyoming"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("MM.ClientModels.Tax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Tax");
                });

            modelBuilder.Entity("MM.ClientModels.TaxPolicy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("TaxPolicy");
                });

            modelBuilder.Entity("MM.ClientModels.TaxScope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("TaxScopeCode")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("TaxScope");
                });

            modelBuilder.Entity("MM.ClientModels.Theme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("ThemeNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Theme");
                });

            modelBuilder.Entity("MM.ClientModels.TimeFormat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("TimeFormat");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 724, DateTimeKind.Local).AddTicks(1273),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 724, DateTimeKind.Local).AddTicks(2726),
                            Name = "12:00 AM/PM"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 724, DateTimeKind.Local).AddTicks(4202),
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 724, DateTimeKind.Local).AddTicks(4254),
                            Name = "24 Hours"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Title", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Title");

                    b.HasData(
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 784, DateTimeKind.Local).AddTicks(9814),
                            Description = "Mr",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 785, DateTimeKind.Local).AddTicks(1082),
                            Name = "Mr"
                        },
                        new
                        {
                            Id = 20,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 785, DateTimeKind.Local).AddTicks(2371),
                            Description = "Mrs",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 785, DateTimeKind.Local).AddTicks(2405),
                            Name = "Mrs"
                        },
                        new
                        {
                            Id = 30,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 785, DateTimeKind.Local).AddTicks(2430),
                            Description = "Ms",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 785, DateTimeKind.Local).AddTicks(2433),
                            Name = "Ms"
                        },
                        new
                        {
                            Id = 40,
                            CreatedOn = new DateTime(2020, 7, 13, 8, 51, 13, 785, DateTimeKind.Local).AddTicks(2439),
                            Description = "Dr",
                            ModifiedOn = new DateTime(2020, 7, 13, 8, 51, 13, 785, DateTimeKind.Local).AddTicks(2442),
                            Name = "Dr"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.UserLoginAudit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("LoginTime")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LogoutTime")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserLoginAudit");
                });

            modelBuilder.Entity("MM.ClientModels.UserRoleXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoleXRef");
                });

            modelBuilder.Entity("MM.ClientModels.Address", b =>
                {
                    b.HasOne("MM.ClientModels.AddressType", "AddressType")
                        .WithMany("Address")
                        .HasForeignKey("AddressTypeId")
                        .HasConstraintName("FK_Address_AddressType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.City", "City")
                        .WithMany("Address")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_Address_City");

                    b.HasOne("MM.ClientModels.Country", "Country")
                        .WithMany("Address")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_Address_Country")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.State", "State")
                        .WithMany("Address")
                        .HasForeignKey("StateId")
                        .HasConstraintName("FK_Address_State")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.BankingDetail", b =>
                {
                    b.HasOne("MM.ClientModels.AccountType", "AccountType")
                        .WithMany("BankingDetail")
                        .HasForeignKey("AccountTypeId")
                        .HasConstraintName("FK_BankingDetail_AccountType")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.Billing", b =>
                {
                    b.HasOne("MM.ClientModels.Invoice", "Invoice")
                        .WithMany("Billing")
                        .HasForeignKey("InvoiceId")
                        .HasConstraintName("FK_Payment_Invoice");

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("Billing")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_Payment_Member")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PaymentGateway", "PaymentGateway")
                        .WithMany("Billing")
                        .HasForeignKey("PaymentGatewayId")
                        .HasConstraintName("FK_Payment_PaymentGateway")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("Billing")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_Billing_RelatedTo")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.BillingCommunication", b =>
                {
                    b.HasOne("MM.ClientModels.Billing", "Billing")
                        .WithOne("BillingCommunication")
                        .HasForeignKey("MM.ClientModels.BillingCommunication", "Id")
                        .HasConstraintName("FK_PaymentCommunication_Payment")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.City", b =>
                {
                    b.HasOne("MM.ClientModels.State", "State")
                        .WithMany("City")
                        .HasForeignKey("StateId")
                        .HasConstraintName("FK_City_State");
                });

            modelBuilder.Entity("MM.ClientModels.ClientOrganization", b =>
                {
                    b.HasOne("MM.ClientModels.ClientTimeZone", "ClientTimeZone")
                        .WithMany("Client")
                        .HasForeignKey("ClientTimeZoneId")
                        .HasConstraintName("FK_Client_TimeZone");

                    b.HasOne("MM.ClientModels.Currency", "Currency")
                        .WithMany("Client")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_Client_Currency");

                    b.HasOne("MM.ClientModels.DateSetting", "DateSetting")
                        .WithMany("Client")
                        .HasForeignKey("DateSettingId")
                        .HasConstraintName("FK_Client_DateSetting");

                    b.HasOne("MM.ClientModels.TimeFormat", "TimeFormat")
                        .WithMany("Client")
                        .HasForeignKey("TimeFormatId")
                        .HasConstraintName("FK_Client_TimeFormat");
                });

            modelBuilder.Entity("MM.ClientModels.ClientPlanHistory", b =>
                {
                    b.HasOne("MM.ClientModels.ClientUser", "BillingUser")
                        .WithMany("ClientPlanHistory")
                        .HasForeignKey("BillingUserId")
                        .HasConstraintName("FK_ClientPlanHistory_User")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.ClientUser", b =>
                {
                    b.HasOne("MM.ClientModels.Designation", "Designation")
                        .WithMany("User")
                        .HasForeignKey("DesignationId")
                        .HasConstraintName("FK_User_Designation");

                    b.HasOne("MM.ClientModels.Gender", "Gender")
                        .WithMany("User")
                        .HasForeignKey("GenderId")
                        .HasConstraintName("FK_User_Gender")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.ReferralType", "ReferralType")
                        .WithMany("User")
                        .HasForeignKey("ReferralTypeId")
                        .HasConstraintName("FK_User_ReferralType");

                    b.HasOne("MM.ClientModels.Role", "Role")
                        .WithMany("User")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_User_Role")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Title", "Title")
                        .WithMany("User")
                        .HasForeignKey("TitleId")
                        .HasConstraintName("FK_User_Title")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.CommunicationPreference", b =>
                {
                    b.HasOne("MM.ClientModels.CommunicationType", "CommunicationType")
                        .WithMany("CommunicationPreference")
                        .HasForeignKey("CommunicationTypeId")
                        .HasConstraintName("FK_CommunicationPreference_CommunicationType")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.Cpd", b =>
                {
                    b.HasOne("MM.ClientModels.ClientUser", "CpdawardedBy")
                        .WithMany("Cpd")
                        .HasForeignKey("CpdawardedById")
                        .HasConstraintName("FK_CPD_User")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("Cpd")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_CPD_Member")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("Cpd")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_CPD_RelatedTo")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberCategorySetUp", b =>
                {
                    b.HasOne("MM.ClientModels.MemberCategory", "MemberCategory")
                        .WithMany("CpdmemberCategorySetUp")
                        .HasForeignKey("MemberCategoryId")
                        .HasConstraintName("FK_CPDMemberCategorySetUp_MemberCategory");

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("CpdmemberCategorySetUp")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_CPDMemberCategorySetUp_RelatedTo")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberLevelSetUp", b =>
                {
                    b.HasOne("MM.ClientModels.MemberLevel", "MemberLevel")
                        .WithMany("CpdmemberLevelSetUp")
                        .HasForeignKey("MemberLevelId")
                        .HasConstraintName("FK_CPDMemberLevelSetUp_MemberLevel");

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("CpdmemberLevelSetUp")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_CPDMemberLevelSetUp_RelatedTo")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberTeamSetUp", b =>
                {
                    b.HasOne("MM.ClientModels.MemberTeam", "MemberTeam")
                        .WithMany("CpdmemberTeamSetUp")
                        .HasForeignKey("MemberTeamId")
                        .HasConstraintName("FK_CPDMemberTeamSetUp_MemberTeam");

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("CpdmemberTeamSetUp")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_CPDMemberTeamSetUp_RelatedTo")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberTypeSetUp", b =>
                {
                    b.HasOne("MM.ClientModels.MemberType", "MemberType")
                        .WithMany("CpdmemberTypeSetUp")
                        .HasForeignKey("MemberTypeId")
                        .HasConstraintName("FK_CPDMemberTypeSetUp_MemberType");

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("CpdmemberTypeSetUp")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_CPDMemberTypeSetUp_RelatedTo")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.Donation", b =>
                {
                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("Donation")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_Donation_Member")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PromotionDetail", "PromotionDetail")
                        .WithMany("Donation")
                        .HasForeignKey("PromotionDetailId")
                        .HasConstraintName("FK_Donation_PromotionDetail");
                });

            modelBuilder.Entity("MM.ClientModels.EmailCcrule", b =>
                {
                    b.HasOne("MM.ClientModels.EmailType", "EmailType")
                        .WithMany("EmailCcrule")
                        .HasForeignKey("EmailTypeId")
                        .HasConstraintName("FK_EmailCCRule_EmailType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Role", "Role")
                        .WithMany("EmailCcrule")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_EmailCCRule_Role")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EmailTemplateContent", b =>
                {
                    b.HasOne("MM.ClientModels.EmailTemplateName", "EmailTemplateName")
                        .WithMany("EmailTemplateContent")
                        .HasForeignKey("EmailTemplateNameId")
                        .HasConstraintName("FK_EmailTemplateContent_EmailTemplateName")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EquipmentCount", b =>
                {
                    b.HasOne("MM.ClientModels.Equipment", "Equipment")
                        .WithMany("EquipmentCount")
                        .HasForeignKey("EquipmentId")
                        .HasConstraintName("FK_EquipmentCount_Equipment")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.Event", b =>
                {
                    b.HasOne("MM.ClientModels.Address", "Address")
                        .WithMany("Event")
                        .HasForeignKey("AddressId")
                        .HasConstraintName("FK_Event_Address")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.ClientUser", "Organizer")
                        .WithMany("Event")
                        .HasForeignKey("OrganizerId")
                        .HasConstraintName("FK_Event_User")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.ClientTimeZone", "TimeZone")
                        .WithMany("Event")
                        .HasForeignKey("TimeZoneId")
                        .HasConstraintName("FK_Event_TimeZone")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventAccess", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventAccess")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventAccess_Event")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventAttendance", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventAttendance")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventAttendance_Event")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("EventAttendance")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_EventAttendance_Member")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventCommunication", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventCommunication")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventCommunication_Event")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventEquipment", b =>
                {
                    b.HasOne("MM.ClientModels.Equipment", "Equipment")
                        .WithMany("EventEquipment")
                        .HasForeignKey("EquipmentId")
                        .HasConstraintName("FK_EventEquipmentRequirement_Equipment")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventEquipment")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventEquipmentRequirement_Event")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventMinute", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventMinute")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventMinute_Event")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.EventMinuteStatus", "MinuteStatus")
                        .WithMany("EventMinute")
                        .HasForeignKey("MinuteStatusId")
                        .HasConstraintName("FK_EventMinute_EventMinuteStatus")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventPreRequisiteEvent", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventPreRequisiteEventEvent")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventPreRequisiteEvent_Event")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Event", "PreRequisiteEvent")
                        .WithMany("EventPreRequisiteEventPreRequisiteEvent")
                        .HasForeignKey("PreRequisiteEventId")
                        .HasConstraintName("FK_EventPreRequisiteEvent_PreRequisiteEventId_Event")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventRegistration", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventRegistration")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventRegistration_Event")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.EventResponseType", "EventResponseType")
                        .WithMany("EventRegistration")
                        .HasForeignKey("EventResponseTypeId")
                        .HasConstraintName("FK_EventRegistration_EventResponseType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("EventRegistration")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_EventRegistration_Member")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventRestrictionList", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventRestrictionList")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventRestrictionList_Event")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.MemberLevel", "MemberLevel")
                        .WithMany("EventRestrictionList")
                        .HasForeignKey("MemberLevelId")
                        .HasConstraintName("FK_EventRestrictionList_MemberLevel");

                    b.HasOne("MM.ClientModels.MemberTeam", "MemberTeam")
                        .WithMany("EventRestrictionList")
                        .HasForeignKey("MemberTeamId")
                        .HasConstraintName("FK_EventRestrictionList_MemberTeam");
                });

            modelBuilder.Entity("MM.ClientModels.EventRole", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventRole")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventRole_Event")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventRoleUserXref", b =>
                {
                    b.HasOne("MM.ClientModels.EventRole", "EventRole")
                        .WithMany("EventRoleUserXref")
                        .HasForeignKey("EventRoleId")
                        .HasConstraintName("FK_EventRoleUserXRef_EventRole")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.ClientUser", "User")
                        .WithMany("EventRoleUserXref")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_EventRoleUserXRef_User")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.Invoice", b =>
                {
                    b.HasOne("MM.ClientModels.InvoiceStatus", "InvoiceStatus")
                        .WithMany("Invoice")
                        .HasForeignKey("InvoiceStatusId")
                        .HasConstraintName("FK_Invoice_InvoiceStatus")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("Invoice")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_Invoice_Member")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PaymentGateway", "PaymentGateway")
                        .WithMany("Invoice")
                        .HasForeignKey("PaymentGatewayId")
                        .HasConstraintName("FK_Invoice_PaymentGateway")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("Invoice")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_Invoice_RelatedTo");
                });

            modelBuilder.Entity("MM.ClientModels.LandingPage", b =>
                {
                    b.HasOne("MM.ClientModels.MemberType", "MemberType")
                        .WithMany("LandingPage")
                        .HasForeignKey("MemberTypeId")
                        .HasConstraintName("FK_LandingPage_MemberType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Page", "Page")
                        .WithMany("LandingPage")
                        .HasForeignKey("PageId")
                        .HasConstraintName("FK_LandingPage_Page")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.MarketingGroupXref", b =>
                {
                    b.HasOne("MM.ClientModels.MarketingGroup", "MarketingGroup")
                        .WithMany("MarketingGroupXref")
                        .HasForeignKey("MarketingGroupId")
                        .HasConstraintName("FK_MarketingGroupXRef_MarketingGroup")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MarketingGroupXref")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MarketingGroupXRef_Member")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.MarketingProfileXref", b =>
                {
                    b.HasOne("MM.ClientModels.MarketingProfile", "MarketingProfile")
                        .WithMany("MarketingProfileXref")
                        .HasForeignKey("MarketingProfileId")
                        .HasConstraintName("FK_MarketingProfileXRef_MarketingProfile")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MarketingProfileXref")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MarketingProfileXRef_Member")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.Member", b =>
                {
                    b.HasOne("MM.ClientModels.Gender", "Gender")
                        .WithMany("Member")
                        .HasForeignKey("GenderId")
                        .HasConstraintName("FK_Member_Gender")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.MemberBranch", "MemberBranch")
                        .WithMany("Member")
                        .HasForeignKey("MemberBranchId")
                        .HasConstraintName("FK_Member_MemberBranch");

                    b.HasOne("MM.ClientModels.MemberLevel", "MemberLevel")
                        .WithMany("Member")
                        .HasForeignKey("MemberLevelId")
                        .HasConstraintName("FK_Member_MemberLevel");

                    b.HasOne("MM.ClientModels.MemberStatus", "MemberStatus")
                        .WithMany("Member")
                        .HasForeignKey("MemberStatusId")
                        .HasConstraintName("FK_Member_MemberStatus");

                    b.HasOne("MM.ClientModels.MemberTeam", "MemberTeam")
                        .WithMany("Member")
                        .HasForeignKey("MemberTeamId")
                        .HasConstraintName("FK_Member_MemberTeam");

                    b.HasOne("MM.ClientModels.MemberType", "MemberType")
                        .WithMany("Member")
                        .HasForeignKey("MemberTypeId")
                        .HasConstraintName("FK_Member_MemberType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Organization", "Organization")
                        .WithMany("Member")
                        .HasForeignKey("OrganizationId")
                        .HasConstraintName("FK_Member_Organization");

                    b.HasOne("MM.ClientModels.OrganizationStructure", "OrganizationStructure")
                        .WithMany("Member")
                        .HasForeignKey("OrganizationStructureId")
                        .HasConstraintName("FK_Member_OrganizationStructure");

                    b.HasOne("MM.ClientModels.ReferralType", "ReferralType")
                        .WithMany("Member")
                        .HasForeignKey("ReferralTypeId")
                        .HasConstraintName("FK_Member_ReferralType");

                    b.HasOne("MM.ClientModels.Title", "Title")
                        .WithMany("Member")
                        .HasForeignKey("TitleId")
                        .HasConstraintName("FK_Member_Title")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.MemberAddress", b =>
                {
                    b.HasOne("MM.ClientModels.AddressType", "AddressType")
                        .WithMany("MemberAddress")
                        .HasForeignKey("AddressTypeId")
                        .HasConstraintName("FK_MemberAddress_AddressType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.MemberBranch", "Branch")
                        .WithMany("MemberAddress")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_MemberAddress_MemberBranch");

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MemberAddress")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MemberAddress_Member");

                    b.HasOne("MM.ClientModels.Organization", "Organization")
                        .WithMany("MemberAddress")
                        .HasForeignKey("OrganizationId")
                        .HasConstraintName("FK_MemberAddress_Organization");
                });

            modelBuilder.Entity("MM.ClientModels.MemberAffliationXref", b =>
                {
                    b.HasOne("MM.ClientModels.Affliation", "Affliation")
                        .WithMany("MemberAffliationXref")
                        .HasForeignKey("AffliationId")
                        .HasConstraintName("FK_MemberAffliationXRef_Affliation");

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MemberAffliationXref")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MemberAffliationXRef_Member");
                });

            modelBuilder.Entity("MM.ClientModels.MemberBankingDetail", b =>
                {
                    b.HasOne("MM.ClientModels.AccountType", "AccountType")
                        .WithMany("MemberBankingDetail")
                        .HasForeignKey("AccountTypeId")
                        .HasConstraintName("FK_MemberBankingDetail_AccountType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MemberBankingDetail")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MemberBankingDetail_Member")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.MemberBranch", b =>
                {
                    b.HasOne("MM.ClientModels.Organization", "Organization")
                        .WithMany("MemberBranch")
                        .HasForeignKey("OrganizationId")
                        .HasConstraintName("FK_MemberBranch_Organization")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.MemberCommunicationPreference", b =>
                {
                    b.HasOne("MM.ClientModels.CommunicationType", "CommunicationType")
                        .WithMany("MemberCommunicationPreference")
                        .HasForeignKey("CommunicationTypeId")
                        .HasConstraintName("FK_MemberCommunicationPreference_CommunicationType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MemberCommunicationPreference")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MemberCommunicationPreference_Member")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.MemberFile", b =>
                {
                    b.HasOne("MM.ClientModels.FileType", "FileType")
                        .WithMany("MemberFile")
                        .HasForeignKey("FileTypeId")
                        .HasConstraintName("FK_MemberFile_FileType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MemberFile")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MemberFile_Member")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.MemberPlanHistory", b =>
                {
                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MemberPlanHistory")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MembershipHistory_Member");

                    b.HasOne("MM.ClientModels.PlanDetail", "MemberPlanDetail")
                        .WithMany("MemberPlanHistory")
                        .HasForeignKey("MemberPlanDetailId")
                        .HasConstraintName("FK_MemberPlanHistory_PlanDetail")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PlanMaster", "MemberPlanDetailNavigation")
                        .WithMany("MemberPlanHistory")
                        .HasForeignKey("MemberPlanDetailId")
                        .HasConstraintName("FK_MembershipHistory_PlanMaster")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Organization", "Organization")
                        .WithMany("MemberPlanHistory")
                        .HasForeignKey("OrganizationId")
                        .HasConstraintName("FK_MembershipHistory_Organization");
                });

            modelBuilder.Entity("MM.ClientModels.MemberQualificationXref", b =>
                {
                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MemberQualificationXref")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MemberQualificationXRef_Member")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Qualification", "Qualification")
                        .WithMany("MemberQualificationXref")
                        .HasForeignKey("QualificationId")
                        .HasConstraintName("FK_MemberQualificationXRef_Qualification");
                });

            modelBuilder.Entity("MM.ClientModels.MemberType", b =>
                {
                    b.HasOne("MM.ClientModels.MemberCategory", "MemberCategory")
                        .WithMany("MemberType")
                        .HasForeignKey("MemberCategoryId")
                        .HasConstraintName("FK_MemberType_MemberCategory")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.PaymentSetting", b =>
                {
                    b.HasOne("MM.ClientModels.Currency", "Currency")
                        .WithMany("PaymentSetting")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_PaymentSetting_Currency");
                });

            modelBuilder.Entity("MM.ClientModels.PaymentSettingAllowedCard", b =>
                {
                    b.HasOne("MM.ClientModels.PaymentCard", "PaymentCard")
                        .WithMany("PaymentSettingAllowedCard")
                        .HasForeignKey("PaymentCardId")
                        .HasConstraintName("FK_PaymentSettingAllowedCard_PaymentCard")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PaymentSetting", "PaymentSetting")
                        .WithMany("PaymentSettingAllowedCard")
                        .HasForeignKey("PaymentSettingId")
                        .HasConstraintName("FK_PaymentSettingAllowedCard_PaymentSetting")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.PlanCanChangeToXref", b =>
                {
                    b.HasOne("MM.ClientModels.PlanMaster", "FromPlanMaster")
                        .WithMany("PlanCanChangeToXrefFromPlanMaster")
                        .HasForeignKey("FromPlanMasterId")
                        .HasConstraintName("FK_MemberPlanCanChangeTo_PlanMaster")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PlanMaster", "ToPlanMaster")
                        .WithMany("PlanCanChangeToXrefToPlanMaster")
                        .HasForeignKey("ToPlanMasterId")
                        .HasConstraintName("FK_MemberPlanCanChangeTo_PlanMaster2")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.PlanDetail", b =>
                {
                    b.HasOne("MM.ClientModels.Currency", "Currency")
                        .WithMany("PlanDetail")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_PlanDetail_Currency")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PlanFrequency", "PlanFrequency")
                        .WithMany("PlanDetail")
                        .HasForeignKey("PlanFrequencyId")
                        .HasConstraintName("FK_PlanDetail_PlanFrequency")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PlanMaster", "PlanMaster")
                        .WithMany("PlanDetail")
                        .HasForeignKey("PlanMasterId")
                        .HasConstraintName("FK_PlanDetail_PlanMaster")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.PlanMaster", b =>
                {
                    b.HasOne("MM.ClientModels.MemberCategory", "MemberCategory")
                        .WithMany("PlanMaster")
                        .HasForeignKey("MemberCategoryId")
                        .HasConstraintName("FK_PlanMaster_MemberCategory")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PaymentSetting", "PaymentMethod")
                        .WithMany("PlanMaster")
                        .HasForeignKey("PaymentMethodId")
                        .HasConstraintName("FK_PlanMaster_PaymentSetting")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.PromotionDetail", b =>
                {
                    b.HasOne("MM.ClientModels.MemberLevel", "MemberLevel")
                        .WithMany("PromotionDetail")
                        .HasForeignKey("MemberLevelId")
                        .HasConstraintName("FK_PromotionDetail_MemberLevel");

                    b.HasOne("MM.ClientModels.MemberType", "MemberType")
                        .WithMany("PromotionDetail")
                        .HasForeignKey("MemberTypeId")
                        .HasConstraintName("FK_PromotionDetail_MemberType");

                    b.HasOne("MM.ClientModels.PromotionMaster", "PromotionMaster")
                        .WithMany("PromotionDetail")
                        .HasForeignKey("PromotionMasterId")
                        .HasConstraintName("FK_PromotionDetail_PromotionMaster")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.PromotionResponse", b =>
                {
                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("PromotionResponse")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_PromotionResponse_Member")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PromotionMaster", "PromotionMaster")
                        .WithMany("PromotionResponse")
                        .HasForeignKey("PromotionMasterId")
                        .HasConstraintName("FK_PromotionResponse_PromotionMaster")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PromotionResponseType", "PromotionResponseTypeNavigation")
                        .WithMany("PromotionResponse")
                        .HasForeignKey("PromotionResponseType")
                        .HasConstraintName("FK_PromotionResponse_PromotionResponseType")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.Refund", b =>
                {
                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("Refund")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_Refund_Member")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PaymentGateway", "PaymentGateway")
                        .WithMany("Refund")
                        .HasForeignKey("PaymentGatewayId")
                        .HasConstraintName("FK_Refund_PaymentGateway")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("Refund")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_Refund_RelatedTo");
                });

            modelBuilder.Entity("MM.ClientModels.RolePermissionXref", b =>
                {
                    b.HasOne("MM.ClientModels.Permission", "Permission")
                        .WithMany("RolePermissionXref")
                        .HasForeignKey("Permissionid")
                        .HasConstraintName("FK_RolePermissionXRef_Permission")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Role", "Role")
                        .WithMany("RolePermissionXref")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_RolePermissionXRef_Role")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.State", b =>
                {
                    b.HasOne("MM.ClientModels.Country", "Country")
                        .WithMany("State")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_State_Country")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.UserRoleXref", b =>
                {
                    b.HasOne("MM.ClientModels.Role", "Role")
                        .WithMany("UserRoleXref")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_UserRole_Role")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.ClientUser", "User")
                        .WithMany("UserRoleXref")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserRole_User")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
