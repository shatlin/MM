// <auto-generated />
using System;
using MM.ClientModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MM.Migrations.ClientDb
{
    [DbContext(typeof(ClientDbContext))]
    partial class ClientDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MM.ClientModels.AccountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("AccountType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 212, DateTimeKind.Local).AddTicks(7903),
                            Description = "Savings Account",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 217, DateTimeKind.Local).AddTicks(3217),
                            Name = "Savings Account"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 217, DateTimeKind.Local).AddTicks(5088),
                            Description = "Cheque Account",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 217, DateTimeKind.Local).AddTicks(5125),
                            Name = "Cheque Account"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 217, DateTimeKind.Local).AddTicks(5152),
                            Description = "Corporante Account",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 217, DateTimeKind.Local).AddTicks(5156),
                            Name = "Corporante Account"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 217, DateTimeKind.Local).AddTicks(5162),
                            Description = "Business Account",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 217, DateTimeKind.Local).AddTicks(5165),
                            Name = "Business Account"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("AddressLine2")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("AddressTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BuidlingName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("ComplexName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Gpscoordinates")
                        .HasColumnName("GPSCoordinates")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("PostalCode")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("PrimaryContactNo")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("PrimaryEmail")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("SecondaryContactNo")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("SecondaryEmail")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("StreetName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressTypeId");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("StateId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("MM.ClientModels.AddressType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("AddressType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 255, DateTimeKind.Local).AddTicks(1630),
                            Description = "Postal Address",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 255, DateTimeKind.Local).AddTicks(1673),
                            Name = "Postal Address"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 255, DateTimeKind.Local).AddTicks(1686),
                            Description = "Physical Account",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 255, DateTimeKind.Local).AddTicks(1689),
                            Name = "Physical Address"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 255, DateTimeKind.Local).AddTicks(1696),
                            Description = "Billing Address",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 255, DateTimeKind.Local).AddTicks(1698),
                            Name = "Billing Address"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 255, DateTimeKind.Local).AddTicks(1704),
                            Description = "Business Address",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 255, DateTimeKind.Local).AddTicks(1707),
                            Name = "Business Address"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 255, DateTimeKind.Local).AddTicks(1714),
                            Description = "Shipping Address",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 255, DateTimeKind.Local).AddTicks(1717),
                            Name = "Shipping Address"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 255, DateTimeKind.Local).AddTicks(1724),
                            Description = "Contract Address",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 255, DateTimeKind.Local).AddTicks(1727),
                            Name = "Contract Address"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Affliation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Affliation");
                });

            modelBuilder.Entity("MM.ClientModels.BankingDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("AccountTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("RoutingCode")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AccountTypeId");

                    b.ToTable("BankingDetail");
                });

            modelBuilder.Entity("MM.ClientModels.Billing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CommentsForPayer")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("InternalNotes")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("PaidAmount")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<DateTime?>("PaymentDueDate")
                        .HasColumnType("datetime");

                    b.Property<int>("PaymentGatewayId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentItem")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("MemberId");

                    b.HasIndex("PaymentGatewayId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("Billing");
                });

            modelBuilder.Entity("MM.ClientModels.BillingCommunication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BillingId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Reminder1ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Reminder1Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Reminder1SentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Reminder2ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Reminder2Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Reminder2SentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Reminder3ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Reminder3Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Reminder3SentDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("BillingCommunication");
                });

            modelBuilder.Entity("MM.ClientModels.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(3381),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(4459),
                            Name = "Adelaide",
                            StateId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5370),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5395),
                            Name = "Alfred Nzo District Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5416),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5418),
                            Name = "Alice",
                            StateId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5422),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5424),
                            Name = "Aliwal North",
                            StateId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5428),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5431),
                            Name = "Amathole District Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5435),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5437),
                            Name = "Bhisho",
                            StateId = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5443),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5445),
                            Name = "Buffalo City Metropolitan Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5450),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5452),
                            Name = "Burgersdorp",
                            StateId = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5456),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5459),
                            Name = "Butterworth",
                            StateId = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5463),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5465),
                            Name = "Cacadu District Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 11,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5470),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5472),
                            Name = "Chris Hani District Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 12,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5475),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5477),
                            Name = "Cradock",
                            StateId = 1
                        },
                        new
                        {
                            Id = 13,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5481),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5483),
                            Name = "Dordrecht",
                            StateId = 1
                        },
                        new
                        {
                            Id = 14,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5487),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5489),
                            Name = "East London",
                            StateId = 1
                        },
                        new
                        {
                            Id = 15,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5493),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5495),
                            Name = "Elliot",
                            StateId = 1
                        },
                        new
                        {
                            Id = 16,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5541),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5544),
                            Name = "Fort Beaufort",
                            StateId = 1
                        },
                        new
                        {
                            Id = 17,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5547),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5549),
                            Name = "Graaff-Reinet",
                            StateId = 1
                        },
                        new
                        {
                            Id = 18,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5553),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5555),
                            Name = "Grahamstown",
                            StateId = 1
                        },
                        new
                        {
                            Id = 19,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5559),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5561),
                            Name = "Ilinge",
                            StateId = 1
                        },
                        new
                        {
                            Id = 20,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5565),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5567),
                            Name = "Joe Gqabi District Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 21,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5571),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5572),
                            Name = "Kirkwood",
                            StateId = 1
                        },
                        new
                        {
                            Id = 22,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5578),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5580),
                            Name = "Kruisfontein",
                            StateId = 1
                        },
                        new
                        {
                            Id = 23,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5586),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5589),
                            Name = "Lady Frere",
                            StateId = 1
                        },
                        new
                        {
                            Id = 24,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5593),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5595),
                            Name = "Middelburg",
                            StateId = 1
                        },
                        new
                        {
                            Id = 25,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5598),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5601),
                            Name = "Molteno",
                            StateId = 1
                        },
                        new
                        {
                            Id = 26,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5604),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5606),
                            Name = "Mthatha",
                            StateId = 1
                        },
                        new
                        {
                            Id = 27,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5610),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5612),
                            Name = "Nelson Mandela Bay Metropolitan Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 28,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5617),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5619),
                            Name = "OR Tambo District Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 29,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5622),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5624),
                            Name = "Port Alfred",
                            StateId = 1
                        },
                        new
                        {
                            Id = 30,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5628),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5630),
                            Name = "Port Elizabeth",
                            StateId = 1
                        },
                        new
                        {
                            Id = 31,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5634),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5636),
                            Name = "Port Saint Johnâ€™s",
                            StateId = 1
                        },
                        new
                        {
                            Id = 32,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5640),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5642),
                            Name = "Queensdale",
                            StateId = 1
                        },
                        new
                        {
                            Id = 33,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5646),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5648),
                            Name = "Queenstown",
                            StateId = 1
                        },
                        new
                        {
                            Id = 34,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5651),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5653),
                            Name = "Somerset East",
                            StateId = 1
                        },
                        new
                        {
                            Id = 35,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5657),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5659),
                            Name = "Stutterheim",
                            StateId = 1
                        },
                        new
                        {
                            Id = 36,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5662),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5664),
                            Name = "Uitenhage",
                            StateId = 1
                        },
                        new
                        {
                            Id = 37,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5668),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5670),
                            Name = "Whittlesea",
                            StateId = 1
                        },
                        new
                        {
                            Id = 38,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5674),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5676),
                            Name = "Willowmore",
                            StateId = 1
                        },
                        new
                        {
                            Id = 39,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5680),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5682),
                            Name = "Allanridge",
                            StateId = 2
                        },
                        new
                        {
                            Id = 40,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5685),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5687),
                            Name = "Bethlehem",
                            StateId = 2
                        },
                        new
                        {
                            Id = 41,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5691),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5693),
                            Name = "Bloemfontein",
                            StateId = 2
                        },
                        new
                        {
                            Id = 42,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5696),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5698),
                            Name = "Bothaville",
                            StateId = 2
                        },
                        new
                        {
                            Id = 43,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5701),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5703),
                            Name = "Botshabelo",
                            StateId = 2
                        },
                        new
                        {
                            Id = 44,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5707),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5709),
                            Name = "Brandfort",
                            StateId = 2
                        },
                        new
                        {
                            Id = 45,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5712),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5714),
                            Name = "Clocolan",
                            StateId = 2
                        },
                        new
                        {
                            Id = 46,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5718),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5720),
                            Name = "Deneysville",
                            StateId = 2
                        },
                        new
                        {
                            Id = 47,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5724),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5725),
                            Name = "Fezile Dabi District Municipality",
                            StateId = 2
                        },
                        new
                        {
                            Id = 48,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5729),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5731),
                            Name = "Frankfort",
                            StateId = 2
                        },
                        new
                        {
                            Id = 49,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5735),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5737),
                            Name = "Harrismith",
                            StateId = 2
                        },
                        new
                        {
                            Id = 50,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5740),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5742),
                            Name = "Heilbron",
                            StateId = 2
                        },
                        new
                        {
                            Id = 51,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5746),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5747),
                            Name = "Hennenman",
                            StateId = 2
                        },
                        new
                        {
                            Id = 52,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5751),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5753),
                            Name = "Hoopstad",
                            StateId = 2
                        },
                        new
                        {
                            Id = 53,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5756),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5758),
                            Name = "Koppies",
                            StateId = 2
                        },
                        new
                        {
                            Id = 54,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5762),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5763),
                            Name = "Kroonstad",
                            StateId = 2
                        },
                        new
                        {
                            Id = 55,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5767),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5769),
                            Name = "Kutloanong",
                            StateId = 2
                        },
                        new
                        {
                            Id = 56,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5775),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5776),
                            Name = "Ladybrand",
                            StateId = 2
                        },
                        new
                        {
                            Id = 57,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5780),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5782),
                            Name = "Lejweleputswa District Municipality",
                            StateId = 2
                        },
                        new
                        {
                            Id = 58,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5785),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5787),
                            Name = "Lindley",
                            StateId = 2
                        },
                        new
                        {
                            Id = 59,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5791),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5793),
                            Name = "Mangaung Metropolitan Municipality",
                            StateId = 2
                        },
                        new
                        {
                            Id = 60,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5798),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5802),
                            Name = "Marquard",
                            StateId = 2
                        },
                        new
                        {
                            Id = 61,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5805),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5807),
                            Name = "Parys",
                            StateId = 2
                        },
                        new
                        {
                            Id = 62,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5821),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5823),
                            Name = "Phuthaditjhaba",
                            StateId = 2
                        },
                        new
                        {
                            Id = 63,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5826),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5828),
                            Name = "Reitz",
                            StateId = 2
                        },
                        new
                        {
                            Id = 64,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5832),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5834),
                            Name = "Sasolburg",
                            StateId = 2
                        },
                        new
                        {
                            Id = 65,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5837),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5839),
                            Name = "Senekal",
                            StateId = 2
                        },
                        new
                        {
                            Id = 66,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5842),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5844),
                            Name = "Thaba Nchu",
                            StateId = 2
                        },
                        new
                        {
                            Id = 67,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5848),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5849),
                            Name = "Thabo Mofutsanyana District Municipality",
                            StateId = 2
                        },
                        new
                        {
                            Id = 68,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5853),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5855),
                            Name = "Theunissen",
                            StateId = 2
                        },
                        new
                        {
                            Id = 69,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5858),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5860),
                            Name = "Ventersburg",
                            StateId = 2
                        },
                        new
                        {
                            Id = 70,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5863),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5865),
                            Name = "Viljoenskroon",
                            StateId = 2
                        },
                        new
                        {
                            Id = 71,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5869),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5871),
                            Name = "Villiers",
                            StateId = 2
                        },
                        new
                        {
                            Id = 72,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5874),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5876),
                            Name = "Virginia",
                            StateId = 2
                        },
                        new
                        {
                            Id = 73,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5880),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5882),
                            Name = "Vrede",
                            StateId = 2
                        },
                        new
                        {
                            Id = 74,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5885),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5887),
                            Name = "Vredefort",
                            StateId = 2
                        },
                        new
                        {
                            Id = 75,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5890),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5892),
                            Name = "Welkom",
                            StateId = 2
                        },
                        new
                        {
                            Id = 76,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5896),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5898),
                            Name = "Wesselsbron",
                            StateId = 2
                        },
                        new
                        {
                            Id = 77,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5901),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5903),
                            Name = "Winburg",
                            StateId = 2
                        },
                        new
                        {
                            Id = 78,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5907),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5908),
                            Name = "Xhariep District Municipality",
                            StateId = 2
                        },
                        new
                        {
                            Id = 79,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5912),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5914),
                            Name = "Zastron",
                            StateId = 2
                        },
                        new
                        {
                            Id = 80,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5919),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5921),
                            Name = "Alberton",
                            StateId = 3
                        },
                        new
                        {
                            Id = 81,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5925),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5927),
                            Name = "Benoni",
                            StateId = 3
                        },
                        new
                        {
                            Id = 82,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5930),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5932),
                            Name = "Boksburg",
                            StateId = 3
                        },
                        new
                        {
                            Id = 83,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5936),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5938),
                            Name = "Brakpan",
                            StateId = 3
                        },
                        new
                        {
                            Id = 84,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5941),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5943),
                            Name = "Bronkhorstspruit",
                            StateId = 3
                        },
                        new
                        {
                            Id = 85,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5947),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5948),
                            Name = "Carletonville",
                            StateId = 3
                        },
                        new
                        {
                            Id = 86,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5952),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5954),
                            Name = "Centurion",
                            StateId = 3
                        },
                        new
                        {
                            Id = 87,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5957),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5959),
                            Name = "City of Johannesburg Metropolitan Municipality",
                            StateId = 3
                        },
                        new
                        {
                            Id = 88,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5963),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5965),
                            Name = "City of Tshwane Metropolitan Municipality",
                            StateId = 3
                        },
                        new
                        {
                            Id = 89,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5968),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5970),
                            Name = "Cullinan",
                            StateId = 3
                        },
                        new
                        {
                            Id = 90,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5973),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5975),
                            Name = "Diepsloot",
                            StateId = 3
                        },
                        new
                        {
                            Id = 91,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5979),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5981),
                            Name = "Eastleigh",
                            StateId = 3
                        },
                        new
                        {
                            Id = 92,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5984),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5986),
                            Name = "Eden Glen",
                            StateId = 3
                        },
                        new
                        {
                            Id = 93,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5990),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5991),
                            Name = "Eden Glen Ext 60",
                            StateId = 3
                        },
                        new
                        {
                            Id = 94,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5996),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(5998),
                            Name = "Edenvale",
                            StateId = 3
                        },
                        new
                        {
                            Id = 95,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6003),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6005),
                            Name = "Ekangala",
                            StateId = 3
                        },
                        new
                        {
                            Id = 96,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6009),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6012),
                            Name = "Ekurhuleni Metropolitan Municipality",
                            StateId = 3
                        },
                        new
                        {
                            Id = 97,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6015),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6017),
                            Name = "Heidelberg",
                            StateId = 3
                        },
                        new
                        {
                            Id = 98,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6021),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6023),
                            Name = "Johannesburg",
                            StateId = 3
                        },
                        new
                        {
                            Id = 99,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6027),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6029),
                            Name = "Krugersdorp",
                            StateId = 3
                        },
                        new
                        {
                            Id = 100,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6032),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6034),
                            Name = "Mabopane",
                            StateId = 3
                        },
                        new
                        {
                            Id = 101,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6037),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6040),
                            Name = "Midrand",
                            StateId = 3
                        },
                        new
                        {
                            Id = 102,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6044),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6046),
                            Name = "Midstream",
                            StateId = 3
                        },
                        new
                        {
                            Id = 103,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6050),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6051),
                            Name = "Modderfontein",
                            StateId = 3
                        },
                        new
                        {
                            Id = 104,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6055),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6057),
                            Name = "Muldersdriseloop",
                            StateId = 3
                        },
                        new
                        {
                            Id = 105,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6061),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6063),
                            Name = "Nigel",
                            StateId = 3
                        },
                        new
                        {
                            Id = 106,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6067),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6069),
                            Name = "Orange Farm",
                            StateId = 3
                        },
                        new
                        {
                            Id = 107,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6072),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6074),
                            Name = "Pretoria",
                            StateId = 3
                        },
                        new
                        {
                            Id = 108,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6078),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6079),
                            Name = "Randburg",
                            StateId = 3
                        },
                        new
                        {
                            Id = 109,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6091),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6093),
                            Name = "Randfontein",
                            StateId = 3
                        },
                        new
                        {
                            Id = 110,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6097),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6100),
                            Name = "Roodepoort",
                            StateId = 3
                        },
                        new
                        {
                            Id = 111,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6103),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6106),
                            Name = "Sedibeng District Municipality",
                            StateId = 3
                        },
                        new
                        {
                            Id = 112,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6109),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6111),
                            Name = "Soweto",
                            StateId = 3
                        },
                        new
                        {
                            Id = 113,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6115),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6117),
                            Name = "Springs",
                            StateId = 3
                        },
                        new
                        {
                            Id = 114,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6120),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6122),
                            Name = "Tembisa",
                            StateId = 3
                        },
                        new
                        {
                            Id = 115,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6127),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6129),
                            Name = "Vanderbijlpark",
                            StateId = 3
                        },
                        new
                        {
                            Id = 116,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6132),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6134),
                            Name = "Vereeniging",
                            StateId = 3
                        },
                        new
                        {
                            Id = 117,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6139),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6141),
                            Name = "West Rand District Municipality",
                            StateId = 3
                        },
                        new
                        {
                            Id = 118,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6144),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6146),
                            Name = "Westonaria",
                            StateId = 3
                        },
                        new
                        {
                            Id = 119,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6151),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6153),
                            Name = "Amajuba District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 120,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6157),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6159),
                            Name = "Ballito",
                            StateId = 4
                        },
                        new
                        {
                            Id = 121,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6163),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6165),
                            Name = "Berea",
                            StateId = 4
                        },
                        new
                        {
                            Id = 122,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6169),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6171),
                            Name = "Dundee",
                            StateId = 4
                        },
                        new
                        {
                            Id = 123,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6175),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6177),
                            Name = "Durban",
                            StateId = 4
                        },
                        new
                        {
                            Id = 124,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6180),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6182),
                            Name = "Ekuvukeni",
                            StateId = 4
                        },
                        new
                        {
                            Id = 125,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6186),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6187),
                            Name = "eMkhomazi",
                            StateId = 4
                        },
                        new
                        {
                            Id = 126,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6191),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6193),
                            Name = "Empangeni",
                            StateId = 4
                        },
                        new
                        {
                            Id = 127,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6196),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6198),
                            Name = "Eshowe",
                            StateId = 4
                        },
                        new
                        {
                            Id = 128,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6202),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6204),
                            Name = "eSikhaleni",
                            StateId = 4
                        },
                        new
                        {
                            Id = 129,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6208),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6211),
                            Name = "eThekwini Metropolitan Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 130,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6215),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6216),
                            Name = "Glencoe",
                            StateId = 4
                        },
                        new
                        {
                            Id = 131,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6220),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6222),
                            Name = "Greytown",
                            StateId = 4
                        },
                        new
                        {
                            Id = 132,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6225),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6227),
                            Name = "Hluhluwe",
                            StateId = 4
                        },
                        new
                        {
                            Id = 133,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6230),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6232),
                            Name = "Howick",
                            StateId = 4
                        },
                        new
                        {
                            Id = 134,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6236),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6238),
                            Name = "iLembe District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 135,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6241),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6243),
                            Name = "Kokstad",
                            StateId = 4
                        },
                        new
                        {
                            Id = 136,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6247),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6248),
                            Name = "KwaDukuza",
                            StateId = 4
                        },
                        new
                        {
                            Id = 137,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6252),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6254),
                            Name = "Margate",
                            StateId = 4
                        },
                        new
                        {
                            Id = 138,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6257),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6259),
                            Name = "Mondlo",
                            StateId = 4
                        },
                        new
                        {
                            Id = 139,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6262),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6264),
                            Name = "Mooirivier",
                            StateId = 4
                        },
                        new
                        {
                            Id = 140,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6268),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6270),
                            Name = "Mpophomeni",
                            StateId = 4
                        },
                        new
                        {
                            Id = 141,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6274),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6276),
                            Name = "Mpumalanga",
                            StateId = 4
                        },
                        new
                        {
                            Id = 142,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6280),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6282),
                            Name = "Mtubatuba",
                            StateId = 4
                        },
                        new
                        {
                            Id = 143,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6286),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6288),
                            Name = "Ndwedwe",
                            StateId = 4
                        },
                        new
                        {
                            Id = 144,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6292),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6294),
                            Name = "Newcastle",
                            StateId = 4
                        },
                        new
                        {
                            Id = 145,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6297),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6299),
                            Name = "Pietermaritzburg",
                            StateId = 4
                        },
                        new
                        {
                            Id = 146,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6302),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6304),
                            Name = "Port Shepstone",
                            StateId = 4
                        },
                        new
                        {
                            Id = 147,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6308),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6310),
                            Name = "Richards Bay",
                            StateId = 4
                        },
                        new
                        {
                            Id = 148,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6313),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6315),
                            Name = "Richmond",
                            StateId = 4
                        },
                        new
                        {
                            Id = 149,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6319),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6321),
                            Name = "Scottburgh",
                            StateId = 4
                        },
                        new
                        {
                            Id = 150,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6325),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6327),
                            Name = "Sisonke District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 151,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6331),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6333),
                            Name = "Sundumbili",
                            StateId = 4
                        },
                        new
                        {
                            Id = 152,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6336),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6339),
                            Name = "Ugu District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 153,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6343),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6345),
                            Name = "Ulundi",
                            StateId = 4
                        },
                        new
                        {
                            Id = 154,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6349),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6350),
                            Name = "uMgungundlovu District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 155,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6362),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6364),
                            Name = "uMkhanyakude District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 156,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6367),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6369),
                            Name = "uMzinyathi District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 157,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6373),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6375),
                            Name = "uThukela District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 158,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6378),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6380),
                            Name = "uThungulu District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 159,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6383),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6385),
                            Name = "Utrecht",
                            StateId = 4
                        },
                        new
                        {
                            Id = 160,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6389),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6391),
                            Name = "Vryheid",
                            StateId = 4
                        },
                        new
                        {
                            Id = 161,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6394),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6396),
                            Name = "Zululand District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 162,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6400),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6402),
                            Name = "Bochum",
                            StateId = 5
                        },
                        new
                        {
                            Id = 163,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6405),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6407),
                            Name = "Capricorn District Municipality",
                            StateId = 5
                        },
                        new
                        {
                            Id = 164,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6411),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6412),
                            Name = "Duiwelskloof",
                            StateId = 5
                        },
                        new
                        {
                            Id = 165,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6416),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6418),
                            Name = "Ga-Kgapane",
                            StateId = 5
                        },
                        new
                        {
                            Id = 166,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6421),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6423),
                            Name = "Giyani",
                            StateId = 5
                        },
                        new
                        {
                            Id = 167,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6427),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6428),
                            Name = "Lebowakgomo",
                            StateId = 5
                        },
                        new
                        {
                            Id = 168,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6432),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6434),
                            Name = "Louis Trichardt",
                            StateId = 5
                        },
                        new
                        {
                            Id = 169,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6437),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6439),
                            Name = "Mankoeng",
                            StateId = 5
                        },
                        new
                        {
                            Id = 170,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6443),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6445),
                            Name = "Modimolle",
                            StateId = 5
                        },
                        new
                        {
                            Id = 171,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6448),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6450),
                            Name = "Mokopane",
                            StateId = 5
                        },
                        new
                        {
                            Id = 172,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6453),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6455),
                            Name = "Mopani District Municipality",
                            StateId = 5
                        },
                        new
                        {
                            Id = 173,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6459),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6461),
                            Name = "Musina",
                            StateId = 5
                        },
                        new
                        {
                            Id = 174,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6466),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6468),
                            Name = "Nkowakowa",
                            StateId = 5
                        },
                        new
                        {
                            Id = 175,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6471),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6474),
                            Name = "Phalaborwa",
                            StateId = 5
                        },
                        new
                        {
                            Id = 176,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6477),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6479),
                            Name = "Polokwane",
                            StateId = 5
                        },
                        new
                        {
                            Id = 177,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6482),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6485),
                            Name = "Sekhukhune District Municipality",
                            StateId = 5
                        },
                        new
                        {
                            Id = 178,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6488),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6490),
                            Name = "Thabazimbi",
                            StateId = 5
                        },
                        new
                        {
                            Id = 179,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6494),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6496),
                            Name = "Thohoyandou",
                            StateId = 5
                        },
                        new
                        {
                            Id = 180,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6499),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6501),
                            Name = "Thulamahashi",
                            StateId = 5
                        },
                        new
                        {
                            Id = 181,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6505),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6506),
                            Name = "Tzaneen",
                            StateId = 5
                        },
                        new
                        {
                            Id = 182,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6510),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6512),
                            Name = "Vhembe District Municipality",
                            StateId = 5
                        },
                        new
                        {
                            Id = 183,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6516),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6518),
                            Name = "Warmbaths",
                            StateId = 5
                        },
                        new
                        {
                            Id = 184,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6522),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6525),
                            Name = "Waterberg District Municipality",
                            StateId = 5
                        },
                        new
                        {
                            Id = 185,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6528),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6530),
                            Name = "Balfour",
                            StateId = 6
                        },
                        new
                        {
                            Id = 186,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6534),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6536),
                            Name = "Barberton",
                            StateId = 6
                        },
                        new
                        {
                            Id = 187,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6540),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6542),
                            Name = "Belfast",
                            StateId = 6
                        },
                        new
                        {
                            Id = 188,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6545),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6547),
                            Name = "Bethal",
                            StateId = 6
                        },
                        new
                        {
                            Id = 189,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6550),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6552),
                            Name = "Breyten",
                            StateId = 6
                        },
                        new
                        {
                            Id = 190,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6556),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6558),
                            Name = "Carolina",
                            StateId = 6
                        },
                        new
                        {
                            Id = 191,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6561),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6563),
                            Name = "Delmas",
                            StateId = 6
                        },
                        new
                        {
                            Id = 192,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6567),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6569),
                            Name = "Driefontein",
                            StateId = 6
                        },
                        new
                        {
                            Id = 193,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6573),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6575),
                            Name = "Ehlanzeni District",
                            StateId = 6
                        },
                        new
                        {
                            Id = 194,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6579),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6580),
                            Name = "eMbalenhle",
                            StateId = 6
                        },
                        new
                        {
                            Id = 195,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6584),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6586),
                            Name = "Ermelo",
                            StateId = 6
                        },
                        new
                        {
                            Id = 196,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6590),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6592),
                            Name = "Gert Sibande District Municipality",
                            StateId = 6
                        },
                        new
                        {
                            Id = 197,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6595),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6597),
                            Name = "Hendrina",
                            StateId = 6
                        },
                        new
                        {
                            Id = 198,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6601),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6603),
                            Name = "Komatipoort",
                            StateId = 6
                        },
                        new
                        {
                            Id = 199,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6606),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6608),
                            Name = "Kriel",
                            StateId = 6
                        },
                        new
                        {
                            Id = 200,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6612),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6614),
                            Name = "Lydenburg",
                            StateId = 6
                        },
                        new
                        {
                            Id = 201,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6617),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6619),
                            Name = "Middelburg",
                            StateId = 6
                        },
                        new
                        {
                            Id = 202,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6632),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6634),
                            Name = "Nelspruit",
                            StateId = 6
                        },
                        new
                        {
                            Id = 203,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6637),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6639),
                            Name = "Nkangala District Municipality",
                            StateId = 6
                        },
                        new
                        {
                            Id = 204,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6643),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6645),
                            Name = "Piet Retief",
                            StateId = 6
                        },
                        new
                        {
                            Id = 205,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6648),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6650),
                            Name = "Secunda",
                            StateId = 6
                        },
                        new
                        {
                            Id = 206,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6654),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6656),
                            Name = "Siyabuswa",
                            StateId = 6
                        },
                        new
                        {
                            Id = 207,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6659),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6661),
                            Name = "Standerton",
                            StateId = 6
                        },
                        new
                        {
                            Id = 208,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6665),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6667),
                            Name = "Volksrust",
                            StateId = 6
                        },
                        new
                        {
                            Id = 209,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6671),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6673),
                            Name = "White River",
                            StateId = 6
                        },
                        new
                        {
                            Id = 210,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6677),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6679),
                            Name = "Witbank",
                            StateId = 6
                        },
                        new
                        {
                            Id = 211,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6682),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6684),
                            Name = "Bloemhof",
                            StateId = 7
                        },
                        new
                        {
                            Id = 212,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6688),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6690),
                            Name = "Bojanala Platinum District Municipality",
                            StateId = 7
                        },
                        new
                        {
                            Id = 213,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6694),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6696),
                            Name = "Brits",
                            StateId = 7
                        },
                        new
                        {
                            Id = 214,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6700),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6702),
                            Name = "Christiana",
                            StateId = 7
                        },
                        new
                        {
                            Id = 215,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6706),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6708),
                            Name = "Dr Kenneth Kaunda District Municipality",
                            StateId = 7
                        },
                        new
                        {
                            Id = 216,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6711),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6713),
                            Name = "Dr Ruth Segomotsi Mompati District Municipality",
                            StateId = 7
                        },
                        new
                        {
                            Id = 217,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6717),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6719),
                            Name = "Fochville",
                            StateId = 7
                        },
                        new
                        {
                            Id = 218,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6722),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6724),
                            Name = "Ga-Rankuwa",
                            StateId = 7
                        },
                        new
                        {
                            Id = 219,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6727),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6729),
                            Name = "Jan Kempdorp",
                            StateId = 7
                        },
                        new
                        {
                            Id = 220,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6733),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6735),
                            Name = "Klerksdorp",
                            StateId = 7
                        },
                        new
                        {
                            Id = 221,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6738),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6740),
                            Name = "Koster",
                            StateId = 7
                        },
                        new
                        {
                            Id = 222,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6744),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6745),
                            Name = "Lichtenburg",
                            StateId = 7
                        },
                        new
                        {
                            Id = 223,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6749),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6751),
                            Name = "Mahikeng",
                            StateId = 7
                        },
                        new
                        {
                            Id = 224,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6754),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6756),
                            Name = "Maile",
                            StateId = 7
                        },
                        new
                        {
                            Id = 225,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6760),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6762),
                            Name = "Mmabatho",
                            StateId = 7
                        },
                        new
                        {
                            Id = 226,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6765),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6767),
                            Name = "Ngaka Modiri Molema District Municipality",
                            StateId = 7
                        },
                        new
                        {
                            Id = 227,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6770),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6773),
                            Name = "Orkney",
                            StateId = 7
                        },
                        new
                        {
                            Id = 228,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6776),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6778),
                            Name = "Potchefstroom",
                            StateId = 7
                        },
                        new
                        {
                            Id = 229,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6782),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6784),
                            Name = "Rustenburg",
                            StateId = 7
                        },
                        new
                        {
                            Id = 230,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6787),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6789),
                            Name = "Schweizer-Reneke",
                            StateId = 7
                        },
                        new
                        {
                            Id = 231,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6792),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6794),
                            Name = "Stilfontein",
                            StateId = 7
                        },
                        new
                        {
                            Id = 232,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6798),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6800),
                            Name = "Vryburg",
                            StateId = 7
                        },
                        new
                        {
                            Id = 233,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6804),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6806),
                            Name = "Wolmaransstad",
                            StateId = 7
                        },
                        new
                        {
                            Id = 234,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6810),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6812),
                            Name = "Zeerust",
                            StateId = 7
                        },
                        new
                        {
                            Id = 235,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6815),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6817),
                            Name = "Barkly West",
                            StateId = 8
                        },
                        new
                        {
                            Id = 236,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6820),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6822),
                            Name = "Brandvlei",
                            StateId = 8
                        },
                        new
                        {
                            Id = 237,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6826),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6828),
                            Name = "Calvinia",
                            StateId = 8
                        },
                        new
                        {
                            Id = 238,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6831),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6833),
                            Name = "Carnarvon",
                            StateId = 8
                        },
                        new
                        {
                            Id = 239,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6836),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6838),
                            Name = "Colesberg",
                            StateId = 8
                        },
                        new
                        {
                            Id = 240,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6842),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6843),
                            Name = "DaniÃ«lskuil",
                            StateId = 8
                        },
                        new
                        {
                            Id = 241,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6847),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6849),
                            Name = "De Aar",
                            StateId = 8
                        },
                        new
                        {
                            Id = 242,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6853),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6855),
                            Name = "Frances Baard District Municipality",
                            StateId = 8
                        },
                        new
                        {
                            Id = 243,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6858),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6860),
                            Name = "Fraserburg",
                            StateId = 8
                        },
                        new
                        {
                            Id = 244,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6863),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6865),
                            Name = "John Taolo Gaetsewe District Municipality",
                            StateId = 8
                        },
                        new
                        {
                            Id = 245,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6868),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6870),
                            Name = "Kathu",
                            StateId = 8
                        },
                        new
                        {
                            Id = 246,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6874),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6876),
                            Name = "Kenhardt",
                            StateId = 8
                        },
                        new
                        {
                            Id = 247,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6879),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6881),
                            Name = "Kimberley",
                            StateId = 8
                        },
                        new
                        {
                            Id = 248,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6894),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6896),
                            Name = "Kuruman",
                            StateId = 8
                        },
                        new
                        {
                            Id = 249,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6900),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6902),
                            Name = "Namakwa District Municipality",
                            StateId = 8
                        },
                        new
                        {
                            Id = 250,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6905),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6907),
                            Name = "Noupoort",
                            StateId = 8
                        },
                        new
                        {
                            Id = 251,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6910),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6912),
                            Name = "Orania",
                            StateId = 8
                        },
                        new
                        {
                            Id = 252,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6916),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6918),
                            Name = "Pampierstad",
                            StateId = 8
                        },
                        new
                        {
                            Id = 253,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6921),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6923),
                            Name = "Pixley ka Seme District Municipality",
                            StateId = 8
                        },
                        new
                        {
                            Id = 254,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6926),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6928),
                            Name = "Pofadder",
                            StateId = 8
                        },
                        new
                        {
                            Id = 255,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6933),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6935),
                            Name = "Postmasburg",
                            StateId = 8
                        },
                        new
                        {
                            Id = 256,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6938),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6940),
                            Name = "Prieska",
                            StateId = 8
                        },
                        new
                        {
                            Id = 257,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6945),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6947),
                            Name = "Ritchie",
                            StateId = 8
                        },
                        new
                        {
                            Id = 258,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6951),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6952),
                            Name = "Siyanda District Municipality",
                            StateId = 8
                        },
                        new
                        {
                            Id = 259,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6956),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6958),
                            Name = "Springbok",
                            StateId = 8
                        },
                        new
                        {
                            Id = 260,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6961),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6963),
                            Name = "Upington",
                            StateId = 8
                        },
                        new
                        {
                            Id = 261,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6967),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6968),
                            Name = "Van Wyksvlei",
                            StateId = 8
                        },
                        new
                        {
                            Id = 262,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6972),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6974),
                            Name = "Warrenton",
                            StateId = 8
                        },
                        new
                        {
                            Id = 263,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6977),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6979),
                            Name = "Albertina",
                            StateId = 9
                        },
                        new
                        {
                            Id = 264,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6982),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6985),
                            Name = "Arniston",
                            StateId = 9
                        },
                        new
                        {
                            Id = 265,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6988),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6990),
                            Name = "Atlantis",
                            StateId = 9
                        },
                        new
                        {
                            Id = 266,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6994),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(6996),
                            Name = "Beaufort West",
                            StateId = 9
                        },
                        new
                        {
                            Id = 267,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7000),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7002),
                            Name = "Bergvliet",
                            StateId = 9
                        },
                        new
                        {
                            Id = 268,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7005),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7007),
                            Name = "Bredasdorp",
                            StateId = 9
                        },
                        new
                        {
                            Id = 269,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7011),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7013),
                            Name = "Caledon",
                            StateId = 9
                        },
                        new
                        {
                            Id = 270,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7016),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7018),
                            Name = "Calitzdorp",
                            StateId = 9
                        },
                        new
                        {
                            Id = 271,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7022),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7024),
                            Name = "Cape Town",
                            StateId = 9
                        },
                        new
                        {
                            Id = 272,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7027),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7029),
                            Name = "Cape Winelands District Municipality",
                            StateId = 9
                        },
                        new
                        {
                            Id = 273,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7033),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7035),
                            Name = "Central Karoo District Municipality",
                            StateId = 9
                        },
                        new
                        {
                            Id = 274,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7038),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7040),
                            Name = "Ceres",
                            StateId = 9
                        },
                        new
                        {
                            Id = 275,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7043),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7046),
                            Name = "City of Cape Town",
                            StateId = 9
                        },
                        new
                        {
                            Id = 276,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7049),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7051),
                            Name = "Clanwilliam",
                            StateId = 9
                        },
                        new
                        {
                            Id = 277,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7054),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7056),
                            Name = "Claremont",
                            StateId = 9
                        },
                        new
                        {
                            Id = 278,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7060),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7062),
                            Name = "Constantia",
                            StateId = 9
                        },
                        new
                        {
                            Id = 279,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7065),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7067),
                            Name = "De Rust",
                            StateId = 9
                        },
                        new
                        {
                            Id = 280,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7071),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7073),
                            Name = "Eden District Municipality",
                            StateId = 9
                        },
                        new
                        {
                            Id = 281,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7077),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7079),
                            Name = "George",
                            StateId = 9
                        },
                        new
                        {
                            Id = 282,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7082),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7084),
                            Name = "Grabouw",
                            StateId = 9
                        },
                        new
                        {
                            Id = 283,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7088),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7089),
                            Name = "Hardys Memories of Africa",
                            StateId = 9
                        },
                        new
                        {
                            Id = 284,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7093),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7095),
                            Name = "Hermanus",
                            StateId = 9
                        },
                        new
                        {
                            Id = 285,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7098),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7100),
                            Name = "Knysna",
                            StateId = 9
                        },
                        new
                        {
                            Id = 286,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7103),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7105),
                            Name = "Kraaifontein",
                            StateId = 9
                        },
                        new
                        {
                            Id = 287,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7109),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7111),
                            Name = "Ladismith",
                            StateId = 9
                        },
                        new
                        {
                            Id = 288,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7114),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7116),
                            Name = "Lansdowne",
                            StateId = 9
                        },
                        new
                        {
                            Id = 289,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7119),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7121),
                            Name = "Malmesbury",
                            StateId = 9
                        },
                        new
                        {
                            Id = 290,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7125),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7127),
                            Name = "Montagu",
                            StateId = 9
                        },
                        new
                        {
                            Id = 291,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7130),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7132),
                            Name = "Moorreesburg",
                            StateId = 9
                        },
                        new
                        {
                            Id = 292,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7136),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7138),
                            Name = "Mossel Bay",
                            StateId = 9
                        },
                        new
                        {
                            Id = 293,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7142),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7144),
                            Name = "Newlands",
                            StateId = 9
                        },
                        new
                        {
                            Id = 294,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7157),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7159),
                            Name = "Oudtshoorn",
                            StateId = 9
                        },
                        new
                        {
                            Id = 295,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7162),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7164),
                            Name = "Overberg District Municipality",
                            StateId = 9
                        },
                        new
                        {
                            Id = 296,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7167),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7169),
                            Name = "Paarl",
                            StateId = 9
                        },
                        new
                        {
                            Id = 297,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7173),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7175),
                            Name = "Piketberg",
                            StateId = 9
                        },
                        new
                        {
                            Id = 298,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7178),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7180),
                            Name = "Plettenberg Bay",
                            StateId = 9
                        },
                        new
                        {
                            Id = 299,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7183),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7185),
                            Name = "Prince Albert",
                            StateId = 9
                        },
                        new
                        {
                            Id = 300,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7189),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7191),
                            Name = "Retreat",
                            StateId = 9
                        },
                        new
                        {
                            Id = 301,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7194),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7196),
                            Name = "Riversdale",
                            StateId = 9
                        },
                        new
                        {
                            Id = 302,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7199),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7201),
                            Name = "Robertson",
                            StateId = 9
                        },
                        new
                        {
                            Id = 303,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7205),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7206),
                            Name = "Rondebosch",
                            StateId = 9
                        },
                        new
                        {
                            Id = 304,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7210),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7212),
                            Name = "Rosebank",
                            StateId = 9
                        },
                        new
                        {
                            Id = 305,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7215),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7217),
                            Name = "Saldanha",
                            StateId = 9
                        },
                        new
                        {
                            Id = 306,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7221),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7222),
                            Name = "Stellenbosch",
                            StateId = 9
                        },
                        new
                        {
                            Id = 307,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7226),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7228),
                            Name = "Sunset Beach",
                            StateId = 9
                        },
                        new
                        {
                            Id = 308,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7232),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7234),
                            Name = "Swellendam",
                            StateId = 9
                        },
                        new
                        {
                            Id = 309,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7237),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7239),
                            Name = "Vredenburg",
                            StateId = 9
                        },
                        new
                        {
                            Id = 310,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7242),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7244),
                            Name = "Vredendal",
                            StateId = 9
                        },
                        new
                        {
                            Id = 311,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7248),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7249),
                            Name = "Wellington",
                            StateId = 9
                        },
                        new
                        {
                            Id = 312,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7253),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7255),
                            Name = "West Coast District Municipality",
                            StateId = 9
                        },
                        new
                        {
                            Id = 313,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7258),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7260),
                            Name = "Worcester",
                            StateId = 9
                        },
                        new
                        {
                            Id = 314,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7263),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 373, DateTimeKind.Local).AddTicks(7265),
                            Name = "Zoar",
                            StateId = 9
                        });
                });

            modelBuilder.Entity("MM.ClientModels.ClientOrganization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("AgreedToTerms")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ClientTimeZoneId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("CurrencyDecimalPlaces")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DateSettingId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("TimeFormatId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientTimeZoneId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DateSettingId");

                    b.HasIndex("TimeFormatId");

                    b.ToTable("ClientOrganization");
                });

            modelBuilder.Entity("MM.ClientModels.ClientPlanHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BillingUserId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsCurrentPlan")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int>("PlanDetailId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("BillingUserId");

                    b.ToTable("ClientPlanHistory");
                });

            modelBuilder.Entity("MM.ClientModels.ClientTimeZone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("ClientTimeZone");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(2103),
                            Description = "(GMT-12:00) International Date Line West",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(2909),
                            Name = "Dateline Standard Time"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3772),
                            Description = "(GMT-11:00) MIdway Island, Samoa",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3794),
                            Name = "Samoa Standard Time"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3820),
                            Description = "(GMT-10:00) Hawaii",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3822),
                            Name = "Hawaiian Standard Time"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3826),
                            Description = "(GMT-09:00) Alaska",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3828),
                            Name = "Alaskan Standard Time"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3832),
                            Description = "(GMT-08:00) Pacific Time (US and Canada); Tijuana",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3834),
                            Name = "Pacific Standard Time"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3837),
                            Description = "(GMT-07:00) Mountain Time (US and Canada)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3840),
                            Name = "Mountain Standard Time"
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3843),
                            Description = "(GMT-07:00) Chihuahua, La Paz, Mazatlan",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3844),
                            Name = "Mexico Standard Time 2"
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3848),
                            Description = "(GMT-07:00) Arizona",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3850),
                            Name = "U.S. Mountain Standard Time"
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3853),
                            Description = "(GMT-06:00) Central Time (US and Canada)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3855),
                            Name = "Central Standard Time"
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3858),
                            Description = "(GMT-06:00) Saskatchewan",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3859),
                            Name = "Canada Central Standard Time"
                        },
                        new
                        {
                            Id = 11,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3884),
                            Description = "(GMT-06:00) Guadalajara, Mexico City, Monterrey",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3887),
                            Name = "Mexico Standard Time"
                        },
                        new
                        {
                            Id = 12,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3891),
                            Description = "(GMT-06:00) Central America",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3893),
                            Name = "Central America Standard Time"
                        },
                        new
                        {
                            Id = 13,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3896),
                            Description = "(GMT-05:00) Eastern Time (US and Canada)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3899),
                            Name = "Eastern Standard Time"
                        },
                        new
                        {
                            Id = 14,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3902),
                            Description = "(GMT-05:00) Indiana (East)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3905),
                            Name = "U.S. Eastern Standard Time"
                        },
                        new
                        {
                            Id = 15,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3909),
                            Description = "(GMT-05:00) Bogota, Lima, Quito",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3912),
                            Name = "S.A. Pacific Standard Time"
                        },
                        new
                        {
                            Id = 16,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3915),
                            Description = "(GMT-04:00) Atlantic Time (Canada)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3917),
                            Name = "Atlantic Standard Time"
                        },
                        new
                        {
                            Id = 17,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3921),
                            Description = "(GMT-04:00) Georgetown, La Paz, San Juan",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3923),
                            Name = "S.A. Western Standard Time"
                        },
                        new
                        {
                            Id = 18,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3926),
                            Description = "(GMT-04:00) Santiago",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3928),
                            Name = "Pacific S.A. Standard Time"
                        },
                        new
                        {
                            Id = 19,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3933),
                            Description = "(GMT-03:30) Newfoundland",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3935),
                            Name = "Newfoundland and Labrador Standard Time"
                        },
                        new
                        {
                            Id = 20,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3939),
                            Description = "(GMT-03:00) Brasilia",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3941),
                            Name = "E. South America Standard Time"
                        },
                        new
                        {
                            Id = 21,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3944),
                            Description = "(GMT-03:00) Georgetown",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3947),
                            Name = "S.A. Eastern Standard Time"
                        },
                        new
                        {
                            Id = 22,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3950),
                            Description = "(GMT-03:00) Greenland",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3952),
                            Name = "Greenland Standard Time"
                        },
                        new
                        {
                            Id = 23,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3955),
                            Description = "(GMT-02:00) MId-Atlantic",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3957),
                            Name = "MId-Atlantic Standard Time"
                        },
                        new
                        {
                            Id = 24,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3961),
                            Description = "(GMT-01:00) Azores",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3962),
                            Name = "Azores Standard Time"
                        },
                        new
                        {
                            Id = 25,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3966),
                            Description = "(GMT-01:00) Cape Verde Islands",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3968),
                            Name = "Cape Verde Standard Time"
                        },
                        new
                        {
                            Id = 26,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3971),
                            Description = "(GMT) Greenwich Mean Time: Dublin, Edinburgh, Lisbon, London",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3973),
                            Name = "GMT Standard Time"
                        },
                        new
                        {
                            Id = 27,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3976),
                            Description = "(GMT) Monrovia, Reykjavik",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3978),
                            Name = "Greenwich Standard Time"
                        },
                        new
                        {
                            Id = 28,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3982),
                            Description = "(GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3983),
                            Name = "Central Europe Standard Time"
                        },
                        new
                        {
                            Id = 29,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3987),
                            Description = "(GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3989),
                            Name = "Central European Standard Time"
                        },
                        new
                        {
                            Id = 30,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3992),
                            Description = "(GMT+01:00) Brussels, Copenhagen, MadrId, Paris",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3993),
                            Name = "Romance Standard Time"
                        },
                        new
                        {
                            Id = 31,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3997),
                            Description = "(GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(3999),
                            Name = "W. Europe Standard Time"
                        },
                        new
                        {
                            Id = 32,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4003),
                            Description = "(GMT+01:00) West Central Africa",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4004),
                            Name = "W. Central Africa Standard Time"
                        },
                        new
                        {
                            Id = 33,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4007),
                            Description = "(GMT+02:00) Minsk",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4009),
                            Name = "E. Europe Standard Time"
                        },
                        new
                        {
                            Id = 34,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4012),
                            Description = "(GMT+02:00) Cairo",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4014),
                            Name = "Egypt Standard Time"
                        },
                        new
                        {
                            Id = 35,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4017),
                            Description = "(GMT+02:00) Helsinki, Kiev, Riga, Sofia, Tallinn, Vilnius",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4019),
                            Name = "FLE Standard Time"
                        },
                        new
                        {
                            Id = 36,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4022),
                            Description = "(GMT+02:00) Athens, Bucharest, Istanbul",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4024),
                            Name = "GTB Standard Time"
                        },
                        new
                        {
                            Id = 37,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4027),
                            Description = "(GMT+02:00) Jerusalem",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4029),
                            Name = "Israel Standard Time"
                        },
                        new
                        {
                            Id = 38,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4033),
                            Description = "(GMT+02:00) Harare, Pretoria",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4035),
                            Name = "South Africa Standard Time"
                        },
                        new
                        {
                            Id = 39,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4038),
                            Description = "(GMT+03:00) Moscow, St. Petersburg, Volgograd",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4039),
                            Name = "Russian Standard Time"
                        },
                        new
                        {
                            Id = 40,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4043),
                            Description = "(GMT+03:00) Kuwait, Riyadh",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4045),
                            Name = "Arab Standard Time"
                        },
                        new
                        {
                            Id = 41,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4048),
                            Description = "(GMT+03:00) Nairobi",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4051),
                            Name = "E. Africa Standard Time"
                        },
                        new
                        {
                            Id = 42,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4054),
                            Description = "(GMT+03:00) Baghdad",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4055),
                            Name = "Arabic Standard Time"
                        },
                        new
                        {
                            Id = 43,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4059),
                            Description = "(GMT+03:30) Tehran",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4060),
                            Name = "Iran Standard Time"
                        },
                        new
                        {
                            Id = 44,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4064),
                            Description = "(GMT+04:00) Abu Dhabi, Muscat",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4065),
                            Name = "Arabian Standard Time"
                        },
                        new
                        {
                            Id = 45,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4068),
                            Description = "(GMT+04:00) Baku, Tbilisi, Yerevan",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4071),
                            Name = "Caucasus Standard Time"
                        },
                        new
                        {
                            Id = 46,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4082),
                            Description = "(GMT+04:30) Kabul",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4083),
                            Name = "Transitional Islamic State of Afghanistan Standard Time"
                        },
                        new
                        {
                            Id = 47,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4086),
                            Description = "(GMT+05:00) Ekaterinburg",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4089),
                            Name = "Ekaterinburg Standard Time"
                        },
                        new
                        {
                            Id = 48,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4092),
                            Description = "(GMT+05:00) Tashkent",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4095),
                            Name = "West Asia Standard Time"
                        },
                        new
                        {
                            Id = 49,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4098),
                            Description = "(GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4099),
                            Name = "India Standard Time"
                        },
                        new
                        {
                            Id = 50,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4103),
                            Description = "(GMT+05:45) Kathmandu",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4104),
                            Name = "Nepal Standard Time"
                        },
                        new
                        {
                            Id = 51,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4108),
                            Description = "(GMT+06:00) Astana, Dhaka",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4109),
                            Name = "Central Asia Standard Time"
                        },
                        new
                        {
                            Id = 52,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4113),
                            Description = "(GMT+06:00) Sri Jayawardenepura",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4115),
                            Name = "Sri Lanka Standard Time"
                        },
                        new
                        {
                            Id = 53,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4118),
                            Description = "(GMT+06:00) Almaty, Novosibirsk",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4119),
                            Name = "N. Central Asia Standard Time"
                        },
                        new
                        {
                            Id = 54,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4123),
                            Description = "(GMT+06:30) Yangon (Rangoon)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4124),
                            Name = "Myanmar Standard Time"
                        },
                        new
                        {
                            Id = 55,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4128),
                            Description = "(GMT+07:00) Bangkok, Hanoi, Jakarta",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4129),
                            Name = "S.E. Asia Standard Time"
                        },
                        new
                        {
                            Id = 56,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4133),
                            Description = "(GMT+07:00) Krasnoyarsk",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4134),
                            Name = "North Asia Standard Time"
                        },
                        new
                        {
                            Id = 57,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4138),
                            Description = "(GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4140),
                            Name = "China Standard Time"
                        },
                        new
                        {
                            Id = 58,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4143),
                            Description = "(GMT+08:00) Kuala Lumpur, Singapore",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4145),
                            Name = "Singapore Standard Time"
                        },
                        new
                        {
                            Id = 59,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4148),
                            Description = "(GMT+08:00) Taipei",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4150),
                            Name = "Taipei Standard Time"
                        },
                        new
                        {
                            Id = 60,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4153),
                            Description = "(GMT+08:00) Perth",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4154),
                            Name = "W. Australia Standard Time"
                        },
                        new
                        {
                            Id = 61,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4158),
                            Description = "(GMT+08:00) Irkutsk, Ulaanbaatar",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4159),
                            Name = "North Asia East Standard Time"
                        },
                        new
                        {
                            Id = 62,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4163),
                            Description = "(GMT+09:00) Seoul",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4165),
                            Name = "Korea Standard Time"
                        },
                        new
                        {
                            Id = 63,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4169),
                            Description = "(GMT+09:00) Osaka, Sapporo, Tokyo",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4171),
                            Name = "Tokyo Standard Time"
                        },
                        new
                        {
                            Id = 64,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4174),
                            Description = "(GMT+09:00) Yakutsk",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4176),
                            Name = "Yakutsk Standard Time"
                        },
                        new
                        {
                            Id = 65,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4179),
                            Description = "(GMT+09:30) Darwin",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4181),
                            Name = "A.U.S. Central Standard Time"
                        },
                        new
                        {
                            Id = 66,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4184),
                            Description = "(GMT+09:30) AdelaIde",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4185),
                            Name = "Cen. Australia Standard Time"
                        },
                        new
                        {
                            Id = 67,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4189),
                            Description = "(GMT+10:00) Canberra, Melbourne, Sydney",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4191),
                            Name = "A.U.S. Eastern Standard Time"
                        },
                        new
                        {
                            Id = 68,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4194),
                            Description = "(GMT+10:00) Brisbane",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4195),
                            Name = "E. Australia Standard Time"
                        },
                        new
                        {
                            Id = 69,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4199),
                            Description = "(GMT+10:00) Hobart",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4200),
                            Name = "Tasmania Standard Time"
                        },
                        new
                        {
                            Id = 70,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4203),
                            Description = "(GMT+10:00) Vladivostok",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4205),
                            Name = "Vladivostok Standard Time"
                        },
                        new
                        {
                            Id = 71,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4208),
                            Description = "(GMT+10:00) Guam, Port Moresby",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4210),
                            Name = "West Pacific Standard Time"
                        },
                        new
                        {
                            Id = 72,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4213),
                            Description = "(GMT+11:00) Magadan, Solomon Islands, New Caledonia",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4215),
                            Name = "Central Pacific Standard Time"
                        },
                        new
                        {
                            Id = 73,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4218),
                            Description = "(GMT+12:00) Fiji, Kamchatka, Marshall Is.",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4219),
                            Name = "Fiji Islands Standard Time"
                        },
                        new
                        {
                            Id = 74,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4222),
                            Description = "(GMT+12:00) Auckland, Wellington",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4224),
                            Name = "New Zealand Standard Time"
                        },
                        new
                        {
                            Id = 75,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4227),
                            Description = "(GMT+13:00) Nuku'alofa",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4229),
                            Name = "Tonga Standard Time"
                        },
                        new
                        {
                            Id = 76,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4232),
                            Description = "(GMT-03:00) Buenos Aires",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4234),
                            Name = "Azerbaijan Standard Time "
                        },
                        new
                        {
                            Id = 77,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4237),
                            Description = "(GMT+02:00) Beirut",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4239),
                            Name = "MIddle East Standard Time"
                        },
                        new
                        {
                            Id = 78,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4242),
                            Description = "(GMT+02:00) Amman",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4244),
                            Name = "Jordan Standard Time"
                        },
                        new
                        {
                            Id = 79,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4247),
                            Description = "(GMT-06:00) Guadalajara, Mexico City, Monterrey - New",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4248),
                            Name = "Central Standard Time (Mexico)"
                        },
                        new
                        {
                            Id = 80,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4251),
                            Description = "(GMT-07:00) Chihuahua, La Paz, Mazatlan - New",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4253),
                            Name = "Mountain Standard Time (Mexico)"
                        },
                        new
                        {
                            Id = 81,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4262),
                            Description = "(GMT-08:00) Tijuana, Baja California",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4264),
                            Name = "Pacific Standard Time (Mexico)"
                        },
                        new
                        {
                            Id = 82,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4267),
                            Description = "(GMT+02:00) Windhoek",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4269),
                            Name = "Namibia Standard Time"
                        },
                        new
                        {
                            Id = 83,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4272),
                            Description = "(GMT+03:00) Tbilisi",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4273),
                            Name = "Georgian Standard Time"
                        },
                        new
                        {
                            Id = 84,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4277),
                            Description = "(GMT-04:00) Manaus",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4278),
                            Name = "Central Brazilian Standard Time"
                        },
                        new
                        {
                            Id = 85,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4282),
                            Description = "(GMT-03:00) MontevIdeo",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4283),
                            Name = "MontevIdeo Standard Time"
                        },
                        new
                        {
                            Id = 86,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4286),
                            Description = "(GMT+04:00) Yerevan",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4288),
                            Name = "Armenian Standard Time"
                        },
                        new
                        {
                            Id = 87,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4291),
                            Description = "(GMT-04:30) Caracas",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4293),
                            Name = "Venezuela Standard Time"
                        },
                        new
                        {
                            Id = 88,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4297),
                            Description = "(GMT-03:00) Buenos Aires",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4298),
                            Name = "Argentina Standard Time"
                        },
                        new
                        {
                            Id = 89,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4301),
                            Description = "(GMT) Casablanca",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4303),
                            Name = "Morocco Standard Time"
                        },
                        new
                        {
                            Id = 90,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4306),
                            Description = "(GMT+05:00) Islamabad, Karachi",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4307),
                            Name = "Pakistan Standard Time"
                        },
                        new
                        {
                            Id = 91,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4311),
                            Description = "(GMT+04:00) Port Louis",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4312),
                            Name = "Mauritius Standard Time"
                        },
                        new
                        {
                            Id = 92,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4317),
                            Description = "(GMT) Coordinated Universal Time",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4318),
                            Name = "UTC"
                        },
                        new
                        {
                            Id = 93,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4322),
                            Description = "(GMT-04:00) Asuncion",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4323),
                            Name = "Paraguay Standard Time"
                        },
                        new
                        {
                            Id = 94,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4326),
                            Description = "(GMT+12:00) Petropavlovsk-Kamchatsky",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 871, DateTimeKind.Local).AddTicks(4328),
                            Name = "Kamchatka Standard Time"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.ClientType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("ClientType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 387, DateTimeKind.Local).AddTicks(8136),
                            Description = "Individual",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 387, DateTimeKind.Local).AddTicks(9034),
                            Name = "Individual"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 387, DateTimeKind.Local).AddTicks(9986),
                            Description = "Organization",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 388, DateTimeKind.Local).AddTicks(7),
                            Name = "Organization"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.ClientUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("BillingContact")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("DesignationId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<bool>("EmailActivated")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsInternalUser")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("MiddleName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<bool>("PrimaryContact")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ReferralTypeId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<bool>("TermsAccepted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("TitleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DesignationId");

                    b.HasIndex("GenderId");

                    b.HasIndex("ReferralTypeId");

                    b.HasIndex("RoleId");

                    b.HasIndex("TitleId");

                    b.ToTable("ClientUser");
                });

            modelBuilder.Entity("MM.ClientModels.CommunicationPreference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CommunicationTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan?>("PreferredTimeFrom")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("PreferredTimeTo")
                        .HasColumnType("time(6)");

                    b.HasKey("Id");

                    b.HasIndex("CommunicationTypeId");

                    b.ToTable("CommunicationPreference");
                });

            modelBuilder.Entity("MM.ClientModels.CommunicationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("CommunicationType");
                });

            modelBuilder.Entity("MM.ClientModels.CorrespondenceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("CorrespondenceType");
                });

            modelBuilder.Entity("MM.ClientModels.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("ISO2Code")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<string>("ISO3Code")
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("PhoneCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 406, DateTimeKind.Local).AddTicks(9768),
                            ISO2Code = "ZA",
                            ISO3Code = "ZAF",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 407, DateTimeKind.Local).AddTicks(970),
                            Name = "South Africa",
                            PhoneCode = 27
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 407, DateTimeKind.Local).AddTicks(2175),
                            ISO2Code = "AU",
                            ISO3Code = "AUS",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 407, DateTimeKind.Local).AddTicks(2206),
                            Name = "Australia",
                            PhoneCode = 61
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 407, DateTimeKind.Local).AddTicks(2224),
                            ISO2Code = "IN",
                            ISO3Code = "IND",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 407, DateTimeKind.Local).AddTicks(2229),
                            Name = "India",
                            PhoneCode = 91
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 407, DateTimeKind.Local).AddTicks(2235),
                            ISO2Code = "GB",
                            ISO3Code = "GBR",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 407, DateTimeKind.Local).AddTicks(2237),
                            Name = "United Kingdom",
                            PhoneCode = 44
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 407, DateTimeKind.Local).AddTicks(2242),
                            ISO2Code = "US",
                            ISO3Code = "USA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 407, DateTimeKind.Local).AddTicks(2245),
                            Name = "United States",
                            PhoneCode = 1
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Cpd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CpdawardedById")
                        .HasColumnName("CPDAwardedById")
                        .HasColumnType("int");

                    b.Property<int>("Cpdearned")
                        .HasColumnName("CPDEarned")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CpdawardedById");

                    b.HasIndex("MemberId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("CPD");
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberCategorySetUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cpdcount")
                        .HasColumnName("CPDCount")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("MemberCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberCategoryId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("CPDMemberCategorySetUp");
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberLevelSetUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cpdcount")
                        .HasColumnName("CPDCount")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("MemberLevelId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberLevelId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("CPDMemberLevelSetUp");
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberTeamSetUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cpdcount")
                        .HasColumnName("CPDCount")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("MemberTeamId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberTeamId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("CPDMemberTeamSetUp");
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberTypeSetUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cpdcount")
                        .HasColumnName("CPDCount")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("MemberTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberTypeId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("CPDMemberTypeSetUp");
                });

            modelBuilder.Entity("MM.ClientModels.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Symbol")
                        .HasColumnType("varchar(5) CHARACTER SET utf8mb4")
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.ToTable("Currency");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "AFN",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 477, DateTimeKind.Local).AddTicks(9338),
                            Description = "Currency for  AFGHANISTAN",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(564),
                            Name = "Afghani",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 2,
                            Code = "ALL",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(1857),
                            Description = "ALBANIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(1894),
                            Name = "Lek",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 3,
                            Code = "DZD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(1927),
                            Description = "ALGERIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(1931),
                            Name = "Algerian Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 4,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(1939),
                            Description = "AMERICAN SAMOA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(1942),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 5,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(1950),
                            Description = "ANDORRA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(1954),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 6,
                            Code = "AOA",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(1961),
                            Description = "ANGOLA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(1964),
                            Name = "Kwanza",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 7,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(1971),
                            Description = "ANGUILLA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(1974),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 8,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2030),
                            Description = "ANTIGUA AND BARBUDA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2033),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 9,
                            Code = "ARS",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2043),
                            Description = "ARGENTINA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2046),
                            Name = "Argentine Peso",
                            Symbol = ""
                        },
                        new
                        {
                            Id = 10,
                            Code = "AMD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2055),
                            Description = "ARMENIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2059),
                            Name = "Armenian Dram",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 11,
                            Code = "AWG",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2066),
                            Description = "ARUBA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2070),
                            Name = "Aruban Florin",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 12,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2077),
                            Description = "AUSTRALIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2080),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 13,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2087),
                            Description = "AUSTRIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2090),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 14,
                            Code = "AZN",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2096),
                            Description = "AZERBAIJAN",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2099),
                            Name = "Azerbaijanian Manat",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 15,
                            Code = "BSD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2107),
                            Description = "BAHAMAS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2110),
                            Name = "Bahamian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 16,
                            Code = "BHD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2118),
                            Description = "BAHRAIN",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2121),
                            Name = "Bahraini Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 17,
                            Code = "BDT",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2128),
                            Description = "BANGLADESH",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2131),
                            Name = "Taka",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 18,
                            Code = "BBD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2138),
                            Description = "BARBADOS",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2140),
                            Name = "Barbados Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 19,
                            Code = "BYN",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2147),
                            Description = "BELARUS",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2150),
                            Name = "Belarussian Ruble",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 20,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2156),
                            Description = "BELGIUM",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2160),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 21,
                            Code = "BZD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2167),
                            Description = "BELIZE",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2169),
                            Name = "Belize Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 22,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2179),
                            Description = "BENIN",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2182),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 23,
                            Code = "BMD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2189),
                            Description = "BERMUDA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2192),
                            Name = "Bermudian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 24,
                            Code = "BTN",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2199),
                            Description = "BHUTAN",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2202),
                            Name = "Ngultrum",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 25,
                            Code = "INR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2209),
                            Description = "BHUTAN",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2212),
                            Name = "Indian Rupee",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 26,
                            Code = "BOB",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2220),
                            Description = "BOLIVIA (PLURINATIONAL STATE OF)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2223),
                            Name = "Boliviano",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 27,
                            Code = "BOV",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2231),
                            Description = "BOLIVIA (PLURINATIONAL STATE OF)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2235),
                            Name = "Mvdol",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 28,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2244),
                            Description = "BONAIRE, SINT EUSTATIUS AND SABA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2247),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 29,
                            Code = "BAM",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2253),
                            Description = "BOSNIA AND HERZEGOVINA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2256),
                            Name = "Convertible Mark",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 30,
                            Code = "BWP",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2263),
                            Description = "BOTSWANA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2266),
                            Name = "Pula",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 31,
                            Code = "NOK",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2274),
                            Description = "BOUVET ISLAND",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2278),
                            Name = "Norwegian Krone",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 32,
                            Code = "BRL",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2285),
                            Description = "BRAZIL",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2288),
                            Name = "Brazilian Real",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 33,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2307),
                            Description = "BRITISH INDIAN OCEAN TERRITORY (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2311),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 34,
                            Code = "BND",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2318),
                            Description = "BRUNEI DARUSSALAM",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2321),
                            Name = "Brunei Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 35,
                            Code = "BGN",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2328),
                            Description = "BULGARIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2331),
                            Name = "Bulgarian Lev",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 36,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2338),
                            Description = "BURKINA FASO",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2342),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 37,
                            Code = "BIF",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2349),
                            Description = "BURUNDI",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2354),
                            Name = "Burundi Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 38,
                            Code = "CVE",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2362),
                            Description = "CABO VERDE",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2365),
                            Name = "Cabo Verde Escudo",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 39,
                            Code = "KHR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2372),
                            Description = "CAMBODIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2375),
                            Name = "Riel",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 40,
                            Code = "XAF",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2382),
                            Description = "CAMEROON",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2386),
                            Name = "CFA Franc BEAC",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 41,
                            Code = "CAD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2393),
                            Description = "CANADA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2396),
                            Name = "Canadian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 42,
                            Code = "KYD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2403),
                            Description = "CAYMAN ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2407),
                            Name = "Cayman Islands Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 43,
                            Code = "XAF",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2414),
                            Description = "CENTRAL AFRICAN REPUBLIC (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2418),
                            Name = "CFA Franc BEAC",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 44,
                            Code = "XAF",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2425),
                            Description = "CHAD",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2428),
                            Name = "CFA Franc BEAC",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 45,
                            Code = "CLF",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2435),
                            Description = "CHILE",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2438),
                            Name = "Unidad de Fomento",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 46,
                            Code = "CLP",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2446),
                            Description = "CHILE",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2450),
                            Name = "Chilean Peso",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 47,
                            Code = "CNY",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2457),
                            Description = "CHINA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2460),
                            Name = "Yuan Renminbi",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 48,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2467),
                            Description = "CHRISTMAS ISLAND",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2470),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 49,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2477),
                            Description = "COCOS (KEELING) ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2481),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 50,
                            Code = "COP",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2487),
                            Description = "COLOMBIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2490),
                            Name = "Colombian Peso",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 51,
                            Code = "COU",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2497),
                            Description = "COLOMBIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2500),
                            Name = "Unidad de Valor Real",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 52,
                            Code = "KMF",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2508),
                            Description = "COMOROS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2511),
                            Name = "Comoro Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 53,
                            Code = "CDF",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2518),
                            Description = "CONGO (THE DEMOCRATIC REPUBLIC OF THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2520),
                            Name = "Congolese Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 54,
                            Code = "XAF",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2527),
                            Description = "CONGO (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2530),
                            Name = "CFA Franc BEAC",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 55,
                            Code = "NZD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2537),
                            Description = "COOK ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2540),
                            Name = "New Zealand Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 56,
                            Code = "CRC",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2547),
                            Description = "COSTA RICA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2550),
                            Name = "Costa Rican Colon",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 57,
                            Code = "HRK",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2557),
                            Description = "CROATIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2561),
                            Name = "Kuna",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 58,
                            Code = "CUC",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2568),
                            Description = "CUBA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2571),
                            Name = "Peso Convertible",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 59,
                            Code = "CUP",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2588),
                            Description = "CUBA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2592),
                            Name = "Cuban Peso",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 60,
                            Code = "ANG",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2599),
                            Description = "CURAÇAO",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2603),
                            Name = "Netherlands Antillean Guilder",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 61,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2610),
                            Description = "CYPRUS",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2615),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 62,
                            Code = "CZK",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2625),
                            Description = "CZECH REPUBLIC (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2628),
                            Name = "Czech Koruna",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 63,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2636),
                            Description = "CÔTE D'IVOIRE",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2640),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 64,
                            Code = "DKK",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2648),
                            Description = "DENMARK",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2651),
                            Name = "Danish Krone",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 65,
                            Code = "DJF",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2660),
                            Description = "DJIBOUTI",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2664),
                            Name = "Djibouti Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 66,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2672),
                            Description = "DOMINICA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2675),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 67,
                            Code = "DOP",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2681),
                            Description = "DOMINICAN REPUBLIC (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2685),
                            Name = "Dominican Peso",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 68,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2692),
                            Description = "ECUADOR",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2695),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 69,
                            Code = "EGP",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2703),
                            Description = "EGYPT",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2706),
                            Name = "Egyptian Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 70,
                            Code = "SVC",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2712),
                            Description = "EL SALVADOR",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2714),
                            Name = "El Salvador Colon",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 71,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2721),
                            Description = "EL SALVADOR",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2724),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 72,
                            Code = "XAF",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2731),
                            Description = "EQUATORIAL GUINEA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2736),
                            Name = "CFA Franc BEAC",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 73,
                            Code = "ERN",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2744),
                            Description = "ERITREA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2748),
                            Name = "Nakfa",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 74,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2756),
                            Description = "ESTONIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2758),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 75,
                            Code = "ETB",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2767),
                            Description = "ETHIOPIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2769),
                            Name = "Ethiopian Birr",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 76,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2779),
                            Description = "EUROPEAN UNION",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2782),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 77,
                            Code = "FKP",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2789),
                            Description = "FALKLAND ISLANDS (THE) [MALVINAS]",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2792),
                            Name = "Falkland Islands Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 78,
                            Code = "DKK",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2798),
                            Description = "FAROE ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2801),
                            Name = "Danish Krone",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 79,
                            Code = "FJD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2809),
                            Description = "FIJI",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2812),
                            Name = "Fiji Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 80,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2818),
                            Description = "FINLAND",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2821),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 81,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2828),
                            Description = "FRANCE",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2830),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 82,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2837),
                            Description = "FRENCH GUIANA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2840),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 83,
                            Code = "XPF",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2848),
                            Description = "FRENCH POLYNESIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2852),
                            Name = "CFP Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 84,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2870),
                            Description = "FRENCH SOUTHERN TERRITORIES (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2873),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 85,
                            Code = "XAF",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2880),
                            Description = "GABON",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2884),
                            Name = "CFA Franc BEAC",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 86,
                            Code = "GMD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2891),
                            Description = "GAMBIA (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2894),
                            Name = "Dalasi",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 87,
                            Code = "GEL",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2902),
                            Description = "GEORGIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2904),
                            Name = "Lari",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 88,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2911),
                            Description = "GERMANY",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2914),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 89,
                            Code = "GHS",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2921),
                            Description = "GHANA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2924),
                            Name = "Ghana Cedi",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 90,
                            Code = "GIP",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2931),
                            Description = "GIBRALTAR",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2935),
                            Name = "Gibraltar Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 91,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2942),
                            Description = "GREECE",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2945),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 92,
                            Code = "DKK",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2952),
                            Description = "GREENLAND",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2956),
                            Name = "Danish Krone",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 93,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2964),
                            Description = "GRENADA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2968),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 94,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2975),
                            Description = "GUADELOUPE",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2978),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 95,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2985),
                            Description = "GUAM",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2988),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 96,
                            Code = "GTQ",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2995),
                            Description = "GUATEMALA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(2998),
                            Name = "Quetzal",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 97,
                            Code = "GBP",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3006),
                            Description = "GUERNSEY",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3009),
                            Name = "Pound Sterling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 98,
                            Code = "GNF",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3017),
                            Description = "GUINEA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3020),
                            Name = "Guinea Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 99,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3027),
                            Description = "GUINEA-BISSAU",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3030),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 100,
                            Code = "GYD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3037),
                            Description = "GUYANA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3040),
                            Name = "Guyana Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 101,
                            Code = "HTG",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3047),
                            Description = "HAITI",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3049),
                            Name = "Gourde",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 102,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3057),
                            Description = "HAITI",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3060),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 103,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3067),
                            Description = "HEARD ISLAND AND McDONALD ISLANDS",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3070),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 104,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3077),
                            Description = "HOLY SEE (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3080),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 105,
                            Code = "HNL",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3087),
                            Description = "HONDURAS",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3089),
                            Name = "Lempira",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 106,
                            Code = "HKD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3097),
                            Description = "HONG KONG",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3100),
                            Name = "Hong Kong Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 107,
                            Code = "HUF",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3107),
                            Description = "HUNGARY",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3111),
                            Name = "Forint",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 108,
                            Code = "ISK",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3119),
                            Description = "ICELAND",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3122),
                            Name = "Iceland Krona",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 109,
                            Code = "INR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3130),
                            Description = "INDIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3133),
                            Name = "Indian Rupee",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 110,
                            Code = "IDR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3150),
                            Description = "INDONESIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3155),
                            Name = "Rupiah",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 111,
                            Code = "XDR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3165),
                            Description = "INTERNATIONAL MONETARY FUND (IMF) ",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3168),
                            Name = "SDR (Special Drawing Right)",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 112,
                            Code = "IRR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3175),
                            Description = "IRAN (ISLAMIC REPUBLIC OF)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3179),
                            Name = "Iranian Rial",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 113,
                            Code = "IQD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3186),
                            Description = "IRAQ",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3189),
                            Name = "Iraqi Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 114,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3196),
                            Description = "IRELAND",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3199),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 115,
                            Code = "GBP",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3208),
                            Description = "ISLE OF MAN",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3211),
                            Name = "Pound Sterling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 116,
                            Code = "ILS",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3217),
                            Description = "ISRAEL",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3220),
                            Name = "New Israeli Sheqel",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 117,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3228),
                            Description = "ITALY",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3231),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 118,
                            Code = "JMD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3239),
                            Description = "JAMAICA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3242),
                            Name = "Jamaican Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 119,
                            Code = "JPY",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3250),
                            Description = "JAPAN",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3253),
                            Name = "Yen",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 120,
                            Code = "GBP",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3260),
                            Description = "JERSEY",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3263),
                            Name = "Pound Sterling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 121,
                            Code = "JOD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3270),
                            Description = "JORDAN",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3273),
                            Name = "Jordanian Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 122,
                            Code = "KZT",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3279),
                            Description = "KAZAKHSTAN",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3282),
                            Name = "Tenge",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 123,
                            Code = "KES",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3289),
                            Description = "KENYA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3292),
                            Name = "Kenyan Shilling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 124,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3299),
                            Description = "KIRIBATI",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3303),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 125,
                            Code = "KPW",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3310),
                            Description = "KOREA (THE DEMOCRATIC PEOPLE’S REPUBLIC OF)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3313),
                            Name = "North Korean Won",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 126,
                            Code = "KRW",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3321),
                            Description = "KOREA (THE REPUBLIC OF)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3324),
                            Name = "Won",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 127,
                            Code = "KWD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3331),
                            Description = "KUWAIT",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3334),
                            Name = "Kuwaiti Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 128,
                            Code = "KGS",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3341),
                            Description = "KYRGYZSTAN",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3344),
                            Name = "Som",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 129,
                            Code = "LAK",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3351),
                            Description = "LAO PEOPLE’S DEMOCRATIC REPUBLIC (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3354),
                            Name = "Kip",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 130,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3362),
                            Description = "LATVIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3365),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 131,
                            Code = "LBP",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3372),
                            Description = "LEBANON",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3375),
                            Name = "Lebanese Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 132,
                            Code = "LSL",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3382),
                            Description = "LESOTHO",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3385),
                            Name = "Loti",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 133,
                            Code = "ZAR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3392),
                            Description = "LESOTHO",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3395),
                            Name = "Rand",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 134,
                            Code = "LRD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3402),
                            Description = "LIBERIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3404),
                            Name = "Liberian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 135,
                            Code = "LYD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3424),
                            Description = "LIBYA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3427),
                            Name = "Libyan Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 136,
                            Code = "CHF",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3434),
                            Description = "LIECHTENSTEIN",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3437),
                            Name = "Swiss Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 137,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3444),
                            Description = "LITHUANIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3447),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 138,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3454),
                            Description = "LUXEMBOURG",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3457),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 139,
                            Code = "MOP",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3464),
                            Description = "MACAO",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3466),
                            Name = "Pataca",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 140,
                            Code = "MGA",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3474),
                            Description = "MADAGASCAR",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3477),
                            Name = "Malagasy Ariary",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 141,
                            Code = "MWK",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3484),
                            Description = "MALAWI",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3487),
                            Name = "Kwacha",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 142,
                            Code = "MYR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3493),
                            Description = "MALAYSIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3496),
                            Name = "Malaysian Ringgit",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 143,
                            Code = "MVR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3504),
                            Description = "MALDIVES",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3507),
                            Name = "Rufiyaa",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 144,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3514),
                            Description = "MALI",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3517),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 145,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3524),
                            Description = "MALTA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3527),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 146,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3533),
                            Description = "MARSHALL ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3537),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 147,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3544),
                            Description = "MARTINIQUE",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3546),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 148,
                            Code = "MRU",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3553),
                            Description = "MAURITANIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3556),
                            Name = "Ouguiya",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 149,
                            Code = "MUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3562),
                            Description = "MAURITIUS",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3566),
                            Name = "Mauritius Rupee",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 150,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3573),
                            Description = "MAYOTTE",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3576),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 151,
                            Code = "MXN",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3583),
                            Description = "MEXICO",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3586),
                            Name = "Mexican Peso",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 152,
                            Code = "MXV",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3592),
                            Description = "MEXICO",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3595),
                            Name = "Mexican Unidad de Inversion (UDI)",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 153,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3602),
                            Description = "MICRONESIA (FEDERATED STATES OF)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3605),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 154,
                            Code = "MDL",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3613),
                            Description = "MOLDOVA (THE REPUBLIC OF)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3615),
                            Name = "Moldovan Leu",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 155,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3622),
                            Description = "MONACO",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3625),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 156,
                            Code = "MNT",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3633),
                            Description = "MONGOLIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3636),
                            Name = "Tugrik",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 157,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3642),
                            Description = "MONTENEGRO",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3645),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 158,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3651),
                            Description = "MONTSERRAT",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3654),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 159,
                            Code = "MAD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3663),
                            Description = "MOROCCO",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3666),
                            Name = "Moroccan Dirham",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 160,
                            Code = "MZN",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3673),
                            Description = "MOZAMBIQUE",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3676),
                            Name = "Mozambique Metical",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 161,
                            Code = "MMK",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3692),
                            Description = "MYANMAR",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3695),
                            Name = "Kyat",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 162,
                            Code = "NAD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3702),
                            Description = "NAMIBIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3705),
                            Name = "Namibia Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 163,
                            Code = "ZAR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3712),
                            Description = "NAMIBIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3715),
                            Name = "Rand",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 164,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3722),
                            Description = "NAURU",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3725),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 165,
                            Code = "NPR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3733),
                            Description = "NEPAL",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3736),
                            Name = "Nepalese Rupee",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 166,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3744),
                            Description = "NETHERLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3747),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 167,
                            Code = "XPF",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3754),
                            Description = "NEW CALEDONIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3757),
                            Name = "CFP Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 168,
                            Code = "NZD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3766),
                            Description = "NEW ZEALAND",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3768),
                            Name = "New Zealand Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 169,
                            Code = "NIO",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3776),
                            Description = "NICARAGUA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3779),
                            Name = "Cordoba Oro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 170,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3786),
                            Description = "NIGER (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3789),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 171,
                            Code = "NGN",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3797),
                            Description = "NIGERIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3800),
                            Name = "Naira",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 172,
                            Code = "NZD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3807),
                            Description = "NIUE",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3810),
                            Name = "New Zealand Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 173,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3817),
                            Description = "NORFOLK ISLAND",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3821),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 174,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3828),
                            Description = "NORTHERN MARIANA ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3831),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 175,
                            Code = "NOK",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3838),
                            Description = "NORWAY",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3842),
                            Name = "Norwegian Krone",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 176,
                            Code = "OMR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3849),
                            Description = "OMAN",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3854),
                            Name = "Rial Omani",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 177,
                            Code = "PKR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3862),
                            Description = "PAKISTAN",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3865),
                            Name = "Pakistan Rupee",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 178,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3872),
                            Description = "PALAU",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3874),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 179,
                            Code = "PAB",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3882),
                            Description = "PANAMA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3885),
                            Name = "Balboa",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 180,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3891),
                            Description = "PANAMA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3894),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 181,
                            Code = "PGK",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3901),
                            Description = "PAPUA NEW GUINEA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3904),
                            Name = "Kina",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 182,
                            Code = "PYG",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3912),
                            Description = "PARAGUAY",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3915),
                            Name = "Guarani",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 183,
                            Code = "PEN",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3922),
                            Description = "PERU",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3925),
                            Name = "Nuevo Sol",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 184,
                            Code = "PHP",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3932),
                            Description = "PHILIPPINES (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3935),
                            Name = "Philippine Peso",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 185,
                            Code = "NZD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3942),
                            Description = "PITCAIRN",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3945),
                            Name = "New Zealand Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 186,
                            Code = "PLN",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3965),
                            Description = "POLAND",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3968),
                            Name = "Zloty",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 187,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3977),
                            Description = "PORTUGAL",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3980),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 188,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3986),
                            Description = "PUERTO RICO",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3990),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 189,
                            Code = "QAR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(3998),
                            Description = "QATAR",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4001),
                            Name = "Qatari Rial",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 190,
                            Code = "MKD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4008),
                            Description = "REPUBLIC OF NORTH MACEDONIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4011),
                            Name = "Denar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 191,
                            Code = "RON",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4018),
                            Description = "ROMANIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4021),
                            Name = "Romanian Leu",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 192,
                            Code = "RUB",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4028),
                            Description = "RUSSIAN FEDERATION (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4031),
                            Name = "Russian Ruble",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 193,
                            Code = "RWF",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4038),
                            Description = "RWANDA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4041),
                            Name = "Rwanda Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 194,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4048),
                            Description = "RÉUNION",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4051),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 195,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4058),
                            Description = "SAINT BARTHÉLEMY",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4062),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 196,
                            Code = "SHP",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4068),
                            Description = "SAINT HELENA, ASCENSION AND TRISTAN DA CUNHA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4071),
                            Name = "Saint Helena Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 197,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4078),
                            Description = "SAINT KITTS AND NEVIS",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4081),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 198,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4088),
                            Description = "SAINT LUCIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4091),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 199,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4099),
                            Description = "SAINT MARTIN (FRENCH PART)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4101),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 200,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4108),
                            Description = "SAINT PIERRE AND MIQUELON",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4112),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 201,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4119),
                            Description = "SAINT VINCENT AND THE GRENADINES",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4122),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 202,
                            Code = "WST",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4129),
                            Description = "SAMOA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4132),
                            Name = "Tala",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 203,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4140),
                            Description = "SAN MARINO",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4143),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 204,
                            Code = "STN",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4150),
                            Description = "SAO TOME AND PRINCIPE",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4153),
                            Name = "Dobra",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 205,
                            Code = "SAR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4160),
                            Description = "SAUDI ARABIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4164),
                            Name = "Saudi Riyal",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 206,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4171),
                            Description = "SENEGAL",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4174),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 207,
                            Code = "RSD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4181),
                            Description = "SERBIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4184),
                            Name = "Serbian Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 208,
                            Code = "SCR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4191),
                            Description = "SEYCHELLES",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4194),
                            Name = "Seychelles Rupee",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 209,
                            Code = "SLL",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4201),
                            Description = "SIERRA LEONE",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4204),
                            Name = "Leone",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 210,
                            Code = "SGD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4210),
                            Description = "SINGAPORE",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4213),
                            Name = "Singapore Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 211,
                            Code = "ANG",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4221),
                            Description = "SINT MAARTEN (DUTCH PART)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4223),
                            Name = "Netherlands Antillean Guilder",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 212,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4242),
                            Description = "SLOVAKIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4246),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 213,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4253),
                            Description = "SLOVENIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4257),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 214,
                            Code = "SBD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4263),
                            Description = "SOLOMON ISLANDS",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4266),
                            Name = "Solomon Islands Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 215,
                            Code = "SOS",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4273),
                            Description = "SOMALIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4276),
                            Name = "Somali Shilling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 216,
                            Code = "ZAR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4284),
                            Description = "SOUTH AFRICA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4287),
                            Name = "Rand",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 217,
                            Code = "SSP",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4294),
                            Description = "SOUTH SUDAN",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4298),
                            Name = "South Sudanese Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 218,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4305),
                            Description = "SPAIN",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4308),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 219,
                            Code = "LKR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4315),
                            Description = "SRI LANKA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4319),
                            Name = "Sri Lanka Rupee",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 220,
                            Code = "SDG",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4327),
                            Description = "SUDAN (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4329),
                            Name = "Sudanese Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 221,
                            Code = "SRD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4336),
                            Description = "SURINAME",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4339),
                            Name = "Surinam Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 222,
                            Code = "NOK",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4346),
                            Description = "SVALBARD AND JAN MAYEN",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4349),
                            Name = "Norwegian Krone",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 223,
                            Code = "SZL",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4356),
                            Description = "SWAZILAND",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4358),
                            Name = "Lilangeni",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 224,
                            Code = "SEK",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4365),
                            Description = "SWEDEN",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4368),
                            Name = "Swedish Krona",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 225,
                            Code = "CHE",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4375),
                            Description = "SWITZERLAND",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4378),
                            Name = "WIR Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 226,
                            Code = "CHF",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4386),
                            Description = "SWITZERLAND",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4390),
                            Name = "Swiss Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 227,
                            Code = "CHW",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4396),
                            Description = "SWITZERLAND",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4400),
                            Name = "WIR Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 228,
                            Code = "SYP",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4407),
                            Description = "SYRIAN ARAB REPUBLIC",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4410),
                            Name = "Syrian Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 229,
                            Code = "TWD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4418),
                            Description = "TAIWAN (PROVINCE OF CHINA)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4420),
                            Name = "New Taiwan Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 230,
                            Code = "TJS",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4427),
                            Description = "TAJIKISTAN",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4430),
                            Name = "Somoni",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 231,
                            Code = "TZS",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4437),
                            Description = "TANZANIA, UNITED REPUBLIC OF",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4441),
                            Name = "Tanzanian Shilling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 232,
                            Code = "THB",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4448),
                            Description = "THAILAND",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4451),
                            Name = "Baht",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 233,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4458),
                            Description = "TIMOR-LESTE",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4461),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 234,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4468),
                            Description = "TOGO",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4471),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 235,
                            Code = "NZD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4478),
                            Description = "TOKELAU",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4481),
                            Name = "New Zealand Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 236,
                            Code = "TOP",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4488),
                            Description = "TONGA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4491),
                            Name = "Pa’anga",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 237,
                            Code = "TTD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4508),
                            Description = "TRINIDAD AND TOBAGO",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4511),
                            Name = "Trinidad and Tobago Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 238,
                            Code = "TND",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4518),
                            Description = "TUNISIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4522),
                            Name = "Tunisian Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 239,
                            Code = "TRY",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4529),
                            Description = "TURKEY",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4532),
                            Name = "Turkish Lira",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 240,
                            Code = "TMT",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4539),
                            Description = "TURKMENISTAN",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4543),
                            Name = "Turkmenistan New Manat",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 241,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4549),
                            Description = "TURKS AND CAICOS ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4552),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 242,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4560),
                            Description = "TUVALU",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4562),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 243,
                            Code = "UGX",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4569),
                            Description = "UGANDA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4572),
                            Name = "Uganda Shilling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 244,
                            Code = "UAH",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4579),
                            Description = "UKRAINE",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4582),
                            Name = "Hryvnia",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 245,
                            Code = "AED",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4588),
                            Description = "UNITED ARAB EMIRATES (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4591),
                            Name = "UAE Dirham",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 246,
                            Code = "GBP",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4600),
                            Description = "UNITED KINGDOM OF GREAT BRITAIN AND NORTHERN IRELAND (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4603),
                            Name = "Pound Sterling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 247,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4609),
                            Description = "UNITED STATES MINOR OUTLYING ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4612),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 248,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4620),
                            Description = "UNITED STATES OF AMERICA (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4623),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 249,
                            Code = "USN",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4630),
                            Description = "UNITED STATES OF AMERICA (THE)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4633),
                            Name = "US Dollar (Next day)",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 250,
                            Code = "UYI",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4640),
                            Description = "URUGUAY",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4643),
                            Name = "Uruguay Peso en Unidades Indexadas (URUIURUI)",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 251,
                            Code = "UYU",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4649),
                            Description = "URUGUAY",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4652),
                            Name = "Peso Uruguayo",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 252,
                            Code = "UZS",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4660),
                            Description = "UZBEKISTAN",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4663),
                            Name = "Uzbekistan Sum",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 253,
                            Code = "VUV",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4670),
                            Description = "VANUATU",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4672),
                            Name = "Vatu",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 254,
                            Code = "VEF",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4679),
                            Description = "VENEZUELA (BOLIVARIAN REPUBLIC OF)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4682),
                            Name = "Bolivar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 255,
                            Code = "VND",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4688),
                            Description = "VIET NAM",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4691),
                            Name = "Dong",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 256,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4697),
                            Description = "VIRGIN ISLANDS (BRITISH)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4700),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 257,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4707),
                            Description = "VIRGIN ISLANDS (U.S.)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4710),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 258,
                            Code = "XPF",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4716),
                            Description = "WALLIS AND FUTUNA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4719),
                            Name = "CFP Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 259,
                            Code = "MAD",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4726),
                            Description = "WESTERN SAHARA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4729),
                            Name = "Moroccan Dirham",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 260,
                            Code = "YER",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4736),
                            Description = "YEMEN",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4739),
                            Name = "Yemeni Rial",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 261,
                            Code = "ZMW",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4746),
                            Description = "ZAMBIA",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4749),
                            Name = "Zambian Kwacha",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 262,
                            Code = "ZWL",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4756),
                            Description = "ZIMBABWE",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4759),
                            Name = "Zimbabwe Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 263,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4776),
                            Description = "ÅLAND ISLANDS",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 478, DateTimeKind.Local).AddTicks(4780),
                            Name = "Euro",
                            Symbol = " "
                        });
                });

            modelBuilder.Entity("MM.ClientModels.CustomField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime1")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime10")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime11")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime12")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime13")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime14")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime15")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime16")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime17")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime18")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime19")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime2")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime20")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime3")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime4")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime5")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime6")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime7")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime8")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime9")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("Decimal1")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal10")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal11")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal12")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal13")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal14")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal15")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal16")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal17")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal18")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal19")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal2")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal20")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal3")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal4")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal5")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal6")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal7")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal8")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal9")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("Int1")
                        .HasColumnType("int");

                    b.Property<int?>("Int10")
                        .HasColumnType("int");

                    b.Property<int?>("Int11")
                        .HasColumnType("int");

                    b.Property<int?>("Int12")
                        .HasColumnType("int");

                    b.Property<int?>("Int13")
                        .HasColumnType("int");

                    b.Property<int?>("Int14")
                        .HasColumnType("int");

                    b.Property<int?>("Int15")
                        .HasColumnType("int");

                    b.Property<int?>("Int16")
                        .HasColumnType("int");

                    b.Property<int?>("Int17")
                        .HasColumnType("int");

                    b.Property<int?>("Int18")
                        .HasColumnType("int");

                    b.Property<int?>("Int19")
                        .HasColumnType("int");

                    b.Property<int?>("Int2")
                        .HasColumnType("int");

                    b.Property<int?>("Int20")
                        .HasColumnType("int");

                    b.Property<int?>("Int3")
                        .HasColumnType("int");

                    b.Property<int?>("Int4")
                        .HasColumnType("int");

                    b.Property<int?>("Int5")
                        .HasColumnType("int");

                    b.Property<int?>("Int6")
                        .HasColumnType("int");

                    b.Property<int?>("Int7")
                        .HasColumnType("int");

                    b.Property<int?>("Int8")
                        .HasColumnType("int");

                    b.Property<int?>("Int9")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup1")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup10")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup11")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup12")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup13")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup14")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup15")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup16")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup17")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup18")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup19")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup2")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup20")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup3")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup4")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup5")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup6")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup7")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup8")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup9")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TableName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("TablePrimaryKeyValue")
                        .HasColumnType("int");

                    b.Property<string>("Text1")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text10")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text11")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text12")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text13")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text14")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text15")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text16")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text17")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text18")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text19")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text2")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text20")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text3")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text4")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text5")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text6")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text7")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text8")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text9")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("CustomField");
                });

            modelBuilder.Entity("MM.ClientModels.CustomFieldLookUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("FieldIndex")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("CustomFieldLookUp");
                });

            modelBuilder.Entity("MM.ClientModels.CustomFieldName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DataType")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("FieldIndex")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("CustomFieldName");
                });

            modelBuilder.Entity("MM.ClientModels.DateSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(40) CHARACTER SET utf8mb4")
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.ToTable("DateSetting");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 491, DateTimeKind.Local).AddTicks(728),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 491, DateTimeKind.Local).AddTicks(2194),
                            Name = "12/03/2020"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 491, DateTimeKind.Local).AddTicks(3663),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 491, DateTimeKind.Local).AddTicks(3710),
                            Name = "03/12/2020"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 491, DateTimeKind.Local).AddTicks(3737),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 491, DateTimeKind.Local).AddTicks(3740),
                            Name = "03.12.2020"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 491, DateTimeKind.Local).AddTicks(3744),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 491, DateTimeKind.Local).AddTicks(3747),
                            Name = "03-12-2020"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 491, DateTimeKind.Local).AddTicks(3752),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 491, DateTimeKind.Local).AddTicks(3755),
                            Name = "03 Dec 2020"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 491, DateTimeKind.Local).AddTicks(3761),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 491, DateTimeKind.Local).AddTicks(3764),
                            Name = "03-Dec-2020"
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 491, DateTimeKind.Local).AddTicks(3770),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 491, DateTimeKind.Local).AddTicks(3773),
                            Name = "2020-12-03"
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 491, DateTimeKind.Local).AddTicks(3780),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 491, DateTimeKind.Local).AddTicks(3783),
                            Name = "Friday, December 03, 2020"
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 491, DateTimeKind.Local).AddTicks(3788),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 491, DateTimeKind.Local).AddTicks(3791),
                            Name = "Fri, December 03, 2020"
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 491, DateTimeKind.Local).AddTicks(3796),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 491, DateTimeKind.Local).AddTicks(3799),
                            Name = "December 03, 2020"
                        },
                        new
                        {
                            Id = 11,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 491, DateTimeKind.Local).AddTicks(3803),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 491, DateTimeKind.Local).AddTicks(3805),
                            Name = "03 December 2020"
                        },
                        new
                        {
                            Id = 12,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 491, DateTimeKind.Local).AddTicks(3809),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 491, DateTimeKind.Local).AddTicks(3813),
                            Name = "3 Dec 2020"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Designation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Designation");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 502, DateTimeKind.Local).AddTicks(7815),
                            Description = "Operations manager",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 502, DateTimeKind.Local).AddTicks(9185),
                            Name = "Operations manager"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 503, DateTimeKind.Local).AddTicks(622),
                            Description = "Quality control, safety, environmental manager",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 503, DateTimeKind.Local).AddTicks(651),
                            Name = "Quality control, safety, environmental manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 503, DateTimeKind.Local).AddTicks(678),
                            Description = "Accountant, bookkeeper, controller",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 503, DateTimeKind.Local).AddTicks(682),
                            Name = "Accountant, bookkeeper, controller"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 503, DateTimeKind.Local).AddTicks(688),
                            Description = "Office manager",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 503, DateTimeKind.Local).AddTicks(691),
                            Name = "Office manager"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 503, DateTimeKind.Local).AddTicks(695),
                            Description = "Receptionist",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 503, DateTimeKind.Local).AddTicks(697),
                            Name = "Receptionist"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 503, DateTimeKind.Local).AddTicks(702),
                            Description = "Foreperson, supervisor, lead person",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 503, DateTimeKind.Local).AddTicks(705),
                            Name = "Foreperson, supervisor, lead person"
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 503, DateTimeKind.Local).AddTicks(709),
                            Description = "Marketing manager",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 503, DateTimeKind.Local).AddTicks(712),
                            Name = "Marketing manager"
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 503, DateTimeKind.Local).AddTicks(717),
                            Description = "Purchasing manager",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 503, DateTimeKind.Local).AddTicks(720),
                            Name = "Purchasing manager"
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 503, DateTimeKind.Local).AddTicks(725),
                            Description = "Shipping and receiving person or manager",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 503, DateTimeKind.Local).AddTicks(729),
                            Name = "Shipping and receiving person or manager"
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 503, DateTimeKind.Local).AddTicks(734),
                            Description = "Professional staff",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 503, DateTimeKind.Local).AddTicks(737),
                            Name = "Professional staff"
                        },
                        new
                        {
                            Id = 11,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 503, DateTimeKind.Local).AddTicks(743),
                            Description = "Production Manager",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 503, DateTimeKind.Local).AddTicks(747),
                            Name = "Production Manager"
                        },
                        new
                        {
                            Id = 12,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 503, DateTimeKind.Local).AddTicks(752),
                            Description = "Chief Financial Officer (CFO)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 503, DateTimeKind.Local).AddTicks(755),
                            Name = "Chief Financial Officer (CFO)"
                        },
                        new
                        {
                            Id = 13,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 503, DateTimeKind.Local).AddTicks(761),
                            Description = "Vice President of Marketing or Marketing Manager",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 503, DateTimeKind.Local).AddTicks(764),
                            Name = "Vice President of Marketing or Marketing Manager"
                        },
                        new
                        {
                            Id = 14,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 503, DateTimeKind.Local).AddTicks(770),
                            Description = "Chief Operating Officer (COO)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 503, DateTimeKind.Local).AddTicks(773),
                            Name = "Chief Operating Officer (COO)"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Chief Executive Officer (CEO) or President",
                            Name = "Chief Executive Officer (CEO) or President"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Donation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DonatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DonorNotes")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("PromotionDetailId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("PromotionDetailId");

                    b.ToTable("Donation");
                });

            modelBuilder.Entity("MM.ClientModels.EmailCcrule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EmailTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmailTypeId");

                    b.HasIndex("RoleId");

                    b.ToTable("EmailCCRule");
                });

            modelBuilder.Entity("MM.ClientModels.EmailTemplateContent", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailContent")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasMaxLength(4000);

                    b.Property<int>("EmailTemplateNameId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("EmailTemplateNameId");

                    b.ToTable("EmailTemplateContent");
                });

            modelBuilder.Entity("MM.ClientModels.EmailTemplateName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("EmailTemplateName");
                });

            modelBuilder.Entity("MM.ClientModels.EmailType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("EmailType");
                });

            modelBuilder.Entity("MM.ClientModels.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("MM.ClientModels.EquipmentCount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AvaialbleCount")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.ToTable("EquipmentCount");
                });

            modelBuilder.Entity("MM.ClientModels.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<bool>("AllowCancellations")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("AllowGuestRegistrations")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("AllowRegistration")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CancellationbeforeDays")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(2000) CHARACTER SET utf8mb4")
                        .HasMaxLength(2000);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time(2)");

                    b.Property<string>("EventUniqueName")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<int?>("GuestLimitPerRegistrant")
                        .HasColumnType("int");

                    b.Property<bool>("InternalOrExternal")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsChargableEvent")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsCpdevent")
                        .HasColumnName("IsCPDEvent")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MaxRegistrationsAllowed")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("OrganizerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegEndDate")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan>("RegEndTime")
                        .HasColumnType("time(2)");

                    b.Property<DateTime>("RegStartDate")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan>("RegStartTime")
                        .HasColumnType("time(2)");

                    b.Property<bool>("ShowMaxRegistrationsAllowed")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time(2)");

                    b.Property<int>("TimeZoneId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("OrganizerId");

                    b.HasIndex("TimeZoneId");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("MM.ClientModels.EventAccess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool?>("AdminOnly")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("Anyone")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<bool?>("RestrictedList")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("EventAccess");
                });

            modelBuilder.Entity("MM.ClientModels.EventAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan>("SignInTime")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan>("SingOutTime")
                        .HasColumnType("time(6)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("MemberId");

                    b.ToTable("EventAttendance");
                });

            modelBuilder.Entity("MM.ClientModels.EventCommunication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Announcement1ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Announcement1Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Announcement1SentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Announcement2ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Announcement2Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Announcement2SentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Announcement3ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Announcement3Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Announcement3SentDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Reminder1ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Reminder1Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Reminder1SentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Reminder2ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Reminder2Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Reminder2SentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Reminder3ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Reminder3Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Reminder3SentDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("EventCommunication");
                });

            modelBuilder.Entity("MM.ClientModels.EventCost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 3)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EventCostItemId")
                        .HasColumnType("int");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("EventCost");
                });

            modelBuilder.Entity("MM.ClientModels.EventCostItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("EventCostItem");
                });

            modelBuilder.Entity("MM.ClientModels.EventEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RequiredCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("EventId");

                    b.ToTable("EventEquipment");
                });

            modelBuilder.Entity("MM.ClientModels.EventMinute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AssignedTo")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("Heading")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Minute")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("MinuteStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RaisedBy")
                        .HasColumnType("int");

                    b.Property<string>("SubHeading")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("MinuteStatusId");

                    b.ToTable("EventMinute");
                });

            modelBuilder.Entity("MM.ClientModels.EventMinuteStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("EventMinuteStatus");
                });

            modelBuilder.Entity("MM.ClientModels.EventPreRequisiteEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PreRequisiteEventId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("PreRequisiteEventId");

                    b.ToTable("EventPreRequisiteEvent");
                });

            modelBuilder.Entity("MM.ClientModels.EventRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Cancelled")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("EventResponseTypeId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("NumberOfGuests")
                        .HasColumnType("int");

                    b.Property<bool>("Paid")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("EventResponseTypeId");

                    b.HasIndex("MemberId");

                    b.ToTable("EventRegistration");
                });

            modelBuilder.Entity("MM.ClientModels.EventResponseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("EventResponseType");
                });

            modelBuilder.Entity("MM.ClientModels.EventRestrictionList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberLevelId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberTeamId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("MemberLevelId");

                    b.HasIndex("MemberTeamId");

                    b.ToTable("EventRestrictionList");
                });

            modelBuilder.Entity("MM.ClientModels.EventRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasMaxLength(500);

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("EventRole");
                });

            modelBuilder.Entity("MM.ClientModels.EventRoleUserXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int>("EventRoleId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventRoleId");

                    b.HasIndex("UserId");

                    b.ToTable("EventRoleUserXRef");
                });

            modelBuilder.Entity("MM.ClientModels.FileType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("FileType");
                });

            modelBuilder.Entity("MM.ClientModels.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Gender");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 658, DateTimeKind.Local).AddTicks(492),
                            Description = "Male",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 658, DateTimeKind.Local).AddTicks(1374),
                            Name = "Male"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 658, DateTimeKind.Local).AddTicks(2233),
                            Description = "Female",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 658, DateTimeKind.Local).AddTicks(2251),
                            Name = "Female"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 658, DateTimeKind.Local).AddTicks(2270),
                            Description = "Other",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 658, DateTimeKind.Local).AddTicks(2272),
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CommentsForPayer")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("InternalNotes")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<decimal>("InvoiceAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("InvoiceCode")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InvoiceItem")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("InvoiceStatusId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PaymentGatewayId")
                        .HasColumnType("int");

                    b.Property<int?>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int?>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceStatusId");

                    b.HasIndex("MemberId");

                    b.HasIndex("PaymentGatewayId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("MM.ClientModels.InvoiceSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("CopyInvToOrgContact")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CopyRecToOrgContact")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("NextInvoiceNumber")
                        .HasColumnType("int");

                    b.Property<bool>("SendInvForPendingPayments")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("SendRecToPayer")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("InvoiceSetting");
                });

            modelBuilder.Entity("MM.ClientModels.InvoiceStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("InvoiceStatus");
                });

            modelBuilder.Entity("MM.ClientModels.LandingPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("MemberTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberTypeId");

                    b.HasIndex("PageId");

                    b.ToTable("LandingPage");
                });

            modelBuilder.Entity("MM.ClientModels.MarketingGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("MarketingGroup");
                });

            modelBuilder.Entity("MM.ClientModels.MarketingGroupXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("MarketingGroupId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("MarketingGroupId");

                    b.HasIndex("MemberId");

                    b.ToTable("MarketingGroupXRef");
                });

            modelBuilder.Entity("MM.ClientModels.MarketingProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("MarketingProfile");
                });

            modelBuilder.Entity("MM.ClientModels.MarketingProfileXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("MarketingProfileId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("MarketingProfileId");

                    b.HasIndex("MemberId");

                    b.ToTable("MarketingProfileXRef");
                });

            modelBuilder.Entity("MM.ClientModels.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ConfirmedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<bool>("EmailActivated")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsBillingContact")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsBranchContact")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("MemberBranchId")
                        .HasColumnType("int");

                    b.Property<string>("MemberCode")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("MemberLevelId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberTeamId")
                        .HasColumnType("int");

                    b.Property<int>("MemberTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("MembershipConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("NextRenewalDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int?>("OrganizationStructureId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<byte[]>("Photo")
                        .HasColumnType("blob");

                    b.Property<int?>("ReferralTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("TermAccepted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("TitleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.HasIndex("MemberBranchId");

                    b.HasIndex("MemberLevelId");

                    b.HasIndex("MemberStatusId");

                    b.HasIndex("MemberTeamId");

                    b.HasIndex("MemberTypeId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("OrganizationStructureId");

                    b.HasIndex("ReferralTypeId");

                    b.HasIndex("TitleId");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("MM.ClientModels.MemberAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("AddressLine2")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("AddressTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("BuidlingName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("ComplexName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Gpscoordinates")
                        .HasColumnName("GPSCoordinates")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("PrimaryContactNo")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("PrimaryEmail")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("SecondaryContactNo")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("SecondaryEmail")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("StreetName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("AddressTypeId");

                    b.HasIndex("BranchId");

                    b.HasIndex("MemberId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("MemberAddress");
                });

            modelBuilder.Entity("MM.ClientModels.MemberAffliationXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("AffliatedFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("AffliatedTill")
                        .HasColumnType("datetime");

                    b.Property<int?>("AffliationId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<bool>("IsActiveAffliatedNow")
                        .HasColumnName("isActiveAffliatedNow")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("MemberSpecificAffliationName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("AffliationId");

                    b.HasIndex("MemberId");

                    b.ToTable("MemberAffliationXRef");
                });

            modelBuilder.Entity("MM.ClientModels.MemberBankingDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("AccountTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BankName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("RoutingCode")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AccountTypeId");

                    b.HasIndex("MemberId");

                    b.ToTable("MemberBankingDetail");
                });

            modelBuilder.Entity("MM.ClientModels.MemberBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("MemberBranch");
                });

            modelBuilder.Entity("MM.ClientModels.MemberCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("MemberCategory");
                });

            modelBuilder.Entity("MM.ClientModels.MemberCodeGenerator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CodeGenerationRule")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("LastNumber")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Prefix")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Suffix")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("MemberCodeGenerator");
                });

            modelBuilder.Entity("MM.ClientModels.MemberCommunicationPreference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CommunicationTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan?>("PreferredTimeFrom")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("PreferredTimeTo")
                        .HasColumnType("time(6)");

                    b.HasKey("Id");

                    b.HasIndex("CommunicationTypeId");

                    b.HasIndex("MemberId");

                    b.ToTable("MemberCommunicationPreference");
                });

            modelBuilder.Entity("MM.ClientModels.MemberFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<byte[]>("FileContent")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<int>("FileTypeId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("FileTypeId");

                    b.HasIndex("MemberId");

                    b.ToTable("MemberFile");
                });

            modelBuilder.Entity("MM.ClientModels.MemberLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("MemberLevel");
                });

            modelBuilder.Entity("MM.ClientModels.MemberLoginAudit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("LoginTime")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LogoutTime")
                        .HasColumnType("datetime");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MemberLoginAudit");
                });

            modelBuilder.Entity("MM.ClientModels.MemberPlanHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsCurrentPlan")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("MemberPlanDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("MemberPlanDetailId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("MemberPlanHistory");
                });

            modelBuilder.Entity("MM.ClientModels.MemberQualificationXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("MemberSpecificQualificationName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("QualificationFrom")
                        .HasColumnType("datetime");

                    b.Property<int?>("QualificationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("QualificationTill")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("QualificationId");

                    b.ToTable("MemberQualificationXRef");
                });

            modelBuilder.Entity("MM.ClientModels.MemberStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("MemberStatus");
                });

            modelBuilder.Entity("MM.ClientModels.MemberTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("MemberTeam");
                });

            modelBuilder.Entity("MM.ClientModels.MemberType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("MemberCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("MemberCategoryId");

                    b.ToTable("MemberType");
                });

            modelBuilder.Entity("MM.ClientModels.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Acronym")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("WebSite")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("MM.ClientModels.OrganizationStructure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("LevelOfMember")
                        .HasColumnType("int");

                    b.Property<int>("MaximumNumber")
                        .HasColumnType("int");

                    b.Property<int?>("MaximumTimeInYears")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<bool?>("ShowMaximumTimeInYears")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("OrganizationStructure");
                });

            modelBuilder.Entity("MM.ClientModels.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Page");
                });

            modelBuilder.Entity("MM.ClientModels.PayPalConnectionMode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("PayPalConnectionMode");
                });

            modelBuilder.Entity("MM.ClientModels.PayPalPreferredPaymentGateway", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("PayPalPreferredPaymentGateway");
                });

            modelBuilder.Entity("MM.ClientModels.PaymentCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("PaymentCard");
                });

            modelBuilder.Entity("MM.ClientModels.PaymentGateway", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClientApicodeForMerchant")
                        .HasColumnName("ClientAPICodeForMerchant")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("ClientIdForMerchant")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("ClientPasswordForMerchant")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<decimal?>("CommisionPercentage")
                        .HasColumnType("decimal(6, 3)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("MerchantLocation")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("MerchantName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("MerchantNumber")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("PaymentGateway");
                });

            modelBuilder.Entity("MM.ClientModels.PaymentSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApplicationInstructions")
                        .HasColumnType("varchar(2000) CHARACTER SET utf8mb4")
                        .HasMaxLength(2000);

                    b.Property<int?>("ClientPayPalConnectionModeId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultCountryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("EventsInstructions")
                        .HasColumnType("varchar(2000) CHARACTER SET utf8mb4")
                        .HasMaxLength(2000);

                    b.Property<string>("GeneralInstructions")
                        .HasColumnType("varchar(2000) CHARACTER SET utf8mb4")
                        .HasMaxLength(2000);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("PayPalAccountId")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("PayPalApipassword")
                        .HasColumnName("PayPalAPIPassword")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("PayPalApisignature")
                        .HasColumnName("PayPalAPISignature")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("PayPalApiuserName")
                        .HasColumnName("PayPalAPIUserName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("PayPalPdtidentityToken")
                        .HasColumnName("PayPalPDTIdentityToken")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("PayPalPreferredPaymentGatewayId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("PaymentSetting");
                });

            modelBuilder.Entity("MM.ClientModels.PaymentSettingAllowedCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PaymentCardId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentSettingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaymentCardId");

                    b.HasIndex("PaymentSettingId");

                    b.ToTable("PaymentSettingAllowedCard");
                });

            modelBuilder.Entity("MM.ClientModels.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasMaxLength(500);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Permission");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 771, DateTimeKind.Local).AddTicks(1194),
                            Description = "Can create new contacts, modify all existing ones  ",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 771, DateTimeKind.Local).AddTicks(1972),
                            Name = "Membership manager"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 771, DateTimeKind.Local).AddTicks(2735),
                            Description = "Can create and manage all events",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 771, DateTimeKind.Local).AddTicks(2752),
                            Name = "Event manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 771, DateTimeKind.Local).AddTicks(2767),
                            Description = "Can manage all donations",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 771, DateTimeKind.Local).AddTicks(2768),
                            Name = "Donations manager"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 771, DateTimeKind.Local).AddTicks(2771),
                            Description = "Can send manual emails (e.g. newsletters)",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 771, DateTimeKind.Local).AddTicks(2773),
                            Name = "Newsletter manager"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 771, DateTimeKind.Local).AddTicks(2776),
                            Description = "Can modify your website pages. With this option selected, you can provide access to all pages on your site or to selected pages. When you grant access to a page, you automatically grant access to all of its child or sub pages.",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 771, DateTimeKind.Local).AddTicks(2778),
                            Name = "Website editor"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.PlanCanChangeToXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("FromPlanMasterId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("ToPlanMasterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromPlanMasterId");

                    b.HasIndex("ToPlanMasterId");

                    b.ToTable("PlanCanChangeToXref");
                });

            modelBuilder.Entity("MM.ClientModels.PlanDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PlanFrequencyId")
                        .HasColumnType("int");

                    b.Property<int>("PlanMasterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("PlanFrequencyId");

                    b.HasIndex("PlanMasterId");

                    b.ToTable("PlanDetail");
                });

            modelBuilder.Entity("MM.ClientModels.PlanFrequency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("PlanFrequency");
                });

            modelBuilder.Entity("MM.ClientModels.PlanMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("ApplyTaxSettings")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanPublicApply")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<bool?>("IsLimited")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("LimitToMemberCount")
                        .HasColumnType("int");

                    b.Property<int>("MemberCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberCategoryId");

                    b.HasIndex("PaymentMethodId");

                    b.ToTable("PlanMaster");
                });

            modelBuilder.Entity("MM.ClientModels.PromotionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(9, 3)");

                    b.Property<int?>("MemberLevelId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PromotionMasterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberLevelId");

                    b.HasIndex("MemberTypeId");

                    b.HasIndex("PromotionMasterId");

                    b.ToTable("PromotionDetail");
                });

            modelBuilder.Entity("MM.ClientModels.PromotionMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BenefitEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("BenefitStartDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("IsActive")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("PromotionMaster");
                });

            modelBuilder.Entity("MM.ClientModels.PromotionResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PromotionMasterId")
                        .HasColumnType("int");

                    b.Property<int>("PromotionResponseType")
                        .HasColumnType("int");

                    b.Property<DateTime>("ResponseDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("PromotionMasterId");

                    b.HasIndex("PromotionResponseType");

                    b.ToTable("PromotionResponse");
                });

            modelBuilder.Entity("MM.ClientModels.PromotionResponseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("PromotionResponseType");
                });

            modelBuilder.Entity("MM.ClientModels.Qualification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Qualification");
                });

            modelBuilder.Entity("MM.ClientModels.ReferralType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("ReferralType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 801, DateTimeKind.Local).AddTicks(2400),
                            Description = "Google",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 801, DateTimeKind.Local).AddTicks(3174),
                            Name = "Google"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 801, DateTimeKind.Local).AddTicks(3932),
                            Description = "Facebook",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 801, DateTimeKind.Local).AddTicks(3953),
                            Name = "Facebook"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 801, DateTimeKind.Local).AddTicks(3967),
                            Description = "Twitter",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 801, DateTimeKind.Local).AddTicks(3968),
                            Name = "Twitter"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 801, DateTimeKind.Local).AddTicks(3972),
                            Description = "TV",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 801, DateTimeKind.Local).AddTicks(3973),
                            Name = "TV"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 801, DateTimeKind.Local).AddTicks(3977),
                            Description = "Friends",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 801, DateTimeKind.Local).AddTicks(3978),
                            Name = "Friends"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 801, DateTimeKind.Local).AddTicks(3981),
                            Description = "Other",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 801, DateTimeKind.Local).AddTicks(3983),
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Refund", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CommentsForPayer")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("InternalNotes")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PaymentGatewayId")
                        .HasColumnType("int");

                    b.Property<decimal>("RefundAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("RefundDate")
                        .HasColumnType("datetime");

                    b.Property<string>("RefundItem")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int?>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("PaymentGatewayId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("Refund");
                });

            modelBuilder.Entity("MM.ClientModels.RelatedTo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(30) CHARACTER SET utf8mb4")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("RelatedTo");
                });

            modelBuilder.Entity("MM.ClientModels.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasMaxLength(500);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 809, DateTimeKind.Local).AddTicks(9605),
                            Description = "Select this option to remove admin access for existing administrators  ",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 810, DateTimeKind.Local).AddTicks(369),
                            Name = "No administrative privileges"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 810, DateTimeKind.Local).AddTicks(1128),
                            Description = "Grants full access to all administrative functions. Take care when granting this level of access since full admins can delete other admins and even the entire site.",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 810, DateTimeKind.Local).AddTicks(1145),
                            Name = "Account administrator"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 810, DateTimeKind.Local).AddTicks(1163),
                            Description = "Allows viewing of everything in the admin backend without being able to make any changes.  ",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 810, DateTimeKind.Local).AddTicks(1165),
                            Name = "Account administrator (Read-only access)"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 810, DateTimeKind.Local).AddTicks(1170),
                            Description = "Provides administrative access to selected Wild Apricot modules. Use this option if you have dedicated personnel in charge of events, memberships, editing webpages, or managing donations. With this option selected, you can limit access to selected Functions",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 810, DateTimeKind.Local).AddTicks(1172),
                            Name = "Limited administrator"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.RolePermissionXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("Permissionid")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Permissionid");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissionXRef");
                });

            modelBuilder.Entity("MM.ClientModels.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("State");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(980),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(1878),
                            Name = "Eastern Cape"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2657),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2675),
                            Name = "Free State"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2690),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2692),
                            Name = "Gauteng"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2697),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2699),
                            Name = "KwaZulu-Natal"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2703),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2705),
                            Name = "Limpopo"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2711),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2713),
                            Name = "Mpumalanga"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2716),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2718),
                            Name = "North West"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2721),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2724),
                            Name = "Northern Cape"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2727),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2728),
                            Name = "Western Cape"
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2732),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2734),
                            Name = "Australian Capital Territory"
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2738),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2740),
                            Name = "New South Wales"
                        },
                        new
                        {
                            Id = 12,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2746),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2747),
                            Name = "Northern Territory"
                        },
                        new
                        {
                            Id = 13,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2751),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2754),
                            Name = "Queensland"
                        },
                        new
                        {
                            Id = 14,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2757),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2759),
                            Name = "South Australia"
                        },
                        new
                        {
                            Id = 15,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2762),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2763),
                            Name = "Tasmania"
                        },
                        new
                        {
                            Id = 16,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2787),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2789),
                            Name = "Victoria"
                        },
                        new
                        {
                            Id = 17,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2792),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2794),
                            Name = "Western Australia"
                        },
                        new
                        {
                            Id = 18,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2797),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2798),
                            Name = "Andaman and Nicobar Islands"
                        },
                        new
                        {
                            Id = 19,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2802),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2803),
                            Name = "Andhra Pradesh"
                        },
                        new
                        {
                            Id = 20,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2806),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2809),
                            Name = "Arunachal Pradesh"
                        },
                        new
                        {
                            Id = 21,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2812),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2814),
                            Name = "Assam"
                        },
                        new
                        {
                            Id = 22,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2818),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2821),
                            Name = "Bihar"
                        },
                        new
                        {
                            Id = 23,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2824),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2826),
                            Name = "Chandigarh"
                        },
                        new
                        {
                            Id = 24,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2830),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2832),
                            Name = "Chhattisgarh"
                        },
                        new
                        {
                            Id = 25,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2835),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2837),
                            Name = "Dadra and Nagar Haveli"
                        },
                        new
                        {
                            Id = 26,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2840),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2843),
                            Name = "Daman and Diu"
                        },
                        new
                        {
                            Id = 27,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2846),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2848),
                            Name = "Delhi"
                        },
                        new
                        {
                            Id = 28,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2851),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2853),
                            Name = "Goa"
                        },
                        new
                        {
                            Id = 29,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2856),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2858),
                            Name = "Gujarat"
                        },
                        new
                        {
                            Id = 30,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2861),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2864),
                            Name = "Haryana"
                        },
                        new
                        {
                            Id = 31,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2867),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2869),
                            Name = "Himachal Pradesh"
                        },
                        new
                        {
                            Id = 32,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2872),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2874),
                            Name = "Jammu and Kashmir"
                        },
                        new
                        {
                            Id = 33,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2877),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2878),
                            Name = "Jharkhand"
                        },
                        new
                        {
                            Id = 34,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2881),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2883),
                            Name = "Karnataka"
                        },
                        new
                        {
                            Id = 35,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2886),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2888),
                            Name = "Kerala"
                        },
                        new
                        {
                            Id = 36,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2891),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2892),
                            Name = "Ladakh"
                        },
                        new
                        {
                            Id = 37,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2896),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2897),
                            Name = "Lakshadweep"
                        },
                        new
                        {
                            Id = 38,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2901),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2903),
                            Name = "Madhya Pradesh"
                        },
                        new
                        {
                            Id = 39,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2906),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2907),
                            Name = "Maharashtra"
                        },
                        new
                        {
                            Id = 40,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2911),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2913),
                            Name = "Manipur"
                        },
                        new
                        {
                            Id = 41,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2916),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2918),
                            Name = "Meghalaya"
                        },
                        new
                        {
                            Id = 42,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2921),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2923),
                            Name = "Mizoram"
                        },
                        new
                        {
                            Id = 43,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2926),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2927),
                            Name = "Nagaland"
                        },
                        new
                        {
                            Id = 44,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2931),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2932),
                            Name = "Odisha"
                        },
                        new
                        {
                            Id = 45,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2936),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2940),
                            Name = "Puducherry"
                        },
                        new
                        {
                            Id = 46,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2943),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2945),
                            Name = "Punjab"
                        },
                        new
                        {
                            Id = 47,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2948),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2951),
                            Name = "Rajasthan"
                        },
                        new
                        {
                            Id = 48,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2954),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2956),
                            Name = "Sikkim"
                        },
                        new
                        {
                            Id = 49,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2959),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2960),
                            Name = "Tamil Nadu"
                        },
                        new
                        {
                            Id = 50,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2964),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2966),
                            Name = "Telangana"
                        },
                        new
                        {
                            Id = 51,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2978),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2979),
                            Name = "Tripura"
                        },
                        new
                        {
                            Id = 52,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2982),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2984),
                            Name = "Uttar Pradesh"
                        },
                        new
                        {
                            Id = 53,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2987),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2989),
                            Name = "Uttarakhand"
                        },
                        new
                        {
                            Id = 54,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2993),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2994),
                            Name = "West Bengal"
                        },
                        new
                        {
                            Id = 55,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(2998),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3000),
                            Name = "Aberdeen"
                        },
                        new
                        {
                            Id = 56,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3003),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3005),
                            Name = "Aberdeenshire"
                        },
                        new
                        {
                            Id = 57,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3008),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3011),
                            Name = "Angus"
                        },
                        new
                        {
                            Id = 58,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3014),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3015),
                            Name = "Antrim"
                        },
                        new
                        {
                            Id = 59,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3019),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3021),
                            Name = "Antrim and Newtownabbey"
                        },
                        new
                        {
                            Id = 60,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3025),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3027),
                            Name = "Ards"
                        },
                        new
                        {
                            Id = 61,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3031),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3032),
                            Name = "Ards and North Down"
                        },
                        new
                        {
                            Id = 62,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3035),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3037),
                            Name = "Argyll and Bute"
                        },
                        new
                        {
                            Id = 63,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3040),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3042),
                            Name = "Armagh City and District Council"
                        },
                        new
                        {
                            Id = 64,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3045),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3046),
                            Name = "Armagh, Banbridge and Craigavon"
                        },
                        new
                        {
                            Id = 65,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3049),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3051),
                            Name = "Ascension Island"
                        },
                        new
                        {
                            Id = 66,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3054),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3056),
                            Name = "Ballymena Borough"
                        },
                        new
                        {
                            Id = 67,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3059),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3060),
                            Name = "Ballymoney"
                        },
                        new
                        {
                            Id = 68,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3064),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3066),
                            Name = "Banbridge"
                        },
                        new
                        {
                            Id = 69,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3070),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3071),
                            Name = "Barnsley"
                        },
                        new
                        {
                            Id = 70,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3074),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3076),
                            Name = "Bath and North East Somerset"
                        },
                        new
                        {
                            Id = 71,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3079),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3081),
                            Name = "Bedford"
                        },
                        new
                        {
                            Id = 72,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3084),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3085),
                            Name = "Belfast district"
                        },
                        new
                        {
                            Id = 73,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3088),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3090),
                            Name = "Birmingham"
                        },
                        new
                        {
                            Id = 74,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3093),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3094),
                            Name = "Blackburn with Darwen"
                        },
                        new
                        {
                            Id = 75,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3098),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3100),
                            Name = "Blackpool"
                        },
                        new
                        {
                            Id = 76,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3103),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3104),
                            Name = "Blaenau Gwent County Borough"
                        },
                        new
                        {
                            Id = 77,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3108),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3110),
                            Name = "Bolton"
                        },
                        new
                        {
                            Id = 78,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3113),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3115),
                            Name = "Bournemouth"
                        },
                        new
                        {
                            Id = 79,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3118),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3120),
                            Name = "Bracknell Forest"
                        },
                        new
                        {
                            Id = 80,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3123),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3124),
                            Name = "Bradford"
                        },
                        new
                        {
                            Id = 81,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3127),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3129),
                            Name = "Bridgend County Borough"
                        },
                        new
                        {
                            Id = 82,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3132),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3134),
                            Name = "Brighton and Hove"
                        },
                        new
                        {
                            Id = 83,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3137),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3139),
                            Name = "Buckinghamshire"
                        },
                        new
                        {
                            Id = 84,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3142),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3143),
                            Name = "Bury"
                        },
                        new
                        {
                            Id = 85,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3147),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3148),
                            Name = "Caerphilly County Borough"
                        },
                        new
                        {
                            Id = 86,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3159),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3161),
                            Name = "Calderdale"
                        },
                        new
                        {
                            Id = 87,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3165),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3166),
                            Name = "Cambridgeshire"
                        },
                        new
                        {
                            Id = 88,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3171),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3172),
                            Name = "Carmarthenshire"
                        },
                        new
                        {
                            Id = 89,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3175),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3177),
                            Name = "Carrickfergus Borough Council"
                        },
                        new
                        {
                            Id = 90,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3180),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3181),
                            Name = "Castlereagh"
                        },
                        new
                        {
                            Id = 91,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3184),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3186),
                            Name = "Causeway Coast and Glens"
                        },
                        new
                        {
                            Id = 92,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3189),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3191),
                            Name = "Central Bedfordshire"
                        },
                        new
                        {
                            Id = 93,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3194),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3196),
                            Name = "Ceredigion"
                        },
                        new
                        {
                            Id = 94,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3199),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3201),
                            Name = "Cheshire East"
                        },
                        new
                        {
                            Id = 95,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3204),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3205),
                            Name = "Cheshire West and Chester"
                        },
                        new
                        {
                            Id = 96,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3210),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3212),
                            Name = "City and County of Cardiff"
                        },
                        new
                        {
                            Id = 97,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3215),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3218),
                            Name = "City and County of Swansea"
                        },
                        new
                        {
                            Id = 98,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3221),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3222),
                            Name = "City of Bristol"
                        },
                        new
                        {
                            Id = 99,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3226),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3227),
                            Name = "City of Derby"
                        },
                        new
                        {
                            Id = 100,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3231),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3232),
                            Name = "City of Kingston upon Hull"
                        },
                        new
                        {
                            Id = 101,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3236),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3238),
                            Name = "City of Leicester"
                        },
                        new
                        {
                            Id = 102,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3241),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3242),
                            Name = "City of London"
                        },
                        new
                        {
                            Id = 103,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3245),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3247),
                            Name = "City of Nottingham"
                        },
                        new
                        {
                            Id = 104,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3250),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3252),
                            Name = "City of Peterborough"
                        },
                        new
                        {
                            Id = 105,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3255),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3256),
                            Name = "City of Plymouth"
                        },
                        new
                        {
                            Id = 106,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3259),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3261),
                            Name = "City of Portsmouth"
                        },
                        new
                        {
                            Id = 107,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3264),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3266),
                            Name = "City of Southampton"
                        },
                        new
                        {
                            Id = 108,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3269),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3272),
                            Name = "City of Stoke-on-Trent"
                        },
                        new
                        {
                            Id = 109,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3276),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3278),
                            Name = "City of Sunderland"
                        },
                        new
                        {
                            Id = 110,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3282),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3283),
                            Name = "City of Westminster"
                        },
                        new
                        {
                            Id = 111,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3287),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3288),
                            Name = "City of Wolverhampton"
                        },
                        new
                        {
                            Id = 112,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3291),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3293),
                            Name = "City of York"
                        },
                        new
                        {
                            Id = 113,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3296),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3298),
                            Name = "Clackmannanshire"
                        },
                        new
                        {
                            Id = 114,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3301),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3302),
                            Name = "Coleraine Borough Council"
                        },
                        new
                        {
                            Id = 115,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3305),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3307),
                            Name = "Conwy County Borough"
                        },
                        new
                        {
                            Id = 116,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3310),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3311),
                            Name = "Cookstown District Council"
                        },
                        new
                        {
                            Id = 117,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3315),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3316),
                            Name = "Cornwall"
                        },
                        new
                        {
                            Id = 118,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3319),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3321),
                            Name = "County Durham"
                        },
                        new
                        {
                            Id = 119,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3324),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3325),
                            Name = "Coventry"
                        },
                        new
                        {
                            Id = 120,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3329),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3330),
                            Name = "Craigavon Borough Council"
                        },
                        new
                        {
                            Id = 121,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3333),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3335),
                            Name = "Cumbria"
                        },
                        new
                        {
                            Id = 122,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3344),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3346),
                            Name = "Darlington"
                        },
                        new
                        {
                            Id = 123,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3349),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3350),
                            Name = "Denbighshire"
                        },
                        new
                        {
                            Id = 124,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3353),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3355),
                            Name = "Derbyshire"
                        },
                        new
                        {
                            Id = 125,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3358),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3360),
                            Name = "Derry City and Strabane"
                        },
                        new
                        {
                            Id = 126,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3363),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3365),
                            Name = "Derry City Council"
                        },
                        new
                        {
                            Id = 127,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3368),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3370),
                            Name = "Devon"
                        },
                        new
                        {
                            Id = 128,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3373),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3374),
                            Name = "Doncaster"
                        },
                        new
                        {
                            Id = 129,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3377),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3379),
                            Name = "Dorset"
                        },
                        new
                        {
                            Id = 130,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3382),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3384),
                            Name = "Down District Council"
                        },
                        new
                        {
                            Id = 131,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3387),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3388),
                            Name = "Dudley"
                        },
                        new
                        {
                            Id = 132,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3391),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3393),
                            Name = "Dumfries and Galloway"
                        },
                        new
                        {
                            Id = 133,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3397),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3398),
                            Name = "Dundee"
                        },
                        new
                        {
                            Id = 134,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3402),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3404),
                            Name = "Dungannon and South Tyrone Borough Council"
                        },
                        new
                        {
                            Id = 135,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3409),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3411),
                            Name = "East Ayrshire"
                        },
                        new
                        {
                            Id = 136,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3415),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3417),
                            Name = "East Dunbartonshire"
                        },
                        new
                        {
                            Id = 137,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3420),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3422),
                            Name = "East Lothian"
                        },
                        new
                        {
                            Id = 138,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3425),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3427),
                            Name = "East Renfrewshire"
                        },
                        new
                        {
                            Id = 139,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3430),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3431),
                            Name = "East Riding of Yorkshire"
                        },
                        new
                        {
                            Id = 140,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3435),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3436),
                            Name = "East Sussex"
                        },
                        new
                        {
                            Id = 141,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3439),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3441),
                            Name = "Edinburgh"
                        },
                        new
                        {
                            Id = 142,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3444),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3445),
                            Name = "England"
                        },
                        new
                        {
                            Id = 143,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3449),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3450),
                            Name = "Essex"
                        },
                        new
                        {
                            Id = 144,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3453),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3455),
                            Name = "Falkirk"
                        },
                        new
                        {
                            Id = 145,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3458),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3460),
                            Name = "Fermanagh and Omagh"
                        },
                        new
                        {
                            Id = 146,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3463),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3464),
                            Name = "Fermanagh District Council"
                        },
                        new
                        {
                            Id = 147,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3467),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3469),
                            Name = "Fife"
                        },
                        new
                        {
                            Id = 148,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3472),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3473),
                            Name = "Flintshire"
                        },
                        new
                        {
                            Id = 149,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3476),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3478),
                            Name = "Gateshead"
                        },
                        new
                        {
                            Id = 150,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3481),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3483),
                            Name = "Glasgow"
                        },
                        new
                        {
                            Id = 151,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3486),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3487),
                            Name = "Gloucestershire"
                        },
                        new
                        {
                            Id = 152,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3490),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3492),
                            Name = "Gwynedd"
                        },
                        new
                        {
                            Id = 153,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3495),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3497),
                            Name = "Halton"
                        },
                        new
                        {
                            Id = 154,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3500),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3502),
                            Name = "Hampshire"
                        },
                        new
                        {
                            Id = 155,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3505),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3506),
                            Name = "Hartlepool"
                        },
                        new
                        {
                            Id = 156,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3509),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3511),
                            Name = "Herefordshire"
                        },
                        new
                        {
                            Id = 157,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3521),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3523),
                            Name = "Hertfordshire"
                        },
                        new
                        {
                            Id = 158,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3526),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3528),
                            Name = "Highland"
                        },
                        new
                        {
                            Id = 159,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3531),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3533),
                            Name = "Inverclyde"
                        },
                        new
                        {
                            Id = 160,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3536),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3538),
                            Name = "Isle of Wight"
                        },
                        new
                        {
                            Id = 161,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3541),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3542),
                            Name = "Isles of Scilly"
                        },
                        new
                        {
                            Id = 162,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3547),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3548),
                            Name = "Kent"
                        },
                        new
                        {
                            Id = 163,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3552),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3554),
                            Name = "Kirklees"
                        },
                        new
                        {
                            Id = 164,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3557),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3559),
                            Name = "Knowsley"
                        },
                        new
                        {
                            Id = 165,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3563),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3565),
                            Name = "Lancashire"
                        },
                        new
                        {
                            Id = 166,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3569),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3572),
                            Name = "Larne Borough Council"
                        },
                        new
                        {
                            Id = 167,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3575),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3577),
                            Name = "Leeds"
                        },
                        new
                        {
                            Id = 168,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3580),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3582),
                            Name = "Leicestershire"
                        },
                        new
                        {
                            Id = 169,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3586),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3589),
                            Name = "Limavady Borough Council"
                        },
                        new
                        {
                            Id = 170,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3592),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3595),
                            Name = "Lincolnshire"
                        },
                        new
                        {
                            Id = 171,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3598),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3600),
                            Name = "Lisburn and Castlereagh"
                        },
                        new
                        {
                            Id = 172,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3603),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3605),
                            Name = "Lisburn City Council"
                        },
                        new
                        {
                            Id = 173,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3609),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3611),
                            Name = "Liverpool"
                        },
                        new
                        {
                            Id = 174,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3615),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3617),
                            Name = "London Borough of Barking and Dagenham"
                        },
                        new
                        {
                            Id = 175,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3620),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3622),
                            Name = "London Borough of Barnet"
                        },
                        new
                        {
                            Id = 176,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3625),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3627),
                            Name = "London Borough of Bexley"
                        },
                        new
                        {
                            Id = 177,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3631),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3632),
                            Name = "London Borough of Brent"
                        },
                        new
                        {
                            Id = 178,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3637),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3638),
                            Name = "London Borough of Bromley"
                        },
                        new
                        {
                            Id = 179,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3642),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3643),
                            Name = "London Borough of Camden"
                        },
                        new
                        {
                            Id = 180,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3647),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3648),
                            Name = "London Borough of Croydon"
                        },
                        new
                        {
                            Id = 181,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3651),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3653),
                            Name = "London Borough of Ealing"
                        },
                        new
                        {
                            Id = 182,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3657),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3658),
                            Name = "London Borough of Enfield"
                        },
                        new
                        {
                            Id = 183,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3661),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3663),
                            Name = "London Borough of Hackney"
                        },
                        new
                        {
                            Id = 184,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3666),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3668),
                            Name = "London Borough of Hammersmith and Fulham"
                        },
                        new
                        {
                            Id = 185,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3671),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3672),
                            Name = "London Borough of Haringey"
                        },
                        new
                        {
                            Id = 186,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3676),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3679),
                            Name = "London Borough of Harrow"
                        },
                        new
                        {
                            Id = 187,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3683),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3684),
                            Name = "London Borough of Havering"
                        },
                        new
                        {
                            Id = 188,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3688),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3689),
                            Name = "London Borough of Hillingdon"
                        },
                        new
                        {
                            Id = 189,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3693),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3695),
                            Name = "London Borough of Hounslow"
                        },
                        new
                        {
                            Id = 190,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3698),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3700),
                            Name = "London Borough of Islington"
                        },
                        new
                        {
                            Id = 191,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3703),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3704),
                            Name = "London Borough of Lambeth"
                        },
                        new
                        {
                            Id = 192,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3714),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3716),
                            Name = "London Borough of Lewisham"
                        },
                        new
                        {
                            Id = 193,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3720),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3721),
                            Name = "London Borough of Merton"
                        },
                        new
                        {
                            Id = 194,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3725),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3726),
                            Name = "London Borough of Newham"
                        },
                        new
                        {
                            Id = 195,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3729),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3731),
                            Name = "London Borough of Redbridge"
                        },
                        new
                        {
                            Id = 196,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3734),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3736),
                            Name = "London Borough of Richmond upon Thames"
                        },
                        new
                        {
                            Id = 197,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3739),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3741),
                            Name = "London Borough of Southwark"
                        },
                        new
                        {
                            Id = 198,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3745),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3746),
                            Name = "London Borough of Sutton"
                        },
                        new
                        {
                            Id = 199,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3750),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3751),
                            Name = "London Borough of Tower Hamlets"
                        },
                        new
                        {
                            Id = 200,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3754),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3756),
                            Name = "London Borough of Waltham Forest"
                        },
                        new
                        {
                            Id = 201,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3759),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3761),
                            Name = "London Borough of Wandsworth"
                        },
                        new
                        {
                            Id = 202,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3764),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3765),
                            Name = "Magherafelt District Council"
                        },
                        new
                        {
                            Id = 203,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3768),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3770),
                            Name = "Manchester"
                        },
                        new
                        {
                            Id = 204,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3773),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3775),
                            Name = "Medway"
                        },
                        new
                        {
                            Id = 205,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3778),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3779),
                            Name = "Merthyr Tydfil County Borough"
                        },
                        new
                        {
                            Id = 206,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3783),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3784),
                            Name = "Metropolitan Borough of Wigan"
                        },
                        new
                        {
                            Id = 207,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3787),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3789),
                            Name = "Mid and East Antrim"
                        },
                        new
                        {
                            Id = 208,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3792),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3794),
                            Name = "Mid Ulster"
                        },
                        new
                        {
                            Id = 209,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3797),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3798),
                            Name = "Middlesbrough"
                        },
                        new
                        {
                            Id = 210,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3801),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3803),
                            Name = "Midlothian"
                        },
                        new
                        {
                            Id = 211,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3806),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3808),
                            Name = "Milton Keynes"
                        },
                        new
                        {
                            Id = 212,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3811),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3813),
                            Name = "Monmouthshire"
                        },
                        new
                        {
                            Id = 213,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3816),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3818),
                            Name = "Moray"
                        },
                        new
                        {
                            Id = 214,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3821),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3823),
                            Name = "Moyle District Council"
                        },
                        new
                        {
                            Id = 215,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3826),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3828),
                            Name = "Neath Port Talbot County Borough"
                        },
                        new
                        {
                            Id = 216,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3831),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3832),
                            Name = "Newcastle upon Tyne"
                        },
                        new
                        {
                            Id = 217,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3836),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3837),
                            Name = "Newport"
                        },
                        new
                        {
                            Id = 218,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3840),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3842),
                            Name = "Newry and Mourne District Council"
                        },
                        new
                        {
                            Id = 219,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3845),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3847),
                            Name = "Newry, Mourne and Down"
                        },
                        new
                        {
                            Id = 220,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3850),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3852),
                            Name = "Newtownabbey Borough Council"
                        },
                        new
                        {
                            Id = 221,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3856),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3858),
                            Name = "Norfolk"
                        },
                        new
                        {
                            Id = 222,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3861),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3864),
                            Name = "North Ayrshire"
                        },
                        new
                        {
                            Id = 223,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3867),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3869),
                            Name = "North Down Borough Council"
                        },
                        new
                        {
                            Id = 224,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3872),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3874),
                            Name = "North East Lincolnshire"
                        },
                        new
                        {
                            Id = 225,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3877),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3878),
                            Name = "North Lanarkshire"
                        },
                        new
                        {
                            Id = 226,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3881),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3883),
                            Name = "North Lincolnshire"
                        },
                        new
                        {
                            Id = 227,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3893),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3894),
                            Name = "North Somerset"
                        },
                        new
                        {
                            Id = 228,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3898),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3899),
                            Name = "North Tyneside"
                        },
                        new
                        {
                            Id = 229,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3902),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3904),
                            Name = "North Yorkshire"
                        },
                        new
                        {
                            Id = 230,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3908),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3910),
                            Name = "Northamptonshire"
                        },
                        new
                        {
                            Id = 231,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3913),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3915),
                            Name = "Northern Ireland"
                        },
                        new
                        {
                            Id = 232,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3918),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3920),
                            Name = "Northumberland"
                        },
                        new
                        {
                            Id = 233,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3923),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3926),
                            Name = "Nottinghamshire"
                        },
                        new
                        {
                            Id = 234,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3929),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3931),
                            Name = "Oldham"
                        },
                        new
                        {
                            Id = 235,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3934),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3936),
                            Name = "Omagh District Council"
                        },
                        new
                        {
                            Id = 236,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3939),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3942),
                            Name = "Orkney Islands"
                        },
                        new
                        {
                            Id = 237,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3945),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3947),
                            Name = "Outer Hebrides"
                        },
                        new
                        {
                            Id = 238,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3952),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3953),
                            Name = "Oxfordshire"
                        },
                        new
                        {
                            Id = 239,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3956),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3959),
                            Name = "Pembrokeshire"
                        },
                        new
                        {
                            Id = 240,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3962),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3963),
                            Name = "Perth and Kinross"
                        },
                        new
                        {
                            Id = 241,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3966),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3968),
                            Name = "Poole"
                        },
                        new
                        {
                            Id = 242,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3971),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3973),
                            Name = "Powys"
                        },
                        new
                        {
                            Id = 243,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3976),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3977),
                            Name = "Reading"
                        },
                        new
                        {
                            Id = 244,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3980),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3982),
                            Name = "Redcar and Cleveland"
                        },
                        new
                        {
                            Id = 245,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3986),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3987),
                            Name = "Renfrewshire"
                        },
                        new
                        {
                            Id = 246,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3991),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3993),
                            Name = "Rhondda Cynon Taf"
                        },
                        new
                        {
                            Id = 247,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3996),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(3998),
                            Name = "Rochdale"
                        },
                        new
                        {
                            Id = 248,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4001),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4002),
                            Name = "Rotherham"
                        },
                        new
                        {
                            Id = 249,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4005),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4007),
                            Name = "Royal Borough of Greenwich"
                        },
                        new
                        {
                            Id = 250,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4010),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4012),
                            Name = "Royal Borough of Kensington and Chelsea"
                        },
                        new
                        {
                            Id = 251,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4015),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4016),
                            Name = "Royal Borough of Kingston upon Thames"
                        },
                        new
                        {
                            Id = 252,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4019),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4021),
                            Name = "Rutland"
                        },
                        new
                        {
                            Id = 253,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4024),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4026),
                            Name = "Saint Helena"
                        },
                        new
                        {
                            Id = 254,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4029),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4031),
                            Name = "Salford"
                        },
                        new
                        {
                            Id = 255,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4034),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4035),
                            Name = "Sandwell"
                        },
                        new
                        {
                            Id = 256,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4039),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4040),
                            Name = "Scotland"
                        },
                        new
                        {
                            Id = 257,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4043),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4045),
                            Name = "Scottish Borders"
                        },
                        new
                        {
                            Id = 258,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4048),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4049),
                            Name = "Sefton"
                        },
                        new
                        {
                            Id = 259,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4052),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4054),
                            Name = "Sheffield"
                        },
                        new
                        {
                            Id = 260,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4057),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4059),
                            Name = "Shetland Islands"
                        },
                        new
                        {
                            Id = 261,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4062),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4063),
                            Name = "Shropshire"
                        },
                        new
                        {
                            Id = 262,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4073),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4075),
                            Name = "Slough"
                        },
                        new
                        {
                            Id = 263,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4078),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4079),
                            Name = "Solihull"
                        },
                        new
                        {
                            Id = 264,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4082),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4084),
                            Name = "Somerset"
                        },
                        new
                        {
                            Id = 265,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4087),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4089),
                            Name = "South Ayrshire"
                        },
                        new
                        {
                            Id = 266,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4092),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4093),
                            Name = "South Gloucestershire"
                        },
                        new
                        {
                            Id = 267,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4096),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4098),
                            Name = "South Lanarkshire"
                        },
                        new
                        {
                            Id = 268,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4101),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4103),
                            Name = "South Tyneside"
                        },
                        new
                        {
                            Id = 269,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4107),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4108),
                            Name = "Southend-on-Sea"
                        },
                        new
                        {
                            Id = 270,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4111),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4113),
                            Name = "St Helens"
                        },
                        new
                        {
                            Id = 271,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4116),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4118),
                            Name = "Staffordshire"
                        },
                        new
                        {
                            Id = 272,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4121),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4122),
                            Name = "Stirling"
                        },
                        new
                        {
                            Id = 273,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4125),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4127),
                            Name = "Stockport"
                        },
                        new
                        {
                            Id = 274,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4130),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4132),
                            Name = "Stockton-on-Tees"
                        },
                        new
                        {
                            Id = 275,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4135),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4136),
                            Name = "Strabane District Council"
                        },
                        new
                        {
                            Id = 276,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4139),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4141),
                            Name = "Suffolk"
                        },
                        new
                        {
                            Id = 277,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4144),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4146),
                            Name = "Surrey"
                        },
                        new
                        {
                            Id = 278,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4149),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4151),
                            Name = "Swindon"
                        },
                        new
                        {
                            Id = 279,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4154),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4155),
                            Name = "Tameside"
                        },
                        new
                        {
                            Id = 280,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4158),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4160),
                            Name = "Telford and Wrekin"
                        },
                        new
                        {
                            Id = 281,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4163),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4165),
                            Name = "Thurrock"
                        },
                        new
                        {
                            Id = 282,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4168),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4169),
                            Name = "Torbay"
                        },
                        new
                        {
                            Id = 283,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4172),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4174),
                            Name = "Torfaen"
                        },
                        new
                        {
                            Id = 284,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4177),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4179),
                            Name = "Trafford"
                        },
                        new
                        {
                            Id = 285,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4183),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4185),
                            Name = "United Kingdom"
                        },
                        new
                        {
                            Id = 286,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4189),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4191),
                            Name = "Vale of Glamorgan"
                        },
                        new
                        {
                            Id = 287,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4194),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4195),
                            Name = "Wakefield"
                        },
                        new
                        {
                            Id = 288,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4198),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4200),
                            Name = "Wales"
                        },
                        new
                        {
                            Id = 289,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4203),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4205),
                            Name = "Walsall"
                        },
                        new
                        {
                            Id = 290,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4208),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4210),
                            Name = "Warrington"
                        },
                        new
                        {
                            Id = 291,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4213),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4215),
                            Name = "Warwickshire"
                        },
                        new
                        {
                            Id = 292,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4218),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4219),
                            Name = "West Berkshire"
                        },
                        new
                        {
                            Id = 293,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4222),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4224),
                            Name = "West Dunbartonshire"
                        },
                        new
                        {
                            Id = 294,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4227),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4229),
                            Name = "West Lothian"
                        },
                        new
                        {
                            Id = 295,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4232),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4233),
                            Name = "West Sussex"
                        },
                        new
                        {
                            Id = 296,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4237),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4238),
                            Name = "Wiltshire"
                        },
                        new
                        {
                            Id = 297,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4241),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4243),
                            Name = "Windsor and Maidenhead"
                        },
                        new
                        {
                            Id = 298,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4266),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4268),
                            Name = "Wirral"
                        },
                        new
                        {
                            Id = 299,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4271),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4272),
                            Name = "Wokingham"
                        },
                        new
                        {
                            Id = 300,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4275),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4277),
                            Name = "Worcestershire"
                        },
                        new
                        {
                            Id = 301,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4280),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4281),
                            Name = "Wrexham County Borough"
                        },
                        new
                        {
                            Id = 302,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4285),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4286),
                            Name = "Alabama"
                        },
                        new
                        {
                            Id = 303,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4289),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4291),
                            Name = "Alaska"
                        },
                        new
                        {
                            Id = 304,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4294),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4295),
                            Name = "American Samoa"
                        },
                        new
                        {
                            Id = 305,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4299),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4300),
                            Name = "Arizona"
                        },
                        new
                        {
                            Id = 306,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4303),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4305),
                            Name = "Arkansas"
                        },
                        new
                        {
                            Id = 307,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4308),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4309),
                            Name = "Baker Island"
                        },
                        new
                        {
                            Id = 308,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4313),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4315),
                            Name = "California"
                        },
                        new
                        {
                            Id = 309,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4318),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4320),
                            Name = "Colorado"
                        },
                        new
                        {
                            Id = 310,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4323),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4325),
                            Name = "Connecticut"
                        },
                        new
                        {
                            Id = 311,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4328),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4330),
                            Name = "Delaware"
                        },
                        new
                        {
                            Id = 312,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4333),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4335),
                            Name = "District of Columbia"
                        },
                        new
                        {
                            Id = 313,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4338),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4340),
                            Name = "Florida"
                        },
                        new
                        {
                            Id = 314,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4343),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4345),
                            Name = "Georgia"
                        },
                        new
                        {
                            Id = 315,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4349),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4350),
                            Name = "Guam"
                        },
                        new
                        {
                            Id = 316,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4354),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4356),
                            Name = "Hawaii"
                        },
                        new
                        {
                            Id = 317,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4359),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4360),
                            Name = "Howland Island"
                        },
                        new
                        {
                            Id = 318,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4363),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4365),
                            Name = "Idaho"
                        },
                        new
                        {
                            Id = 319,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4368),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4370),
                            Name = "Illinois"
                        },
                        new
                        {
                            Id = 320,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4373),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4374),
                            Name = "Indiana"
                        },
                        new
                        {
                            Id = 321,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4378),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4379),
                            Name = "Iowa"
                        },
                        new
                        {
                            Id = 322,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4382),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4384),
                            Name = "Jarvis Island"
                        },
                        new
                        {
                            Id = 323,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4387),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4390),
                            Name = "Johnston Atoll"
                        },
                        new
                        {
                            Id = 324,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4393),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4394),
                            Name = "Kansas"
                        },
                        new
                        {
                            Id = 325,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4397),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4399),
                            Name = "Kentucky"
                        },
                        new
                        {
                            Id = 326,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4402),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4403),
                            Name = "Kingman Reef"
                        },
                        new
                        {
                            Id = 327,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4407),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4408),
                            Name = "Louisiana"
                        },
                        new
                        {
                            Id = 328,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4411),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4413),
                            Name = "Maine"
                        },
                        new
                        {
                            Id = 329,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4416),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4418),
                            Name = "Maryland"
                        },
                        new
                        {
                            Id = 330,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4421),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4422),
                            Name = "Massachusetts"
                        },
                        new
                        {
                            Id = 331,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4425),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4427),
                            Name = "Michigan"
                        },
                        new
                        {
                            Id = 332,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4430),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4432),
                            Name = "Midway Atoll"
                        },
                        new
                        {
                            Id = 333,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4442),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4443),
                            Name = "Minnesota"
                        },
                        new
                        {
                            Id = 334,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4447),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4449),
                            Name = "Mississippi"
                        },
                        new
                        {
                            Id = 335,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4452),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4453),
                            Name = "Missouri"
                        },
                        new
                        {
                            Id = 336,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4456),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4458),
                            Name = "Montana"
                        },
                        new
                        {
                            Id = 337,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4461),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4463),
                            Name = "Navassa Island"
                        },
                        new
                        {
                            Id = 338,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4466),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4468),
                            Name = "Nebraska"
                        },
                        new
                        {
                            Id = 339,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4471),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4472),
                            Name = "Nevada"
                        },
                        new
                        {
                            Id = 340,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4476),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4477),
                            Name = "New Hampshire"
                        },
                        new
                        {
                            Id = 341,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4480),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4482),
                            Name = "New Jersey"
                        },
                        new
                        {
                            Id = 342,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4485),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4487),
                            Name = "New Mexico"
                        },
                        new
                        {
                            Id = 343,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4490),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4491),
                            Name = "New York"
                        },
                        new
                        {
                            Id = 344,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4494),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4496),
                            Name = "North Carolina"
                        },
                        new
                        {
                            Id = 345,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4499),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4501),
                            Name = "North Dakota"
                        },
                        new
                        {
                            Id = 346,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4504),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4505),
                            Name = "Northern Mariana Islands"
                        },
                        new
                        {
                            Id = 347,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4508),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4510),
                            Name = "Ohio"
                        },
                        new
                        {
                            Id = 348,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4513),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4515),
                            Name = "Oklahoma"
                        },
                        new
                        {
                            Id = 349,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4518),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4519),
                            Name = "Oregon"
                        },
                        new
                        {
                            Id = 350,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4522),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4524),
                            Name = "Palmyra Atoll"
                        },
                        new
                        {
                            Id = 351,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4527),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4529),
                            Name = "Pennsylvania"
                        },
                        new
                        {
                            Id = 352,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4532),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4533),
                            Name = "Puerto Rico"
                        },
                        new
                        {
                            Id = 353,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4536),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4538),
                            Name = "Rhode Island"
                        },
                        new
                        {
                            Id = 354,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4541),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4542),
                            Name = "South Carolina"
                        },
                        new
                        {
                            Id = 355,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4546),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4547),
                            Name = "South Dakota"
                        },
                        new
                        {
                            Id = 356,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4550),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4552),
                            Name = "Tennessee"
                        },
                        new
                        {
                            Id = 357,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4555),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4557),
                            Name = "Texas"
                        },
                        new
                        {
                            Id = 358,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4560),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4562),
                            Name = "United States Minor Outlying Islands"
                        },
                        new
                        {
                            Id = 359,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4567),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4569),
                            Name = "United States Virgin Islands"
                        },
                        new
                        {
                            Id = 360,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4573),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4576),
                            Name = "Utah"
                        },
                        new
                        {
                            Id = 361,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4580),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4582),
                            Name = "Vermont"
                        },
                        new
                        {
                            Id = 362,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4586),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4588),
                            Name = "Virginia"
                        },
                        new
                        {
                            Id = 363,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4592),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4594),
                            Name = "Wake Island"
                        },
                        new
                        {
                            Id = 364,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4597),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4599),
                            Name = "Washington"
                        },
                        new
                        {
                            Id = 365,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4602),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4604),
                            Name = "West Virginia"
                        },
                        new
                        {
                            Id = 366,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4607),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4609),
                            Name = "Wisconsin"
                        },
                        new
                        {
                            Id = 367,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4613),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 852, DateTimeKind.Local).AddTicks(4614),
                            Name = "Wyoming"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("MM.ClientModels.Tax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Tax");
                });

            modelBuilder.Entity("MM.ClientModels.TaxPolicy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("TaxPolicy");
                });

            modelBuilder.Entity("MM.ClientModels.TaxScope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("TaxScopeCode")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("TaxScope");
                });

            modelBuilder.Entity("MM.ClientModels.Theme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("ThemeNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Theme");
                });

            modelBuilder.Entity("MM.ClientModels.TimeFormat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("TimeFormat");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 861, DateTimeKind.Local).AddTicks(5877),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 861, DateTimeKind.Local).AddTicks(6733),
                            Name = "12:00 AM/PM"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 861, DateTimeKind.Local).AddTicks(7556),
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 861, DateTimeKind.Local).AddTicks(7576),
                            Name = "24 Hours"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Title", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Title");

                    b.HasData(
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 873, DateTimeKind.Local).AddTicks(9391),
                            Description = "Mr",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 874, DateTimeKind.Local).AddTicks(147),
                            Name = "Mr"
                        },
                        new
                        {
                            Id = 20,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 874, DateTimeKind.Local).AddTicks(1167),
                            Description = "Mrs",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 874, DateTimeKind.Local).AddTicks(1185),
                            Name = "Mrs"
                        },
                        new
                        {
                            Id = 30,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 874, DateTimeKind.Local).AddTicks(1198),
                            Description = "Ms",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 874, DateTimeKind.Local).AddTicks(1200),
                            Name = "Ms"
                        },
                        new
                        {
                            Id = 40,
                            CreatedOn = new DateTime(2020, 7, 15, 6, 39, 47, 874, DateTimeKind.Local).AddTicks(1203),
                            Description = "Dr",
                            ModifiedOn = new DateTime(2020, 7, 15, 6, 39, 47, 874, DateTimeKind.Local).AddTicks(1205),
                            Name = "Dr"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.UserLoginAudit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("LoginTime")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LogoutTime")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserLoginAudit");
                });

            modelBuilder.Entity("MM.ClientModels.UserRoleXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoleXRef");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Value")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("MM.ClientModels.Address", b =>
                {
                    b.HasOne("MM.ClientModels.AddressType", "AddressType")
                        .WithMany("Address")
                        .HasForeignKey("AddressTypeId")
                        .HasConstraintName("FK_Address_AddressType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.City", "City")
                        .WithMany("Address")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_Address_City");

                    b.HasOne("MM.ClientModels.Country", "Country")
                        .WithMany("Address")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_Address_Country")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.State", "State")
                        .WithMany("Address")
                        .HasForeignKey("StateId")
                        .HasConstraintName("FK_Address_State")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.BankingDetail", b =>
                {
                    b.HasOne("MM.ClientModels.AccountType", "AccountType")
                        .WithMany("BankingDetail")
                        .HasForeignKey("AccountTypeId")
                        .HasConstraintName("FK_BankingDetail_AccountType")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.Billing", b =>
                {
                    b.HasOne("MM.ClientModels.Invoice", "Invoice")
                        .WithMany("Billing")
                        .HasForeignKey("InvoiceId")
                        .HasConstraintName("FK_Payment_Invoice");

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("Billing")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_Payment_Member")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PaymentGateway", "PaymentGateway")
                        .WithMany("Billing")
                        .HasForeignKey("PaymentGatewayId")
                        .HasConstraintName("FK_Payment_PaymentGateway")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("Billing")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_Billing_RelatedTo")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.BillingCommunication", b =>
                {
                    b.HasOne("MM.ClientModels.Billing", "Billing")
                        .WithOne("BillingCommunication")
                        .HasForeignKey("MM.ClientModels.BillingCommunication", "Id")
                        .HasConstraintName("FK_PaymentCommunication_Payment")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.City", b =>
                {
                    b.HasOne("MM.ClientModels.State", "State")
                        .WithMany("City")
                        .HasForeignKey("StateId")
                        .HasConstraintName("FK_City_State");
                });

            modelBuilder.Entity("MM.ClientModels.ClientOrganization", b =>
                {
                    b.HasOne("MM.ClientModels.ClientTimeZone", "ClientTimeZone")
                        .WithMany("Client")
                        .HasForeignKey("ClientTimeZoneId")
                        .HasConstraintName("FK_Client_TimeZone");

                    b.HasOne("MM.ClientModels.Currency", "Currency")
                        .WithMany("Client")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_Client_Currency");

                    b.HasOne("MM.ClientModels.DateSetting", "DateSetting")
                        .WithMany("Client")
                        .HasForeignKey("DateSettingId")
                        .HasConstraintName("FK_Client_DateSetting");

                    b.HasOne("MM.ClientModels.TimeFormat", "TimeFormat")
                        .WithMany("Client")
                        .HasForeignKey("TimeFormatId")
                        .HasConstraintName("FK_Client_TimeFormat");
                });

            modelBuilder.Entity("MM.ClientModels.ClientPlanHistory", b =>
                {
                    b.HasOne("MM.ClientModels.ClientUser", "BillingUser")
                        .WithMany("ClientPlanHistory")
                        .HasForeignKey("BillingUserId")
                        .HasConstraintName("FK_ClientPlanHistory_User")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.ClientUser", b =>
                {
                    b.HasOne("MM.ClientModels.Designation", "Designation")
                        .WithMany("User")
                        .HasForeignKey("DesignationId")
                        .HasConstraintName("FK_User_Designation");

                    b.HasOne("MM.ClientModels.Gender", "Gender")
                        .WithMany("User")
                        .HasForeignKey("GenderId")
                        .HasConstraintName("FK_User_Gender")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.ReferralType", "ReferralType")
                        .WithMany("User")
                        .HasForeignKey("ReferralTypeId")
                        .HasConstraintName("FK_User_ReferralType");

                    b.HasOne("MM.ClientModels.Role", "Role")
                        .WithMany("User")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_User_Role")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Title", "Title")
                        .WithMany("User")
                        .HasForeignKey("TitleId")
                        .HasConstraintName("FK_User_Title")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.CommunicationPreference", b =>
                {
                    b.HasOne("MM.ClientModels.CommunicationType", "CommunicationType")
                        .WithMany("CommunicationPreference")
                        .HasForeignKey("CommunicationTypeId")
                        .HasConstraintName("FK_CommunicationPreference_CommunicationType")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.Cpd", b =>
                {
                    b.HasOne("MM.ClientModels.ClientUser", "CpdawardedBy")
                        .WithMany("Cpd")
                        .HasForeignKey("CpdawardedById")
                        .HasConstraintName("FK_CPD_User")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("Cpd")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_CPD_Member")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("Cpd")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_CPD_RelatedTo")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberCategorySetUp", b =>
                {
                    b.HasOne("MM.ClientModels.MemberCategory", "MemberCategory")
                        .WithMany("CpdmemberCategorySetUp")
                        .HasForeignKey("MemberCategoryId")
                        .HasConstraintName("FK_CPDMemberCategorySetUp_MemberCategory");

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("CpdmemberCategorySetUp")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_CPDMemberCategorySetUp_RelatedTo")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberLevelSetUp", b =>
                {
                    b.HasOne("MM.ClientModels.MemberLevel", "MemberLevel")
                        .WithMany("CpdmemberLevelSetUp")
                        .HasForeignKey("MemberLevelId")
                        .HasConstraintName("FK_CPDMemberLevelSetUp_MemberLevel");

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("CpdmemberLevelSetUp")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_CPDMemberLevelSetUp_RelatedTo")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberTeamSetUp", b =>
                {
                    b.HasOne("MM.ClientModels.MemberTeam", "MemberTeam")
                        .WithMany("CpdmemberTeamSetUp")
                        .HasForeignKey("MemberTeamId")
                        .HasConstraintName("FK_CPDMemberTeamSetUp_MemberTeam");

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("CpdmemberTeamSetUp")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_CPDMemberTeamSetUp_RelatedTo")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberTypeSetUp", b =>
                {
                    b.HasOne("MM.ClientModels.MemberType", "MemberType")
                        .WithMany("CpdmemberTypeSetUp")
                        .HasForeignKey("MemberTypeId")
                        .HasConstraintName("FK_CPDMemberTypeSetUp_MemberType");

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("CpdmemberTypeSetUp")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_CPDMemberTypeSetUp_RelatedTo")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.Donation", b =>
                {
                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("Donation")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_Donation_Member")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PromotionDetail", "PromotionDetail")
                        .WithMany("Donation")
                        .HasForeignKey("PromotionDetailId")
                        .HasConstraintName("FK_Donation_PromotionDetail");
                });

            modelBuilder.Entity("MM.ClientModels.EmailCcrule", b =>
                {
                    b.HasOne("MM.ClientModels.EmailType", "EmailType")
                        .WithMany("EmailCcrule")
                        .HasForeignKey("EmailTypeId")
                        .HasConstraintName("FK_EmailCCRule_EmailType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Role", "Role")
                        .WithMany("EmailCcrule")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_EmailCCRule_Role")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EmailTemplateContent", b =>
                {
                    b.HasOne("MM.ClientModels.EmailTemplateName", "EmailTemplateName")
                        .WithMany("EmailTemplateContent")
                        .HasForeignKey("EmailTemplateNameId")
                        .HasConstraintName("FK_EmailTemplateContent_EmailTemplateName")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EquipmentCount", b =>
                {
                    b.HasOne("MM.ClientModels.Equipment", "Equipment")
                        .WithMany("EquipmentCount")
                        .HasForeignKey("EquipmentId")
                        .HasConstraintName("FK_EquipmentCount_Equipment")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.Event", b =>
                {
                    b.HasOne("MM.ClientModels.Address", "Address")
                        .WithMany("Event")
                        .HasForeignKey("AddressId")
                        .HasConstraintName("FK_Event_Address")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.ClientUser", "Organizer")
                        .WithMany("Event")
                        .HasForeignKey("OrganizerId")
                        .HasConstraintName("FK_Event_User")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.ClientTimeZone", "TimeZone")
                        .WithMany("Event")
                        .HasForeignKey("TimeZoneId")
                        .HasConstraintName("FK_Event_TimeZone")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventAccess", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventAccess")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventAccess_Event")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventAttendance", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventAttendance")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventAttendance_Event")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("EventAttendance")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_EventAttendance_Member")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventCommunication", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventCommunication")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventCommunication_Event")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventEquipment", b =>
                {
                    b.HasOne("MM.ClientModels.Equipment", "Equipment")
                        .WithMany("EventEquipment")
                        .HasForeignKey("EquipmentId")
                        .HasConstraintName("FK_EventEquipmentRequirement_Equipment")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventEquipment")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventEquipmentRequirement_Event")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventMinute", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventMinute")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventMinute_Event")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.EventMinuteStatus", "MinuteStatus")
                        .WithMany("EventMinute")
                        .HasForeignKey("MinuteStatusId")
                        .HasConstraintName("FK_EventMinute_EventMinuteStatus")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventPreRequisiteEvent", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventPreRequisiteEventEvent")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventPreRequisiteEvent_Event")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Event", "PreRequisiteEvent")
                        .WithMany("EventPreRequisiteEventPreRequisiteEvent")
                        .HasForeignKey("PreRequisiteEventId")
                        .HasConstraintName("FK_EventPreRequisiteEvent_PreRequisiteEventId_Event")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventRegistration", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventRegistration")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventRegistration_Event")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.EventResponseType", "EventResponseType")
                        .WithMany("EventRegistration")
                        .HasForeignKey("EventResponseTypeId")
                        .HasConstraintName("FK_EventRegistration_EventResponseType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("EventRegistration")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_EventRegistration_Member")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventRestrictionList", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventRestrictionList")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventRestrictionList_Event")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.MemberLevel", "MemberLevel")
                        .WithMany("EventRestrictionList")
                        .HasForeignKey("MemberLevelId")
                        .HasConstraintName("FK_EventRestrictionList_MemberLevel");

                    b.HasOne("MM.ClientModels.MemberTeam", "MemberTeam")
                        .WithMany("EventRestrictionList")
                        .HasForeignKey("MemberTeamId")
                        .HasConstraintName("FK_EventRestrictionList_MemberTeam");
                });

            modelBuilder.Entity("MM.ClientModels.EventRole", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventRole")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventRole_Event")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventRoleUserXref", b =>
                {
                    b.HasOne("MM.ClientModels.EventRole", "EventRole")
                        .WithMany("EventRoleUserXref")
                        .HasForeignKey("EventRoleId")
                        .HasConstraintName("FK_EventRoleUserXRef_EventRole")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.ClientUser", "User")
                        .WithMany("EventRoleUserXref")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_EventRoleUserXRef_User")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.Invoice", b =>
                {
                    b.HasOne("MM.ClientModels.InvoiceStatus", "InvoiceStatus")
                        .WithMany("Invoice")
                        .HasForeignKey("InvoiceStatusId")
                        .HasConstraintName("FK_Invoice_InvoiceStatus")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("Invoice")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_Invoice_Member")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PaymentGateway", "PaymentGateway")
                        .WithMany("Invoice")
                        .HasForeignKey("PaymentGatewayId")
                        .HasConstraintName("FK_Invoice_PaymentGateway")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("Invoice")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_Invoice_RelatedTo");
                });

            modelBuilder.Entity("MM.ClientModels.LandingPage", b =>
                {
                    b.HasOne("MM.ClientModels.MemberType", "MemberType")
                        .WithMany("LandingPage")
                        .HasForeignKey("MemberTypeId")
                        .HasConstraintName("FK_LandingPage_MemberType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Page", "Page")
                        .WithMany("LandingPage")
                        .HasForeignKey("PageId")
                        .HasConstraintName("FK_LandingPage_Page")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.MarketingGroupXref", b =>
                {
                    b.HasOne("MM.ClientModels.MarketingGroup", "MarketingGroup")
                        .WithMany("MarketingGroupXref")
                        .HasForeignKey("MarketingGroupId")
                        .HasConstraintName("FK_MarketingGroupXRef_MarketingGroup")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MarketingGroupXref")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MarketingGroupXRef_Member")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.MarketingProfileXref", b =>
                {
                    b.HasOne("MM.ClientModels.MarketingProfile", "MarketingProfile")
                        .WithMany("MarketingProfileXref")
                        .HasForeignKey("MarketingProfileId")
                        .HasConstraintName("FK_MarketingProfileXRef_MarketingProfile")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MarketingProfileXref")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MarketingProfileXRef_Member")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.Member", b =>
                {
                    b.HasOne("MM.ClientModels.Gender", "Gender")
                        .WithMany("Member")
                        .HasForeignKey("GenderId")
                        .HasConstraintName("FK_Member_Gender")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.MemberBranch", "MemberBranch")
                        .WithMany("Member")
                        .HasForeignKey("MemberBranchId")
                        .HasConstraintName("FK_Member_MemberBranch");

                    b.HasOne("MM.ClientModels.MemberLevel", "MemberLevel")
                        .WithMany("Member")
                        .HasForeignKey("MemberLevelId")
                        .HasConstraintName("FK_Member_MemberLevel");

                    b.HasOne("MM.ClientModels.MemberStatus", "MemberStatus")
                        .WithMany("Member")
                        .HasForeignKey("MemberStatusId")
                        .HasConstraintName("FK_Member_MemberStatus");

                    b.HasOne("MM.ClientModels.MemberTeam", "MemberTeam")
                        .WithMany("Member")
                        .HasForeignKey("MemberTeamId")
                        .HasConstraintName("FK_Member_MemberTeam");

                    b.HasOne("MM.ClientModels.MemberType", "MemberType")
                        .WithMany("Member")
                        .HasForeignKey("MemberTypeId")
                        .HasConstraintName("FK_Member_MemberType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Organization", "Organization")
                        .WithMany("Member")
                        .HasForeignKey("OrganizationId")
                        .HasConstraintName("FK_Member_Organization");

                    b.HasOne("MM.ClientModels.OrganizationStructure", "OrganizationStructure")
                        .WithMany("Member")
                        .HasForeignKey("OrganizationStructureId")
                        .HasConstraintName("FK_Member_OrganizationStructure");

                    b.HasOne("MM.ClientModels.ReferralType", "ReferralType")
                        .WithMany("Member")
                        .HasForeignKey("ReferralTypeId")
                        .HasConstraintName("FK_Member_ReferralType");

                    b.HasOne("MM.ClientModels.Title", "Title")
                        .WithMany("Member")
                        .HasForeignKey("TitleId")
                        .HasConstraintName("FK_Member_Title")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.MemberAddress", b =>
                {
                    b.HasOne("MM.ClientModels.AddressType", "AddressType")
                        .WithMany("MemberAddress")
                        .HasForeignKey("AddressTypeId")
                        .HasConstraintName("FK_MemberAddress_AddressType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.MemberBranch", "Branch")
                        .WithMany("MemberAddress")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_MemberAddress_MemberBranch");

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MemberAddress")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MemberAddress_Member");

                    b.HasOne("MM.ClientModels.Organization", "Organization")
                        .WithMany("MemberAddress")
                        .HasForeignKey("OrganizationId")
                        .HasConstraintName("FK_MemberAddress_Organization");
                });

            modelBuilder.Entity("MM.ClientModels.MemberAffliationXref", b =>
                {
                    b.HasOne("MM.ClientModels.Affliation", "Affliation")
                        .WithMany("MemberAffliationXref")
                        .HasForeignKey("AffliationId")
                        .HasConstraintName("FK_MemberAffliationXRef_Affliation");

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MemberAffliationXref")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MemberAffliationXRef_Member");
                });

            modelBuilder.Entity("MM.ClientModels.MemberBankingDetail", b =>
                {
                    b.HasOne("MM.ClientModels.AccountType", "AccountType")
                        .WithMany("MemberBankingDetail")
                        .HasForeignKey("AccountTypeId")
                        .HasConstraintName("FK_MemberBankingDetail_AccountType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MemberBankingDetail")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MemberBankingDetail_Member")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.MemberBranch", b =>
                {
                    b.HasOne("MM.ClientModels.Organization", "Organization")
                        .WithMany("MemberBranch")
                        .HasForeignKey("OrganizationId")
                        .HasConstraintName("FK_MemberBranch_Organization")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.MemberCommunicationPreference", b =>
                {
                    b.HasOne("MM.ClientModels.CommunicationType", "CommunicationType")
                        .WithMany("MemberCommunicationPreference")
                        .HasForeignKey("CommunicationTypeId")
                        .HasConstraintName("FK_MemberCommunicationPreference_CommunicationType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MemberCommunicationPreference")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MemberCommunicationPreference_Member")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.MemberFile", b =>
                {
                    b.HasOne("MM.ClientModels.FileType", "FileType")
                        .WithMany("MemberFile")
                        .HasForeignKey("FileTypeId")
                        .HasConstraintName("FK_MemberFile_FileType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MemberFile")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MemberFile_Member")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.MemberPlanHistory", b =>
                {
                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MemberPlanHistory")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MembershipHistory_Member");

                    b.HasOne("MM.ClientModels.PlanDetail", "MemberPlanDetail")
                        .WithMany("MemberPlanHistory")
                        .HasForeignKey("MemberPlanDetailId")
                        .HasConstraintName("FK_MemberPlanHistory_PlanDetail")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PlanMaster", "MemberPlanDetailNavigation")
                        .WithMany("MemberPlanHistory")
                        .HasForeignKey("MemberPlanDetailId")
                        .HasConstraintName("FK_MembershipHistory_PlanMaster")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Organization", "Organization")
                        .WithMany("MemberPlanHistory")
                        .HasForeignKey("OrganizationId")
                        .HasConstraintName("FK_MembershipHistory_Organization");
                });

            modelBuilder.Entity("MM.ClientModels.MemberQualificationXref", b =>
                {
                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MemberQualificationXref")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MemberQualificationXRef_Member")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Qualification", "Qualification")
                        .WithMany("MemberQualificationXref")
                        .HasForeignKey("QualificationId")
                        .HasConstraintName("FK_MemberQualificationXRef_Qualification");
                });

            modelBuilder.Entity("MM.ClientModels.MemberType", b =>
                {
                    b.HasOne("MM.ClientModels.MemberCategory", "MemberCategory")
                        .WithMany("MemberType")
                        .HasForeignKey("MemberCategoryId")
                        .HasConstraintName("FK_MemberType_MemberCategory")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.PaymentSetting", b =>
                {
                    b.HasOne("MM.ClientModels.Currency", "Currency")
                        .WithMany("PaymentSetting")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_PaymentSetting_Currency");
                });

            modelBuilder.Entity("MM.ClientModels.PaymentSettingAllowedCard", b =>
                {
                    b.HasOne("MM.ClientModels.PaymentCard", "PaymentCard")
                        .WithMany("PaymentSettingAllowedCard")
                        .HasForeignKey("PaymentCardId")
                        .HasConstraintName("FK_PaymentSettingAllowedCard_PaymentCard")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PaymentSetting", "PaymentSetting")
                        .WithMany("PaymentSettingAllowedCard")
                        .HasForeignKey("PaymentSettingId")
                        .HasConstraintName("FK_PaymentSettingAllowedCard_PaymentSetting")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.PlanCanChangeToXref", b =>
                {
                    b.HasOne("MM.ClientModels.PlanMaster", "FromPlanMaster")
                        .WithMany("PlanCanChangeToXrefFromPlanMaster")
                        .HasForeignKey("FromPlanMasterId")
                        .HasConstraintName("FK_MemberPlanCanChangeTo_PlanMaster")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PlanMaster", "ToPlanMaster")
                        .WithMany("PlanCanChangeToXrefToPlanMaster")
                        .HasForeignKey("ToPlanMasterId")
                        .HasConstraintName("FK_MemberPlanCanChangeTo_PlanMaster2")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.PlanDetail", b =>
                {
                    b.HasOne("MM.ClientModels.Currency", "Currency")
                        .WithMany("PlanDetail")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_PlanDetail_Currency")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PlanFrequency", "PlanFrequency")
                        .WithMany("PlanDetail")
                        .HasForeignKey("PlanFrequencyId")
                        .HasConstraintName("FK_PlanDetail_PlanFrequency")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PlanMaster", "PlanMaster")
                        .WithMany("PlanDetail")
                        .HasForeignKey("PlanMasterId")
                        .HasConstraintName("FK_PlanDetail_PlanMaster")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.PlanMaster", b =>
                {
                    b.HasOne("MM.ClientModels.MemberCategory", "MemberCategory")
                        .WithMany("PlanMaster")
                        .HasForeignKey("MemberCategoryId")
                        .HasConstraintName("FK_PlanMaster_MemberCategory")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PaymentSetting", "PaymentMethod")
                        .WithMany("PlanMaster")
                        .HasForeignKey("PaymentMethodId")
                        .HasConstraintName("FK_PlanMaster_PaymentSetting")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.PromotionDetail", b =>
                {
                    b.HasOne("MM.ClientModels.MemberLevel", "MemberLevel")
                        .WithMany("PromotionDetail")
                        .HasForeignKey("MemberLevelId")
                        .HasConstraintName("FK_PromotionDetail_MemberLevel");

                    b.HasOne("MM.ClientModels.MemberType", "MemberType")
                        .WithMany("PromotionDetail")
                        .HasForeignKey("MemberTypeId")
                        .HasConstraintName("FK_PromotionDetail_MemberType");

                    b.HasOne("MM.ClientModels.PromotionMaster", "PromotionMaster")
                        .WithMany("PromotionDetail")
                        .HasForeignKey("PromotionMasterId")
                        .HasConstraintName("FK_PromotionDetail_PromotionMaster")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.PromotionResponse", b =>
                {
                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("PromotionResponse")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_PromotionResponse_Member")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PromotionMaster", "PromotionMaster")
                        .WithMany("PromotionResponse")
                        .HasForeignKey("PromotionMasterId")
                        .HasConstraintName("FK_PromotionResponse_PromotionMaster")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PromotionResponseType", "PromotionResponseTypeNavigation")
                        .WithMany("PromotionResponse")
                        .HasForeignKey("PromotionResponseType")
                        .HasConstraintName("FK_PromotionResponse_PromotionResponseType")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.Refund", b =>
                {
                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("Refund")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_Refund_Member")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PaymentGateway", "PaymentGateway")
                        .WithMany("Refund")
                        .HasForeignKey("PaymentGatewayId")
                        .HasConstraintName("FK_Refund_PaymentGateway")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("Refund")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_Refund_RelatedTo");
                });

            modelBuilder.Entity("MM.ClientModels.RolePermissionXref", b =>
                {
                    b.HasOne("MM.ClientModels.Permission", "Permission")
                        .WithMany("RolePermissionXref")
                        .HasForeignKey("Permissionid")
                        .HasConstraintName("FK_RolePermissionXRef_Permission")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Role", "Role")
                        .WithMany("RolePermissionXref")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_RolePermissionXRef_Role")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.State", b =>
                {
                    b.HasOne("MM.ClientModels.Country", "Country")
                        .WithMany("State")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_State_Country")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.UserRoleXref", b =>
                {
                    b.HasOne("MM.ClientModels.Role", "Role")
                        .WithMany("UserRoleXref")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_UserRole_Role")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.ClientUser", "User")
                        .WithMany("UserRoleXref")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserRole_User")
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
