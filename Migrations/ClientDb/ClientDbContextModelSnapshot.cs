// <auto-generated />
using System;
using MM.ClientModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MM.Migrations.ClientDb
{
    [DbContext(typeof(ClientDbContext))]
    partial class ClientDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MM.ClientModels.AccountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("AccountType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 606, DateTimeKind.Local).AddTicks(1986),
                            Description = "Savings Account",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 607, DateTimeKind.Local).AddTicks(6035),
                            Name = "Savings Account"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 607, DateTimeKind.Local).AddTicks(7089),
                            Description = "Cheque Account",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 607, DateTimeKind.Local).AddTicks(7111),
                            Name = "Cheque Account"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 607, DateTimeKind.Local).AddTicks(7124),
                            Description = "Corporate Account",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 607, DateTimeKind.Local).AddTicks(7127),
                            Name = "Corporate Account"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 607, DateTimeKind.Local).AddTicks(7130),
                            Description = "Business Account",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 607, DateTimeKind.Local).AddTicks(7132),
                            Name = "Business Account"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("AddressLine2")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("AddressTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BuidlingName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("ComplexName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Gpscoordinates")
                        .HasColumnName("GPSCoordinates")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("PostalCode")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("PrimaryContactNo")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("PrimaryEmail")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("SecondaryContactNo")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("SecondaryEmail")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("StreetName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressTypeId");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("StateId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("MM.ClientModels.AddressType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("AddressType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 622, DateTimeKind.Local).AddTicks(7895),
                            Description = "Postal Address",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 622, DateTimeKind.Local).AddTicks(7928),
                            Name = "Postal Address"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 622, DateTimeKind.Local).AddTicks(7932),
                            Description = "Physical Account",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 622, DateTimeKind.Local).AddTicks(7934),
                            Name = "Physical Address"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 622, DateTimeKind.Local).AddTicks(7937),
                            Description = "Billing Address",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 622, DateTimeKind.Local).AddTicks(7939),
                            Name = "Billing Address"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 622, DateTimeKind.Local).AddTicks(7942),
                            Description = "Business Address",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 622, DateTimeKind.Local).AddTicks(7943),
                            Name = "Business Address"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 622, DateTimeKind.Local).AddTicks(7947),
                            Description = "Shipping Address",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 622, DateTimeKind.Local).AddTicks(7948),
                            Name = "Shipping Address"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 622, DateTimeKind.Local).AddTicks(7952),
                            Description = "Contract Address",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 622, DateTimeKind.Local).AddTicks(7953),
                            Name = "Contract Address"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Affliation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Affliation");
                });

            modelBuilder.Entity("MM.ClientModels.BankingDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("AccountTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("RoutingCode")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AccountTypeId");

                    b.ToTable("BankingDetail");
                });

            modelBuilder.Entity("MM.ClientModels.Billing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CommentsForPayer")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("InternalNotes")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("PaidAmount")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<DateTime?>("PaymentDueDate")
                        .HasColumnType("datetime");

                    b.Property<int>("PaymentGatewayId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentItem")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("MemberId");

                    b.HasIndex("PaymentGatewayId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("Billing");
                });

            modelBuilder.Entity("MM.ClientModels.BillingCommunication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BillingId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Reminder1ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Reminder1Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Reminder1SentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Reminder2ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Reminder2Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Reminder2SentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Reminder3ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Reminder3Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Reminder3SentDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("BillingCommunication");
                });

            modelBuilder.Entity("MM.ClientModels.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(3918),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(4864),
                            Name = "Adelaide",
                            StateId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5847),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5872),
                            Name = "Alfred Nzo District Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5886),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5889),
                            Name = "Alice",
                            StateId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5893),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5895),
                            Name = "Aliwal North",
                            StateId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5899),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5901),
                            Name = "Amathole District Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5904),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5906),
                            Name = "Bhisho",
                            StateId = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5911),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5913),
                            Name = "Buffalo City Metropolitan Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5917),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5919),
                            Name = "Burgersdorp",
                            StateId = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5923),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5925),
                            Name = "Butterworth",
                            StateId = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5929),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5931),
                            Name = "Cacadu District Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 11,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5934),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5936),
                            Name = "Chris Hani District Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 12,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5941),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5943),
                            Name = "Cradock",
                            StateId = 1
                        },
                        new
                        {
                            Id = 13,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5946),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5948),
                            Name = "Dordrecht",
                            StateId = 1
                        },
                        new
                        {
                            Id = 14,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5951),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5953),
                            Name = "East London",
                            StateId = 1
                        },
                        new
                        {
                            Id = 15,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5957),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5959),
                            Name = "Elliot",
                            StateId = 1
                        },
                        new
                        {
                            Id = 16,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5962),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5964),
                            Name = "Fort Beaufort",
                            StateId = 1
                        },
                        new
                        {
                            Id = 17,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5968),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5970),
                            Name = "Graaff-Reinet",
                            StateId = 1
                        },
                        new
                        {
                            Id = 18,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5973),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5975),
                            Name = "Grahamstown",
                            StateId = 1
                        },
                        new
                        {
                            Id = 19,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5978),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5980),
                            Name = "Ilinge",
                            StateId = 1
                        },
                        new
                        {
                            Id = 20,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5984),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5986),
                            Name = "Joe Gqabi District Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 21,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5989),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5991),
                            Name = "Kirkwood",
                            StateId = 1
                        },
                        new
                        {
                            Id = 22,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5994),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(5996),
                            Name = "Kruisfontein",
                            StateId = 1
                        },
                        new
                        {
                            Id = 23,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6000),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6003),
                            Name = "Lady Frere",
                            StateId = 1
                        },
                        new
                        {
                            Id = 24,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6006),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6008),
                            Name = "Middelburg",
                            StateId = 1
                        },
                        new
                        {
                            Id = 25,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6011),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6013),
                            Name = "Molteno",
                            StateId = 1
                        },
                        new
                        {
                            Id = 26,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6016),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6018),
                            Name = "Mthatha",
                            StateId = 1
                        },
                        new
                        {
                            Id = 27,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6021),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6023),
                            Name = "Nelson Mandela Bay Metropolitan Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 28,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6026),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6028),
                            Name = "OR Tambo District Municipality",
                            StateId = 1
                        },
                        new
                        {
                            Id = 29,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6032),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6033),
                            Name = "Port Alfred",
                            StateId = 1
                        },
                        new
                        {
                            Id = 30,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6037),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6039),
                            Name = "Port Elizabeth",
                            StateId = 1
                        },
                        new
                        {
                            Id = 31,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6042),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6044),
                            Name = "Port Saint Johnâ€™s",
                            StateId = 1
                        },
                        new
                        {
                            Id = 32,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6048),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6049),
                            Name = "Queensdale",
                            StateId = 1
                        },
                        new
                        {
                            Id = 33,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6053),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6055),
                            Name = "Queenstown",
                            StateId = 1
                        },
                        new
                        {
                            Id = 34,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6058),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6060),
                            Name = "Somerset East",
                            StateId = 1
                        },
                        new
                        {
                            Id = 35,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6064),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6066),
                            Name = "Stutterheim",
                            StateId = 1
                        },
                        new
                        {
                            Id = 36,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6069),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6071),
                            Name = "Uitenhage",
                            StateId = 1
                        },
                        new
                        {
                            Id = 37,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6074),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6076),
                            Name = "Whittlesea",
                            StateId = 1
                        },
                        new
                        {
                            Id = 38,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6080),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6081),
                            Name = "Willowmore",
                            StateId = 1
                        },
                        new
                        {
                            Id = 39,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6085),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6087),
                            Name = "Allanridge",
                            StateId = 2
                        },
                        new
                        {
                            Id = 40,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6091),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6092),
                            Name = "Bethlehem",
                            StateId = 2
                        },
                        new
                        {
                            Id = 41,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6096),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6098),
                            Name = "Bloemfontein",
                            StateId = 2
                        },
                        new
                        {
                            Id = 42,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6101),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6103),
                            Name = "Bothaville",
                            StateId = 2
                        },
                        new
                        {
                            Id = 43,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6106),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6108),
                            Name = "Botshabelo",
                            StateId = 2
                        },
                        new
                        {
                            Id = 44,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6111),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6113),
                            Name = "Brandfort",
                            StateId = 2
                        },
                        new
                        {
                            Id = 45,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6117),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6119),
                            Name = "Clocolan",
                            StateId = 2
                        },
                        new
                        {
                            Id = 46,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6123),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6125),
                            Name = "Deneysville",
                            StateId = 2
                        },
                        new
                        {
                            Id = 47,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6145),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6147),
                            Name = "Fezile Dabi District Municipality",
                            StateId = 2
                        },
                        new
                        {
                            Id = 48,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6151),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6152),
                            Name = "Frankfort",
                            StateId = 2
                        },
                        new
                        {
                            Id = 49,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6156),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6158),
                            Name = "Harrismith",
                            StateId = 2
                        },
                        new
                        {
                            Id = 50,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6161),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6163),
                            Name = "Heilbron",
                            StateId = 2
                        },
                        new
                        {
                            Id = 51,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6166),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6168),
                            Name = "Hennenman",
                            StateId = 2
                        },
                        new
                        {
                            Id = 52,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6171),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6173),
                            Name = "Hoopstad",
                            StateId = 2
                        },
                        new
                        {
                            Id = 53,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6176),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6178),
                            Name = "Koppies",
                            StateId = 2
                        },
                        new
                        {
                            Id = 54,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6181),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6183),
                            Name = "Kroonstad",
                            StateId = 2
                        },
                        new
                        {
                            Id = 55,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6187),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6189),
                            Name = "Kutloanong",
                            StateId = 2
                        },
                        new
                        {
                            Id = 56,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6192),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6194),
                            Name = "Ladybrand",
                            StateId = 2
                        },
                        new
                        {
                            Id = 57,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6197),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6199),
                            Name = "Lejweleputswa District Municipality",
                            StateId = 2
                        },
                        new
                        {
                            Id = 58,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6203),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6205),
                            Name = "Lindley",
                            StateId = 2
                        },
                        new
                        {
                            Id = 59,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6209),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6210),
                            Name = "Mangaung Metropolitan Municipality",
                            StateId = 2
                        },
                        new
                        {
                            Id = 60,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6214),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6216),
                            Name = "Marquard",
                            StateId = 2
                        },
                        new
                        {
                            Id = 61,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6219),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6221),
                            Name = "Parys",
                            StateId = 2
                        },
                        new
                        {
                            Id = 62,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6224),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6226),
                            Name = "Phuthaditjhaba",
                            StateId = 2
                        },
                        new
                        {
                            Id = 63,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6229),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6231),
                            Name = "Reitz",
                            StateId = 2
                        },
                        new
                        {
                            Id = 64,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6234),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6236),
                            Name = "Sasolburg",
                            StateId = 2
                        },
                        new
                        {
                            Id = 65,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6240),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6241),
                            Name = "Senekal",
                            StateId = 2
                        },
                        new
                        {
                            Id = 66,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6245),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6247),
                            Name = "Thaba Nchu",
                            StateId = 2
                        },
                        new
                        {
                            Id = 67,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6250),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6252),
                            Name = "Thabo Mofutsanyana District Municipality",
                            StateId = 2
                        },
                        new
                        {
                            Id = 68,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6255),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6257),
                            Name = "Theunissen",
                            StateId = 2
                        },
                        new
                        {
                            Id = 69,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6261),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6263),
                            Name = "Ventersburg",
                            StateId = 2
                        },
                        new
                        {
                            Id = 70,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6267),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6268),
                            Name = "Viljoenskroon",
                            StateId = 2
                        },
                        new
                        {
                            Id = 71,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6272),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6274),
                            Name = "Villiers",
                            StateId = 2
                        },
                        new
                        {
                            Id = 72,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6277),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6279),
                            Name = "Virginia",
                            StateId = 2
                        },
                        new
                        {
                            Id = 73,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6282),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6284),
                            Name = "Vrede",
                            StateId = 2
                        },
                        new
                        {
                            Id = 74,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6287),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6289),
                            Name = "Vredefort",
                            StateId = 2
                        },
                        new
                        {
                            Id = 75,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6292),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6294),
                            Name = "Welkom",
                            StateId = 2
                        },
                        new
                        {
                            Id = 76,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6298),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6299),
                            Name = "Wesselsbron",
                            StateId = 2
                        },
                        new
                        {
                            Id = 77,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6303),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6305),
                            Name = "Winburg",
                            StateId = 2
                        },
                        new
                        {
                            Id = 78,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6308),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6310),
                            Name = "Xhariep District Municipality",
                            StateId = 2
                        },
                        new
                        {
                            Id = 79,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6313),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6315),
                            Name = "Zastron",
                            StateId = 2
                        },
                        new
                        {
                            Id = 80,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6318),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6320),
                            Name = "Alberton",
                            StateId = 3
                        },
                        new
                        {
                            Id = 81,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6325),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6326),
                            Name = "Benoni",
                            StateId = 3
                        },
                        new
                        {
                            Id = 82,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6330),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6332),
                            Name = "Boksburg",
                            StateId = 3
                        },
                        new
                        {
                            Id = 83,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6335),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6337),
                            Name = "Brakpan",
                            StateId = 3
                        },
                        new
                        {
                            Id = 84,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6340),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6342),
                            Name = "Bronkhorstspruit",
                            StateId = 3
                        },
                        new
                        {
                            Id = 85,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6345),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6347),
                            Name = "Carletonville",
                            StateId = 3
                        },
                        new
                        {
                            Id = 86,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6351),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6352),
                            Name = "Centurion",
                            StateId = 3
                        },
                        new
                        {
                            Id = 87,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6356),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6358),
                            Name = "City of Johannesburg Metropolitan Municipality",
                            StateId = 3
                        },
                        new
                        {
                            Id = 88,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6361),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6363),
                            Name = "City of Tshwane Metropolitan Municipality",
                            StateId = 3
                        },
                        new
                        {
                            Id = 89,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6367),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6369),
                            Name = "Cullinan",
                            StateId = 3
                        },
                        new
                        {
                            Id = 90,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6372),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6374),
                            Name = "Diepsloot",
                            StateId = 3
                        },
                        new
                        {
                            Id = 91,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6377),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6379),
                            Name = "Eastleigh",
                            StateId = 3
                        },
                        new
                        {
                            Id = 92,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6383),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6385),
                            Name = "Eden Glen",
                            StateId = 3
                        },
                        new
                        {
                            Id = 93,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6397),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6399),
                            Name = "Eden Glen Ext 60",
                            StateId = 3
                        },
                        new
                        {
                            Id = 94,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6403),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6404),
                            Name = "Edenvale",
                            StateId = 3
                        },
                        new
                        {
                            Id = 95,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6408),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6410),
                            Name = "Ekangala",
                            StateId = 3
                        },
                        new
                        {
                            Id = 96,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6413),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6415),
                            Name = "Ekurhuleni Metropolitan Municipality",
                            StateId = 3
                        },
                        new
                        {
                            Id = 97,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6419),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6421),
                            Name = "Heidelberg",
                            StateId = 3
                        },
                        new
                        {
                            Id = 98,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6424),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6426),
                            Name = "Johannesburg",
                            StateId = 3
                        },
                        new
                        {
                            Id = 99,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6429),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6431),
                            Name = "Krugersdorp",
                            StateId = 3
                        },
                        new
                        {
                            Id = 100,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6434),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6436),
                            Name = "Mabopane",
                            StateId = 3
                        },
                        new
                        {
                            Id = 101,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6440),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6441),
                            Name = "Midrand",
                            StateId = 3
                        },
                        new
                        {
                            Id = 102,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6445),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6447),
                            Name = "Midstream",
                            StateId = 3
                        },
                        new
                        {
                            Id = 103,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6451),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6454),
                            Name = "Modderfontein",
                            StateId = 3
                        },
                        new
                        {
                            Id = 104,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6458),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6460),
                            Name = "Muldersdriseloop",
                            StateId = 3
                        },
                        new
                        {
                            Id = 105,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6463),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6465),
                            Name = "Nigel",
                            StateId = 3
                        },
                        new
                        {
                            Id = 106,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6468),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6470),
                            Name = "Orange Farm",
                            StateId = 3
                        },
                        new
                        {
                            Id = 107,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6474),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6476),
                            Name = "Pretoria",
                            StateId = 3
                        },
                        new
                        {
                            Id = 108,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6479),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6481),
                            Name = "Randburg",
                            StateId = 3
                        },
                        new
                        {
                            Id = 109,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6484),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6486),
                            Name = "Randfontein",
                            StateId = 3
                        },
                        new
                        {
                            Id = 110,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6489),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6491),
                            Name = "Roodepoort",
                            StateId = 3
                        },
                        new
                        {
                            Id = 111,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6495),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6497),
                            Name = "Sedibeng District Municipality",
                            StateId = 3
                        },
                        new
                        {
                            Id = 112,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6500),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6502),
                            Name = "Soweto",
                            StateId = 3
                        },
                        new
                        {
                            Id = 113,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6506),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6507),
                            Name = "Springs",
                            StateId = 3
                        },
                        new
                        {
                            Id = 114,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6511),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6513),
                            Name = "Tembisa",
                            StateId = 3
                        },
                        new
                        {
                            Id = 115,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6517),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6519),
                            Name = "Vanderbijlpark",
                            StateId = 3
                        },
                        new
                        {
                            Id = 116,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6523),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6525),
                            Name = "Vereeniging",
                            StateId = 3
                        },
                        new
                        {
                            Id = 117,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6528),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6530),
                            Name = "West Rand District Municipality",
                            StateId = 3
                        },
                        new
                        {
                            Id = 118,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6534),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6536),
                            Name = "Westonaria",
                            StateId = 3
                        },
                        new
                        {
                            Id = 119,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6540),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6542),
                            Name = "Amajuba District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 120,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6546),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6548),
                            Name = "Ballito",
                            StateId = 4
                        },
                        new
                        {
                            Id = 121,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6551),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6554),
                            Name = "Berea",
                            StateId = 4
                        },
                        new
                        {
                            Id = 122,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6557),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6559),
                            Name = "Dundee",
                            StateId = 4
                        },
                        new
                        {
                            Id = 123,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6562),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6565),
                            Name = "Durban",
                            StateId = 4
                        },
                        new
                        {
                            Id = 124,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6568),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6570),
                            Name = "Ekuvukeni",
                            StateId = 4
                        },
                        new
                        {
                            Id = 125,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6573),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6575),
                            Name = "eMkhomazi",
                            StateId = 4
                        },
                        new
                        {
                            Id = 126,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6579),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6581),
                            Name = "Empangeni",
                            StateId = 4
                        },
                        new
                        {
                            Id = 127,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6585),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6587),
                            Name = "Eshowe",
                            StateId = 4
                        },
                        new
                        {
                            Id = 128,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6591),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6592),
                            Name = "eSikhaleni",
                            StateId = 4
                        },
                        new
                        {
                            Id = 129,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6596),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6597),
                            Name = "eThekwini Metropolitan Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 130,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6601),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6603),
                            Name = "Glencoe",
                            StateId = 4
                        },
                        new
                        {
                            Id = 131,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6606),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6608),
                            Name = "Greytown",
                            StateId = 4
                        },
                        new
                        {
                            Id = 132,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6611),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6613),
                            Name = "Hluhluwe",
                            StateId = 4
                        },
                        new
                        {
                            Id = 133,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6617),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6619),
                            Name = "Howick",
                            StateId = 4
                        },
                        new
                        {
                            Id = 134,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6622),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6624),
                            Name = "iLembe District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 135,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6627),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6629),
                            Name = "Kokstad",
                            StateId = 4
                        },
                        new
                        {
                            Id = 136,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6632),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6634),
                            Name = "KwaDukuza",
                            StateId = 4
                        },
                        new
                        {
                            Id = 137,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6638),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6639),
                            Name = "Margate",
                            StateId = 4
                        },
                        new
                        {
                            Id = 138,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6644),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6645),
                            Name = "Mondlo",
                            StateId = 4
                        },
                        new
                        {
                            Id = 139,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6649),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6651),
                            Name = "Mooirivier",
                            StateId = 4
                        },
                        new
                        {
                            Id = 140,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6664),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6666),
                            Name = "Mpophomeni",
                            StateId = 4
                        },
                        new
                        {
                            Id = 141,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6670),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6673),
                            Name = "Mpumalanga",
                            StateId = 4
                        },
                        new
                        {
                            Id = 142,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6676),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6678),
                            Name = "Mtubatuba",
                            StateId = 4
                        },
                        new
                        {
                            Id = 143,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6681),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6683),
                            Name = "Ndwedwe",
                            StateId = 4
                        },
                        new
                        {
                            Id = 144,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6686),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6688),
                            Name = "Newcastle",
                            StateId = 4
                        },
                        new
                        {
                            Id = 145,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6692),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6693),
                            Name = "Pietermaritzburg",
                            StateId = 4
                        },
                        new
                        {
                            Id = 146,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6697),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6699),
                            Name = "Port Shepstone",
                            StateId = 4
                        },
                        new
                        {
                            Id = 147,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6702),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6704),
                            Name = "Richards Bay",
                            StateId = 4
                        },
                        new
                        {
                            Id = 148,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6707),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6709),
                            Name = "Richmond",
                            StateId = 4
                        },
                        new
                        {
                            Id = 149,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6713),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6714),
                            Name = "Scottburgh",
                            StateId = 4
                        },
                        new
                        {
                            Id = 150,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6718),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6719),
                            Name = "Sisonke District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 151,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6723),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6725),
                            Name = "Sundumbili",
                            StateId = 4
                        },
                        new
                        {
                            Id = 152,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6728),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6730),
                            Name = "Ugu District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 153,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6733),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6735),
                            Name = "Ulundi",
                            StateId = 4
                        },
                        new
                        {
                            Id = 154,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6739),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6741),
                            Name = "uMgungundlovu District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 155,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6744),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6746),
                            Name = "uMkhanyakude District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 156,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6750),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6751),
                            Name = "uMzinyathi District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 157,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6755),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6757),
                            Name = "uThukela District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 158,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6760),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6762),
                            Name = "uThungulu District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 159,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6765),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6767),
                            Name = "Utrecht",
                            StateId = 4
                        },
                        new
                        {
                            Id = 160,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6770),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6772),
                            Name = "Vryheid",
                            StateId = 4
                        },
                        new
                        {
                            Id = 161,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6777),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6778),
                            Name = "Zululand District Municipality",
                            StateId = 4
                        },
                        new
                        {
                            Id = 162,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6782),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6784),
                            Name = "Bochum",
                            StateId = 5
                        },
                        new
                        {
                            Id = 163,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6787),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6789),
                            Name = "Capricorn District Municipality",
                            StateId = 5
                        },
                        new
                        {
                            Id = 164,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6792),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6794),
                            Name = "Duiwelskloof",
                            StateId = 5
                        },
                        new
                        {
                            Id = 165,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6797),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6799),
                            Name = "Ga-Kgapane",
                            StateId = 5
                        },
                        new
                        {
                            Id = 166,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6803),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6804),
                            Name = "Giyani",
                            StateId = 5
                        },
                        new
                        {
                            Id = 167,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6808),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6810),
                            Name = "Lebowakgomo",
                            StateId = 5
                        },
                        new
                        {
                            Id = 168,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6813),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6815),
                            Name = "Louis Trichardt",
                            StateId = 5
                        },
                        new
                        {
                            Id = 169,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6818),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6820),
                            Name = "Mankoeng",
                            StateId = 5
                        },
                        new
                        {
                            Id = 170,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6823),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6825),
                            Name = "Modimolle",
                            StateId = 5
                        },
                        new
                        {
                            Id = 171,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6829),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6831),
                            Name = "Mokopane",
                            StateId = 5
                        },
                        new
                        {
                            Id = 172,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6835),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6838),
                            Name = "Mopani District Municipality",
                            StateId = 5
                        },
                        new
                        {
                            Id = 173,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6842),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6844),
                            Name = "Musina",
                            StateId = 5
                        },
                        new
                        {
                            Id = 174,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6847),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6849),
                            Name = "Nkowakowa",
                            StateId = 5
                        },
                        new
                        {
                            Id = 175,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6853),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6855),
                            Name = "Phalaborwa",
                            StateId = 5
                        },
                        new
                        {
                            Id = 176,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6859),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6860),
                            Name = "Polokwane",
                            StateId = 5
                        },
                        new
                        {
                            Id = 177,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6864),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6866),
                            Name = "Sekhukhune District Municipality",
                            StateId = 5
                        },
                        new
                        {
                            Id = 178,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6869),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6871),
                            Name = "Thabazimbi",
                            StateId = 5
                        },
                        new
                        {
                            Id = 179,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6874),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6876),
                            Name = "Thohoyandou",
                            StateId = 5
                        },
                        new
                        {
                            Id = 180,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6879),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6881),
                            Name = "Thulamahashi",
                            StateId = 5
                        },
                        new
                        {
                            Id = 181,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6885),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6887),
                            Name = "Tzaneen",
                            StateId = 5
                        },
                        new
                        {
                            Id = 182,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6890),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6892),
                            Name = "Vhembe District Municipality",
                            StateId = 5
                        },
                        new
                        {
                            Id = 183,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6895),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6897),
                            Name = "Warmbaths",
                            StateId = 5
                        },
                        new
                        {
                            Id = 184,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6901),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6903),
                            Name = "Waterberg District Municipality",
                            StateId = 5
                        },
                        new
                        {
                            Id = 185,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6907),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6909),
                            Name = "Balfour",
                            StateId = 6
                        },
                        new
                        {
                            Id = 186,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6919),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6921),
                            Name = "Barberton",
                            StateId = 6
                        },
                        new
                        {
                            Id = 187,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6924),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6926),
                            Name = "Belfast",
                            StateId = 6
                        },
                        new
                        {
                            Id = 188,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6930),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6931),
                            Name = "Bethal",
                            StateId = 6
                        },
                        new
                        {
                            Id = 189,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6935),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6937),
                            Name = "Breyten",
                            StateId = 6
                        },
                        new
                        {
                            Id = 190,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6940),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6942),
                            Name = "Carolina",
                            StateId = 6
                        },
                        new
                        {
                            Id = 191,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6946),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6948),
                            Name = "Delmas",
                            StateId = 6
                        },
                        new
                        {
                            Id = 192,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6951),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6953),
                            Name = "Driefontein",
                            StateId = 6
                        },
                        new
                        {
                            Id = 193,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6956),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6958),
                            Name = "Ehlanzeni District",
                            StateId = 6
                        },
                        new
                        {
                            Id = 194,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6961),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6963),
                            Name = "eMbalenhle",
                            StateId = 6
                        },
                        new
                        {
                            Id = 195,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6968),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6969),
                            Name = "Ermelo",
                            StateId = 6
                        },
                        new
                        {
                            Id = 196,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6973),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6975),
                            Name = "Gert Sibande District Municipality",
                            StateId = 6
                        },
                        new
                        {
                            Id = 197,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6979),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6981),
                            Name = "Hendrina",
                            StateId = 6
                        },
                        new
                        {
                            Id = 198,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6984),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6986),
                            Name = "Komatipoort",
                            StateId = 6
                        },
                        new
                        {
                            Id = 199,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6989),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6991),
                            Name = "Kriel",
                            StateId = 6
                        },
                        new
                        {
                            Id = 200,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6995),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(6997),
                            Name = "Lydenburg",
                            StateId = 6
                        },
                        new
                        {
                            Id = 201,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7000),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7002),
                            Name = "Middelburg",
                            StateId = 6
                        },
                        new
                        {
                            Id = 202,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7005),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7007),
                            Name = "Nelspruit",
                            StateId = 6
                        },
                        new
                        {
                            Id = 203,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7011),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7013),
                            Name = "Nkangala District Municipality",
                            StateId = 6
                        },
                        new
                        {
                            Id = 204,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7016),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7018),
                            Name = "Piet Retief",
                            StateId = 6
                        },
                        new
                        {
                            Id = 205,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7021),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7023),
                            Name = "Secunda",
                            StateId = 6
                        },
                        new
                        {
                            Id = 206,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7027),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7030),
                            Name = "Siyabuswa",
                            StateId = 6
                        },
                        new
                        {
                            Id = 207,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7033),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7035),
                            Name = "Standerton",
                            StateId = 6
                        },
                        new
                        {
                            Id = 208,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7039),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7041),
                            Name = "Volksrust",
                            StateId = 6
                        },
                        new
                        {
                            Id = 209,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7044),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7046),
                            Name = "White River",
                            StateId = 6
                        },
                        new
                        {
                            Id = 210,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7049),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7051),
                            Name = "Witbank",
                            StateId = 6
                        },
                        new
                        {
                            Id = 211,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7055),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7057),
                            Name = "Bloemhof",
                            StateId = 7
                        },
                        new
                        {
                            Id = 212,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7060),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7062),
                            Name = "Bojanala Platinum District Municipality",
                            StateId = 7
                        },
                        new
                        {
                            Id = 213,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7065),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7067),
                            Name = "Brits",
                            StateId = 7
                        },
                        new
                        {
                            Id = 214,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7071),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7072),
                            Name = "Christiana",
                            StateId = 7
                        },
                        new
                        {
                            Id = 215,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7076),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7078),
                            Name = "Dr Kenneth Kaunda District Municipality",
                            StateId = 7
                        },
                        new
                        {
                            Id = 216,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7081),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7083),
                            Name = "Dr Ruth Segomotsi Mompati District Municipality",
                            StateId = 7
                        },
                        new
                        {
                            Id = 217,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7086),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7088),
                            Name = "Fochville",
                            StateId = 7
                        },
                        new
                        {
                            Id = 218,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7093),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7095),
                            Name = "Ga-Rankuwa",
                            StateId = 7
                        },
                        new
                        {
                            Id = 219,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7099),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7100),
                            Name = "Jan Kempdorp",
                            StateId = 7
                        },
                        new
                        {
                            Id = 220,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7104),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7106),
                            Name = "Klerksdorp",
                            StateId = 7
                        },
                        new
                        {
                            Id = 221,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7109),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7111),
                            Name = "Koster",
                            StateId = 7
                        },
                        new
                        {
                            Id = 222,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7114),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7116),
                            Name = "Lichtenburg",
                            StateId = 7
                        },
                        new
                        {
                            Id = 223,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7120),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7122),
                            Name = "Mahikeng",
                            StateId = 7
                        },
                        new
                        {
                            Id = 224,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7126),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7127),
                            Name = "Maile",
                            StateId = 7
                        },
                        new
                        {
                            Id = 225,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7131),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7133),
                            Name = "Mmabatho",
                            StateId = 7
                        },
                        new
                        {
                            Id = 226,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7136),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7138),
                            Name = "Ngaka Modiri Molema District Municipality",
                            StateId = 7
                        },
                        new
                        {
                            Id = 227,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7141),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7143),
                            Name = "Orkney",
                            StateId = 7
                        },
                        new
                        {
                            Id = 228,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7147),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7148),
                            Name = "Potchefstroom",
                            StateId = 7
                        },
                        new
                        {
                            Id = 229,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7152),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7155),
                            Name = "Rustenburg",
                            StateId = 7
                        },
                        new
                        {
                            Id = 230,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7159),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7160),
                            Name = "Schweizer-Reneke",
                            StateId = 7
                        },
                        new
                        {
                            Id = 231,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7164),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7166),
                            Name = "Stilfontein",
                            StateId = 7
                        },
                        new
                        {
                            Id = 232,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7169),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7171),
                            Name = "Vryburg",
                            StateId = 7
                        },
                        new
                        {
                            Id = 233,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7181),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7183),
                            Name = "Wolmaransstad",
                            StateId = 7
                        },
                        new
                        {
                            Id = 234,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7187),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7188),
                            Name = "Zeerust",
                            StateId = 7
                        },
                        new
                        {
                            Id = 235,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7192),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7194),
                            Name = "Barkly West",
                            StateId = 8
                        },
                        new
                        {
                            Id = 236,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7197),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7199),
                            Name = "Brandvlei",
                            StateId = 8
                        },
                        new
                        {
                            Id = 237,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7202),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7204),
                            Name = "Calvinia",
                            StateId = 8
                        },
                        new
                        {
                            Id = 238,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7208),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7210),
                            Name = "Carnarvon",
                            StateId = 8
                        },
                        new
                        {
                            Id = 239,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7213),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7215),
                            Name = "Colesberg",
                            StateId = 8
                        },
                        new
                        {
                            Id = 240,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7219),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7221),
                            Name = "DaniÃ«lskuil",
                            StateId = 8
                        },
                        new
                        {
                            Id = 241,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7224),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7226),
                            Name = "De Aar",
                            StateId = 8
                        },
                        new
                        {
                            Id = 242,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7230),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7232),
                            Name = "Frances Baard District Municipality",
                            StateId = 8
                        },
                        new
                        {
                            Id = 243,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7235),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7237),
                            Name = "Fraserburg",
                            StateId = 8
                        },
                        new
                        {
                            Id = 244,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7240),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7242),
                            Name = "John Taolo Gaetsewe District Municipality",
                            StateId = 8
                        },
                        new
                        {
                            Id = 245,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7246),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7247),
                            Name = "Kathu",
                            StateId = 8
                        },
                        new
                        {
                            Id = 246,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7251),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7253),
                            Name = "Kenhardt",
                            StateId = 8
                        },
                        new
                        {
                            Id = 247,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7256),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7258),
                            Name = "Kimberley",
                            StateId = 8
                        },
                        new
                        {
                            Id = 248,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7261),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7263),
                            Name = "Kuruman",
                            StateId = 8
                        },
                        new
                        {
                            Id = 249,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7267),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7269),
                            Name = "Namakwa District Municipality",
                            StateId = 8
                        },
                        new
                        {
                            Id = 250,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7272),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7274),
                            Name = "Noupoort",
                            StateId = 8
                        },
                        new
                        {
                            Id = 251,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7278),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7279),
                            Name = "Orania",
                            StateId = 8
                        },
                        new
                        {
                            Id = 252,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7284),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7286),
                            Name = "Pampierstad",
                            StateId = 8
                        },
                        new
                        {
                            Id = 253,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7289),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7291),
                            Name = "Pixley ka Seme District Municipality",
                            StateId = 8
                        },
                        new
                        {
                            Id = 254,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7294),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7296),
                            Name = "Pofadder",
                            StateId = 8
                        },
                        new
                        {
                            Id = 255,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7300),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7302),
                            Name = "Postmasburg",
                            StateId = 8
                        },
                        new
                        {
                            Id = 256,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7306),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7308),
                            Name = "Prieska",
                            StateId = 8
                        },
                        new
                        {
                            Id = 257,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7312),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7314),
                            Name = "Ritchie",
                            StateId = 8
                        },
                        new
                        {
                            Id = 258,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7318),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7319),
                            Name = "Siyanda District Municipality",
                            StateId = 8
                        },
                        new
                        {
                            Id = 259,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7323),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7325),
                            Name = "Springbok",
                            StateId = 8
                        },
                        new
                        {
                            Id = 260,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7328),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7330),
                            Name = "Upington",
                            StateId = 8
                        },
                        new
                        {
                            Id = 261,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7334),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7336),
                            Name = "Van Wyksvlei",
                            StateId = 8
                        },
                        new
                        {
                            Id = 262,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7339),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7341),
                            Name = "Warrenton",
                            StateId = 8
                        },
                        new
                        {
                            Id = 263,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7345),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7346),
                            Name = "Albertina",
                            StateId = 9
                        },
                        new
                        {
                            Id = 264,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7351),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7353),
                            Name = "Arniston",
                            StateId = 9
                        },
                        new
                        {
                            Id = 265,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7356),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7358),
                            Name = "Atlantis",
                            StateId = 9
                        },
                        new
                        {
                            Id = 266,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7362),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7364),
                            Name = "Beaufort West",
                            StateId = 9
                        },
                        new
                        {
                            Id = 267,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7367),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7369),
                            Name = "Bergvliet",
                            StateId = 9
                        },
                        new
                        {
                            Id = 268,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7372),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7374),
                            Name = "Bredasdorp",
                            StateId = 9
                        },
                        new
                        {
                            Id = 269,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7378),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7380),
                            Name = "Caledon",
                            StateId = 9
                        },
                        new
                        {
                            Id = 270,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7383),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7385),
                            Name = "Calitzdorp",
                            StateId = 9
                        },
                        new
                        {
                            Id = 271,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7388),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7390),
                            Name = "Cape Town",
                            StateId = 9
                        },
                        new
                        {
                            Id = 272,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7394),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7396),
                            Name = "Cape Winelands District Municipality",
                            StateId = 9
                        },
                        new
                        {
                            Id = 273,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7400),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7402),
                            Name = "Central Karoo District Municipality",
                            StateId = 9
                        },
                        new
                        {
                            Id = 274,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7405),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7407),
                            Name = "Ceres",
                            StateId = 9
                        },
                        new
                        {
                            Id = 275,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7411),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7413),
                            Name = "City of Cape Town",
                            StateId = 9
                        },
                        new
                        {
                            Id = 276,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7417),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7419),
                            Name = "Clanwilliam",
                            StateId = 9
                        },
                        new
                        {
                            Id = 277,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7422),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7424),
                            Name = "Claremont",
                            StateId = 9
                        },
                        new
                        {
                            Id = 278,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7427),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7429),
                            Name = "Constantia",
                            StateId = 9
                        },
                        new
                        {
                            Id = 279,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7439),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7441),
                            Name = "De Rust",
                            StateId = 9
                        },
                        new
                        {
                            Id = 280,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7445),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7447),
                            Name = "Eden District Municipality",
                            StateId = 9
                        },
                        new
                        {
                            Id = 281,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7450),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7452),
                            Name = "George",
                            StateId = 9
                        },
                        new
                        {
                            Id = 282,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7456),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7458),
                            Name = "Grabouw",
                            StateId = 9
                        },
                        new
                        {
                            Id = 283,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7461),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7463),
                            Name = "Hardys Memories of Africa",
                            StateId = 9
                        },
                        new
                        {
                            Id = 284,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7466),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7468),
                            Name = "Hermanus",
                            StateId = 9
                        },
                        new
                        {
                            Id = 285,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7471),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7473),
                            Name = "Knysna",
                            StateId = 9
                        },
                        new
                        {
                            Id = 286,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7477),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7479),
                            Name = "Kraaifontein",
                            StateId = 9
                        },
                        new
                        {
                            Id = 287,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7483),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7485),
                            Name = "Ladismith",
                            StateId = 9
                        },
                        new
                        {
                            Id = 288,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7488),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7490),
                            Name = "Lansdowne",
                            StateId = 9
                        },
                        new
                        {
                            Id = 289,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7494),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7496),
                            Name = "Malmesbury",
                            StateId = 9
                        },
                        new
                        {
                            Id = 290,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7500),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7502),
                            Name = "Montagu",
                            StateId = 9
                        },
                        new
                        {
                            Id = 291,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7505),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7508),
                            Name = "Moorreesburg",
                            StateId = 9
                        },
                        new
                        {
                            Id = 292,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7511),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7513),
                            Name = "Mossel Bay",
                            StateId = 9
                        },
                        new
                        {
                            Id = 293,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7517),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7519),
                            Name = "Newlands",
                            StateId = 9
                        },
                        new
                        {
                            Id = 294,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7522),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7524),
                            Name = "Oudtshoorn",
                            StateId = 9
                        },
                        new
                        {
                            Id = 295,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7528),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7530),
                            Name = "Overberg District Municipality",
                            StateId = 9
                        },
                        new
                        {
                            Id = 296,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7533),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7535),
                            Name = "Paarl",
                            StateId = 9
                        },
                        new
                        {
                            Id = 297,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7539),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7541),
                            Name = "Piketberg",
                            StateId = 9
                        },
                        new
                        {
                            Id = 298,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7545),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7547),
                            Name = "Plettenberg Bay",
                            StateId = 9
                        },
                        new
                        {
                            Id = 299,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7551),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7553),
                            Name = "Prince Albert",
                            StateId = 9
                        },
                        new
                        {
                            Id = 300,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7556),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7558),
                            Name = "Retreat",
                            StateId = 9
                        },
                        new
                        {
                            Id = 301,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7562),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7564),
                            Name = "Riversdale",
                            StateId = 9
                        },
                        new
                        {
                            Id = 302,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7567),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7569),
                            Name = "Robertson",
                            StateId = 9
                        },
                        new
                        {
                            Id = 303,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7572),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7574),
                            Name = "Rondebosch",
                            StateId = 9
                        },
                        new
                        {
                            Id = 304,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7578),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7580),
                            Name = "Rosebank",
                            StateId = 9
                        },
                        new
                        {
                            Id = 305,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7583),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7585),
                            Name = "Saldanha",
                            StateId = 9
                        },
                        new
                        {
                            Id = 306,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7588),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7590),
                            Name = "Stellenbosch",
                            StateId = 9
                        },
                        new
                        {
                            Id = 307,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7594),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7596),
                            Name = "Sunset Beach",
                            StateId = 9
                        },
                        new
                        {
                            Id = 308,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7599),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7601),
                            Name = "Swellendam",
                            StateId = 9
                        },
                        new
                        {
                            Id = 309,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7604),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7607),
                            Name = "Vredenburg",
                            StateId = 9
                        },
                        new
                        {
                            Id = 310,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7610),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7612),
                            Name = "Vredendal",
                            StateId = 9
                        },
                        new
                        {
                            Id = 311,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7616),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7618),
                            Name = "Wellington",
                            StateId = 9
                        },
                        new
                        {
                            Id = 312,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7621),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7623),
                            Name = "West Coast District Municipality",
                            StateId = 9
                        },
                        new
                        {
                            Id = 313,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7626),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7628),
                            Name = "Worcester",
                            StateId = 9
                        },
                        new
                        {
                            Id = 314,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7632),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 684, DateTimeKind.Local).AddTicks(7633),
                            Name = "Zoar",
                            StateId = 9
                        });
                });

            modelBuilder.Entity("MM.ClientModels.ClientOrganization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("AgreedToTerms")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ClientTimeZoneId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("CurrencyDecimalPlaces")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DateSettingId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("TimeFormatId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientTimeZoneId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DateSettingId");

                    b.HasIndex("TimeFormatId");

                    b.ToTable("ClientOrganization");
                });

            modelBuilder.Entity("MM.ClientModels.ClientPlanHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BillingUserId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsCurrentPlan")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int>("PlanDetailId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("BillingUserId");

                    b.ToTable("ClientPlanHistory");
                });

            modelBuilder.Entity("MM.ClientModels.ClientTimeZone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("ClientTimeZone");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(1536),
                            Description = "(GMT-12:00) International Date Line West",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(2882),
                            Name = "Dateline Standard Time"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4283),
                            Description = "(GMT-11:00) MIdway Island, Samoa",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4310),
                            Name = "Samoa Standard Time"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4323),
                            Description = "(GMT-10:00) Hawaii",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4326),
                            Name = "Hawaiian Standard Time"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4329),
                            Description = "(GMT-09:00) Alaska",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4331),
                            Name = "Alaskan Standard Time"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4334),
                            Description = "(GMT-08:00) Pacific Time (US and Canada); Tijuana",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4336),
                            Name = "Pacific Standard Time"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4339),
                            Description = "(GMT-07:00) Mountain Time (US and Canada)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4341),
                            Name = "Mountain Standard Time"
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4344),
                            Description = "(GMT-07:00) Chihuahua, La Paz, Mazatlan",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4346),
                            Name = "Mexico Standard Time 2"
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4349),
                            Description = "(GMT-07:00) Arizona",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4351),
                            Name = "U.S. Mountain Standard Time"
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4354),
                            Description = "(GMT-06:00) Central Time (US and Canada)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4356),
                            Name = "Central Standard Time"
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4359),
                            Description = "(GMT-06:00) Saskatchewan",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4361),
                            Name = "Canada Central Standard Time"
                        },
                        new
                        {
                            Id = 11,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4364),
                            Description = "(GMT-06:00) Guadalajara, Mexico City, Monterrey",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4366),
                            Name = "Mexico Standard Time"
                        },
                        new
                        {
                            Id = 12,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4370),
                            Description = "(GMT-06:00) Central America",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4371),
                            Name = "Central America Standard Time"
                        },
                        new
                        {
                            Id = 13,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4375),
                            Description = "(GMT-05:00) Eastern Time (US and Canada)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4376),
                            Name = "Eastern Standard Time"
                        },
                        new
                        {
                            Id = 14,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4380),
                            Description = "(GMT-05:00) Indiana (East)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4382),
                            Name = "U.S. Eastern Standard Time"
                        },
                        new
                        {
                            Id = 15,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4387),
                            Description = "(GMT-05:00) Bogota, Lima, Quito",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4388),
                            Name = "S.A. Pacific Standard Time"
                        },
                        new
                        {
                            Id = 16,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4391),
                            Description = "(GMT-04:00) Atlantic Time (Canada)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4393),
                            Name = "Atlantic Standard Time"
                        },
                        new
                        {
                            Id = 17,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4396),
                            Description = "(GMT-04:00) Georgetown, La Paz, San Juan",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4398),
                            Name = "S.A. Western Standard Time"
                        },
                        new
                        {
                            Id = 18,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4401),
                            Description = "(GMT-04:00) Santiago",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4403),
                            Name = "Pacific S.A. Standard Time"
                        },
                        new
                        {
                            Id = 19,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4407),
                            Description = "(GMT-03:30) Newfoundland",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4408),
                            Name = "Newfoundland and Labrador Standard Time"
                        },
                        new
                        {
                            Id = 20,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4412),
                            Description = "(GMT-03:00) Brasilia",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4413),
                            Name = "E. South America Standard Time"
                        },
                        new
                        {
                            Id = 21,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4416),
                            Description = "(GMT-03:00) Georgetown",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4418),
                            Name = "S.A. Eastern Standard Time"
                        },
                        new
                        {
                            Id = 22,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4421),
                            Description = "(GMT-03:00) Greenland",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4423),
                            Name = "Greenland Standard Time"
                        },
                        new
                        {
                            Id = 23,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4427),
                            Description = "(GMT-02:00) MId-Atlantic",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4428),
                            Name = "MId-Atlantic Standard Time"
                        },
                        new
                        {
                            Id = 24,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4432),
                            Description = "(GMT-01:00) Azores",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4433),
                            Name = "Azores Standard Time"
                        },
                        new
                        {
                            Id = 25,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4437),
                            Description = "(GMT-01:00) Cape Verde Islands",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4438),
                            Name = "Cape Verde Standard Time"
                        },
                        new
                        {
                            Id = 26,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4442),
                            Description = "(GMT) Greenwich Mean Time: Dublin, Edinburgh, Lisbon, London",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4443),
                            Name = "GMT Standard Time"
                        },
                        new
                        {
                            Id = 27,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4447),
                            Description = "(GMT) Monrovia, Reykjavik",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4449),
                            Name = "Greenwich Standard Time"
                        },
                        new
                        {
                            Id = 28,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4452),
                            Description = "(GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4454),
                            Name = "Central Europe Standard Time"
                        },
                        new
                        {
                            Id = 29,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4457),
                            Description = "(GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4459),
                            Name = "Central European Standard Time"
                        },
                        new
                        {
                            Id = 30,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4462),
                            Description = "(GMT+01:00) Brussels, Copenhagen, MadrId, Paris",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4463),
                            Name = "Romance Standard Time"
                        },
                        new
                        {
                            Id = 31,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4467),
                            Description = "(GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4469),
                            Name = "W. Europe Standard Time"
                        },
                        new
                        {
                            Id = 32,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4472),
                            Description = "(GMT+01:00) West Central Africa",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4474),
                            Name = "W. Central Africa Standard Time"
                        },
                        new
                        {
                            Id = 33,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4477),
                            Description = "(GMT+02:00) Minsk",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4479),
                            Name = "E. Europe Standard Time"
                        },
                        new
                        {
                            Id = 34,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4482),
                            Description = "(GMT+02:00) Cairo",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4484),
                            Name = "Egypt Standard Time"
                        },
                        new
                        {
                            Id = 35,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4487),
                            Description = "(GMT+02:00) Helsinki, Kiev, Riga, Sofia, Tallinn, Vilnius",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4489),
                            Name = "FLE Standard Time"
                        },
                        new
                        {
                            Id = 36,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4516),
                            Description = "(GMT+02:00) Athens, Bucharest, Istanbul",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4518),
                            Name = "GTB Standard Time"
                        },
                        new
                        {
                            Id = 37,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4521),
                            Description = "(GMT+02:00) Jerusalem",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4523),
                            Name = "Israel Standard Time"
                        },
                        new
                        {
                            Id = 38,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4528),
                            Description = "(GMT+02:00) Harare, Pretoria",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4529),
                            Name = "South Africa Standard Time"
                        },
                        new
                        {
                            Id = 39,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4533),
                            Description = "(GMT+03:00) Moscow, St. Petersburg, Volgograd",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4535),
                            Name = "Russian Standard Time"
                        },
                        new
                        {
                            Id = 40,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4538),
                            Description = "(GMT+03:00) Kuwait, Riyadh",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4539),
                            Name = "Arab Standard Time"
                        },
                        new
                        {
                            Id = 41,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4543),
                            Description = "(GMT+03:00) Nairobi",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4545),
                            Name = "E. Africa Standard Time"
                        },
                        new
                        {
                            Id = 42,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4548),
                            Description = "(GMT+03:00) Baghdad",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4550),
                            Name = "Arabic Standard Time"
                        },
                        new
                        {
                            Id = 43,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4553),
                            Description = "(GMT+03:30) Tehran",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4554),
                            Name = "Iran Standard Time"
                        },
                        new
                        {
                            Id = 44,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4558),
                            Description = "(GMT+04:00) Abu Dhabi, Muscat",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4559),
                            Name = "Arabian Standard Time"
                        },
                        new
                        {
                            Id = 45,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4563),
                            Description = "(GMT+04:00) Baku, Tbilisi, Yerevan",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4564),
                            Name = "Caucasus Standard Time"
                        },
                        new
                        {
                            Id = 46,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4568),
                            Description = "(GMT+04:30) Kabul",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4569),
                            Name = "Transitional Islamic State of Afghanistan Standard Time"
                        },
                        new
                        {
                            Id = 47,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4572),
                            Description = "(GMT+05:00) Ekaterinburg",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4574),
                            Name = "Ekaterinburg Standard Time"
                        },
                        new
                        {
                            Id = 48,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4577),
                            Description = "(GMT+05:00) Tashkent",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4579),
                            Name = "West Asia Standard Time"
                        },
                        new
                        {
                            Id = 49,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4582),
                            Description = "(GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4584),
                            Name = "India Standard Time"
                        },
                        new
                        {
                            Id = 50,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4588),
                            Description = "(GMT+05:45) Kathmandu",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4590),
                            Name = "Nepal Standard Time"
                        },
                        new
                        {
                            Id = 51,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4593),
                            Description = "(GMT+06:00) Astana, Dhaka",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4595),
                            Name = "Central Asia Standard Time"
                        },
                        new
                        {
                            Id = 52,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4598),
                            Description = "(GMT+06:00) Sri Jayawardenepura",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4600),
                            Name = "Sri Lanka Standard Time"
                        },
                        new
                        {
                            Id = 53,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4603),
                            Description = "(GMT+06:00) Almaty, Novosibirsk",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4605),
                            Name = "N. Central Asia Standard Time"
                        },
                        new
                        {
                            Id = 54,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4608),
                            Description = "(GMT+06:30) Yangon (Rangoon)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4610),
                            Name = "Myanmar Standard Time"
                        },
                        new
                        {
                            Id = 55,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4613),
                            Description = "(GMT+07:00) Bangkok, Hanoi, Jakarta",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4614),
                            Name = "S.E. Asia Standard Time"
                        },
                        new
                        {
                            Id = 56,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4618),
                            Description = "(GMT+07:00) Krasnoyarsk",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4619),
                            Name = "North Asia Standard Time"
                        },
                        new
                        {
                            Id = 57,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4623),
                            Description = "(GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4624),
                            Name = "China Standard Time"
                        },
                        new
                        {
                            Id = 58,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4628),
                            Description = "(GMT+08:00) Kuala Lumpur, Singapore",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4629),
                            Name = "Singapore Standard Time"
                        },
                        new
                        {
                            Id = 59,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4633),
                            Description = "(GMT+08:00) Taipei",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4634),
                            Name = "Taipei Standard Time"
                        },
                        new
                        {
                            Id = 60,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4637),
                            Description = "(GMT+08:00) Perth",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4639),
                            Name = "W. Australia Standard Time"
                        },
                        new
                        {
                            Id = 61,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4642),
                            Description = "(GMT+08:00) Irkutsk, Ulaanbaatar",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4644),
                            Name = "North Asia East Standard Time"
                        },
                        new
                        {
                            Id = 62,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4648),
                            Description = "(GMT+09:00) Seoul",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4650),
                            Name = "Korea Standard Time"
                        },
                        new
                        {
                            Id = 63,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4653),
                            Description = "(GMT+09:00) Osaka, Sapporo, Tokyo",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4655),
                            Name = "Tokyo Standard Time"
                        },
                        new
                        {
                            Id = 64,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4658),
                            Description = "(GMT+09:00) Yakutsk",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4660),
                            Name = "Yakutsk Standard Time"
                        },
                        new
                        {
                            Id = 65,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4663),
                            Description = "(GMT+09:30) Darwin",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4665),
                            Name = "A.U.S. Central Standard Time"
                        },
                        new
                        {
                            Id = 66,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4668),
                            Description = "(GMT+09:30) AdelaIde",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4669),
                            Name = "Cen. Australia Standard Time"
                        },
                        new
                        {
                            Id = 67,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4673),
                            Description = "(GMT+10:00) Canberra, Melbourne, Sydney",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4674),
                            Name = "A.U.S. Eastern Standard Time"
                        },
                        new
                        {
                            Id = 68,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4678),
                            Description = "(GMT+10:00) Brisbane",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4679),
                            Name = "E. Australia Standard Time"
                        },
                        new
                        {
                            Id = 69,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4682),
                            Description = "(GMT+10:00) Hobart",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4684),
                            Name = "Tasmania Standard Time"
                        },
                        new
                        {
                            Id = 70,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4687),
                            Description = "(GMT+10:00) Vladivostok",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4689),
                            Name = "Vladivostok Standard Time"
                        },
                        new
                        {
                            Id = 71,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4699),
                            Description = "(GMT+10:00) Guam, Port Moresby",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4701),
                            Name = "West Pacific Standard Time"
                        },
                        new
                        {
                            Id = 72,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4705),
                            Description = "(GMT+11:00) Magadan, Solomon Islands, New Caledonia",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4706),
                            Name = "Central Pacific Standard Time"
                        },
                        new
                        {
                            Id = 73,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4710),
                            Description = "(GMT+12:00) Fiji, Kamchatka, Marshall Is.",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4711),
                            Name = "Fiji Islands Standard Time"
                        },
                        new
                        {
                            Id = 74,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4715),
                            Description = "(GMT+12:00) Auckland, Wellington",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4717),
                            Name = "New Zealand Standard Time"
                        },
                        new
                        {
                            Id = 75,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4720),
                            Description = "(GMT+13:00) Nuku'alofa",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4722),
                            Name = "Tonga Standard Time"
                        },
                        new
                        {
                            Id = 76,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4725),
                            Description = "(GMT-03:00) Buenos Aires",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4727),
                            Name = "Azerbaijan Standard Time "
                        },
                        new
                        {
                            Id = 77,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4730),
                            Description = "(GMT+02:00) Beirut",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4732),
                            Name = "MIddle East Standard Time"
                        },
                        new
                        {
                            Id = 78,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4735),
                            Description = "(GMT+02:00) Amman",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4736),
                            Name = "Jordan Standard Time"
                        },
                        new
                        {
                            Id = 79,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4741),
                            Description = "(GMT-06:00) Guadalajara, Mexico City, Monterrey - New",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4742),
                            Name = "Central Standard Time (Mexico)"
                        },
                        new
                        {
                            Id = 80,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4746),
                            Description = "(GMT-07:00) Chihuahua, La Paz, Mazatlan - New",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4747),
                            Name = "Mountain Standard Time (Mexico)"
                        },
                        new
                        {
                            Id = 81,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4750),
                            Description = "(GMT-08:00) Tijuana, Baja California",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4752),
                            Name = "Pacific Standard Time (Mexico)"
                        },
                        new
                        {
                            Id = 82,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4755),
                            Description = "(GMT+02:00) Windhoek",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4757),
                            Name = "Namibia Standard Time"
                        },
                        new
                        {
                            Id = 83,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4760),
                            Description = "(GMT+03:00) Tbilisi",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4762),
                            Name = "Georgian Standard Time"
                        },
                        new
                        {
                            Id = 84,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4766),
                            Description = "(GMT-04:00) Manaus",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4767),
                            Name = "Central Brazilian Standard Time"
                        },
                        new
                        {
                            Id = 85,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4771),
                            Description = "(GMT-03:00) MontevIdeo",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4772),
                            Name = "MontevIdeo Standard Time"
                        },
                        new
                        {
                            Id = 86,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4775),
                            Description = "(GMT+04:00) Yerevan",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4777),
                            Name = "Armenian Standard Time"
                        },
                        new
                        {
                            Id = 87,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4781),
                            Description = "(GMT-04:30) Caracas",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4782),
                            Name = "Venezuela Standard Time"
                        },
                        new
                        {
                            Id = 88,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4786),
                            Description = "(GMT-03:00) Buenos Aires",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4787),
                            Name = "Argentina Standard Time"
                        },
                        new
                        {
                            Id = 89,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4790),
                            Description = "(GMT) Casablanca",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4792),
                            Name = "Morocco Standard Time"
                        },
                        new
                        {
                            Id = 90,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4795),
                            Description = "(GMT+05:00) Islamabad, Karachi",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4797),
                            Name = "Pakistan Standard Time"
                        },
                        new
                        {
                            Id = 91,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4800),
                            Description = "(GMT+04:00) Port Louis",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4802),
                            Name = "Mauritius Standard Time"
                        },
                        new
                        {
                            Id = 92,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4806),
                            Description = "(GMT) Coordinated Universal Time",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4808),
                            Name = "UTC"
                        },
                        new
                        {
                            Id = 93,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4811),
                            Description = "(GMT-04:00) Asuncion",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4812),
                            Name = "Paraguay Standard Time"
                        },
                        new
                        {
                            Id = 94,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4816),
                            Description = "(GMT+12:00) Petropavlovsk-Kamchatsky",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 55, DateTimeKind.Local).AddTicks(4817),
                            Name = "Kamchatka Standard Time"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.ClientType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("ClientType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 695, DateTimeKind.Local).AddTicks(8362),
                            Description = "Individual",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 695, DateTimeKind.Local).AddTicks(9315),
                            Name = "Individual"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 696, DateTimeKind.Local).AddTicks(285),
                            Description = "Organization",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 696, DateTimeKind.Local).AddTicks(308),
                            Name = "Organization"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.ClientUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("BillingContact")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("DesignationId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<bool>("EmailActivated")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsInternalUser")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("MiddleName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<bool>("PrimaryContact")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ReferralTypeId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<bool>("TermsAccepted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("TitleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DesignationId");

                    b.HasIndex("GenderId");

                    b.HasIndex("ReferralTypeId");

                    b.HasIndex("RoleId");

                    b.HasIndex("TitleId");

                    b.ToTable("ClientUser");
                });

            modelBuilder.Entity("MM.ClientModels.CommunicationPreference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CommunicationTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan?>("PreferredTimeFrom")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("PreferredTimeTo")
                        .HasColumnType("time(6)");

                    b.HasKey("Id");

                    b.HasIndex("CommunicationTypeId");

                    b.ToTable("CommunicationPreference");
                });

            modelBuilder.Entity("MM.ClientModels.CommunicationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("CommunicationType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 707, DateTimeKind.Local).AddTicks(705),
                            Description = "Email Message",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 707, DateTimeKind.Local).AddTicks(1649),
                            Name = "Email"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 707, DateTimeKind.Local).AddTicks(2630),
                            Description = "Fax Message",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 707, DateTimeKind.Local).AddTicks(2655),
                            Name = "Fax"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 707, DateTimeKind.Local).AddTicks(2669),
                            Description = "Mobile / Phone Call",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 707, DateTimeKind.Local).AddTicks(2671),
                            Name = "Phone"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 707, DateTimeKind.Local).AddTicks(2676),
                            Description = "Postal Letter",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 707, DateTimeKind.Local).AddTicks(2678),
                            Name = "Post"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 707, DateTimeKind.Local).AddTicks(2681),
                            Description = "Text Message",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 707, DateTimeKind.Local).AddTicks(2682),
                            Name = "SMS"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.CorrespondenceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("CorrespondenceType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 709, DateTimeKind.Local).AddTicks(9029),
                            Description = "Internal Correspondance",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 709, DateTimeKind.Local).AddTicks(9962),
                            Name = "Internal"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 710, DateTimeKind.Local).AddTicks(914),
                            Description = "External Correspondance",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 710, DateTimeKind.Local).AddTicks(935),
                            Name = "External"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 710, DateTimeKind.Local).AddTicks(947),
                            Description = "Sales Correspondance",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 710, DateTimeKind.Local).AddTicks(949),
                            Name = "Sales"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 710, DateTimeKind.Local).AddTicks(951),
                            Description = "Reminders, Statements Invoices to Members",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 710, DateTimeKind.Local).AddTicks(953),
                            Name = "Personal"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 710, DateTimeKind.Local).AddTicks(955),
                            Description = "Common messages",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 710, DateTimeKind.Local).AddTicks(957),
                            Name = "Circular"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 710, DateTimeKind.Local).AddTicks(959),
                            Description = "Private Messages",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 710, DateTimeKind.Local).AddTicks(961),
                            Name = "Confidential"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("ISO2Code")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<string>("ISO3Code")
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("PhoneCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 713, DateTimeKind.Local).AddTicks(104),
                            ISO2Code = "ZA",
                            ISO3Code = "ZAF",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 713, DateTimeKind.Local).AddTicks(1003),
                            Name = "South Africa",
                            PhoneCode = 27
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 713, DateTimeKind.Local).AddTicks(1969),
                            ISO2Code = "AU",
                            ISO3Code = "AUS",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 713, DateTimeKind.Local).AddTicks(1996),
                            Name = "Australia",
                            PhoneCode = 61
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 713, DateTimeKind.Local).AddTicks(2011),
                            ISO2Code = "IN",
                            ISO3Code = "IND",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 713, DateTimeKind.Local).AddTicks(2013),
                            Name = "India",
                            PhoneCode = 91
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 713, DateTimeKind.Local).AddTicks(2017),
                            ISO2Code = "GB",
                            ISO3Code = "GBR",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 713, DateTimeKind.Local).AddTicks(2019),
                            Name = "United Kingdom",
                            PhoneCode = 44
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 713, DateTimeKind.Local).AddTicks(2036),
                            ISO2Code = "US",
                            ISO3Code = "USA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 713, DateTimeKind.Local).AddTicks(2038),
                            Name = "United States",
                            PhoneCode = 1
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Cpd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CpdawardedById")
                        .HasColumnName("CPDAwardedById")
                        .HasColumnType("int");

                    b.Property<int>("Cpdearned")
                        .HasColumnName("CPDEarned")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CpdawardedById");

                    b.HasIndex("MemberId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("CPD");
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberCategorySetUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cpdcount")
                        .HasColumnName("CPDCount")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("MemberCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberCategoryId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("CPDMemberCategorySetUp");
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberLevelSetUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cpdcount")
                        .HasColumnName("CPDCount")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("MemberLevelId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberLevelId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("CPDMemberLevelSetUp");
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberTeamSetUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cpdcount")
                        .HasColumnName("CPDCount")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("MemberTeamId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberTeamId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("CPDMemberTeamSetUp");
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberTypeSetUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cpdcount")
                        .HasColumnName("CPDCount")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("MemberTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberTypeId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("CPDMemberTypeSetUp");
                });

            modelBuilder.Entity("MM.ClientModels.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Symbol")
                        .HasColumnType("varchar(5) CHARACTER SET utf8mb4")
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.ToTable("Currency");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "AFN",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(6253),
                            Description = "Currency for  AFGHANISTAN",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(7211),
                            Name = "Afghani",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 2,
                            Code = "ALL",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8174),
                            Description = "ALBANIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8195),
                            Name = "Lek",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 3,
                            Code = "DZD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8216),
                            Description = "ALGERIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8219),
                            Name = "Algerian Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 4,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8224),
                            Description = "AMERICAN SAMOA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8225),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 5,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8232),
                            Description = "ANDORRA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8234),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 6,
                            Code = "AOA",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8239),
                            Description = "ANGOLA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8240),
                            Name = "Kwanza",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 7,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8245),
                            Description = "ANGUILLA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8246),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 8,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8251),
                            Description = "ANTIGUA AND BARBUDA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8253),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 9,
                            Code = "ARS",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8258),
                            Description = "ARGENTINA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8260),
                            Name = "Argentine Peso",
                            Symbol = ""
                        },
                        new
                        {
                            Id = 10,
                            Code = "AMD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8264),
                            Description = "ARMENIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8266),
                            Name = "Armenian Dram",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 11,
                            Code = "AWG",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8271),
                            Description = "ARUBA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8272),
                            Name = "Aruban Florin",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 12,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8300),
                            Description = "AUSTRALIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8302),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 13,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8307),
                            Description = "AUSTRIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8309),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 14,
                            Code = "AZN",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8313),
                            Description = "AZERBAIJAN",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8315),
                            Name = "Azerbaijanian Manat",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 15,
                            Code = "BSD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8319),
                            Description = "BAHAMAS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8321),
                            Name = "Bahamian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 16,
                            Code = "BHD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8327),
                            Description = "BAHRAIN",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8328),
                            Name = "Bahraini Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 17,
                            Code = "BDT",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8333),
                            Description = "BANGLADESH",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8334),
                            Name = "Taka",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 18,
                            Code = "BBD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8339),
                            Description = "BARBADOS",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8340),
                            Name = "Barbados Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 19,
                            Code = "BYN",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8345),
                            Description = "BELARUS",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8346),
                            Name = "Belarussian Ruble",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 20,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8351),
                            Description = "BELGIUM",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8352),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 21,
                            Code = "BZD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8357),
                            Description = "BELIZE",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8359),
                            Name = "Belize Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 22,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8363),
                            Description = "BENIN",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8365),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 23,
                            Code = "BMD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8369),
                            Description = "BERMUDA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8370),
                            Name = "Bermudian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 24,
                            Code = "BTN",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8374),
                            Description = "BHUTAN",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8376),
                            Name = "Ngultrum",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 25,
                            Code = "INR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8380),
                            Description = "BHUTAN",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8382),
                            Name = "Indian Rupee",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 26,
                            Code = "BOB",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8387),
                            Description = "BOLIVIA (PLURINATIONAL STATE OF)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8388),
                            Name = "Boliviano",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 27,
                            Code = "BOV",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8392),
                            Description = "BOLIVIA (PLURINATIONAL STATE OF)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8394),
                            Name = "Mvdol",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 28,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8398),
                            Description = "BONAIRE, SINT EUSTATIUS AND SABA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8400),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 29,
                            Code = "BAM",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8405),
                            Description = "BOSNIA AND HERZEGOVINA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8407),
                            Name = "Convertible Mark",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 30,
                            Code = "BWP",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8411),
                            Description = "BOTSWANA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8413),
                            Name = "Pula",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 31,
                            Code = "NOK",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8417),
                            Description = "BOUVET ISLAND",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8419),
                            Name = "Norwegian Krone",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 32,
                            Code = "BRL",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8423),
                            Description = "BRAZIL",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8425),
                            Name = "Brazilian Real",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 33,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8429),
                            Description = "BRITISH INDIAN OCEAN TERRITORY (THE)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8430),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 34,
                            Code = "BND",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8434),
                            Description = "BRUNEI DARUSSALAM",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8436),
                            Name = "Brunei Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 35,
                            Code = "BGN",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8440),
                            Description = "BULGARIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8442),
                            Name = "Bulgarian Lev",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 36,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8447),
                            Description = "BURKINA FASO",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8449),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 37,
                            Code = "BIF",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8461),
                            Description = "BURUNDI",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8463),
                            Name = "Burundi Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 38,
                            Code = "CVE",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8469),
                            Description = "CABO VERDE",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8471),
                            Name = "Cabo Verde Escudo",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 39,
                            Code = "KHR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8475),
                            Description = "CAMBODIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8477),
                            Name = "Riel",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 40,
                            Code = "XAF",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8481),
                            Description = "CAMEROON",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8482),
                            Name = "CFA Franc BEAC",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 41,
                            Code = "CAD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8487),
                            Description = "CANADA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8489),
                            Name = "Canadian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 42,
                            Code = "KYD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8493),
                            Description = "CAYMAN ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8494),
                            Name = "Cayman Islands Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 43,
                            Code = "XAF",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8498),
                            Description = "CENTRAL AFRICAN REPUBLIC (THE)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8500),
                            Name = "CFA Franc BEAC",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 44,
                            Code = "XAF",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8504),
                            Description = "CHAD",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8506),
                            Name = "CFA Franc BEAC",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 45,
                            Code = "CLF",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8510),
                            Description = "CHILE",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8512),
                            Name = "Unidad de Fomento",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 46,
                            Code = "CLP",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8516),
                            Description = "CHILE",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8518),
                            Name = "Chilean Peso",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 47,
                            Code = "CNY",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8524),
                            Description = "CHINA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8526),
                            Name = "Yuan Renminbi",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 48,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8530),
                            Description = "CHRISTMAS ISLAND",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8532),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 49,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8536),
                            Description = "COCOS (KEELING) ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8537),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 50,
                            Code = "COP",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8541),
                            Description = "COLOMBIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8543),
                            Name = "Colombian Peso",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 51,
                            Code = "COU",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8547),
                            Description = "COLOMBIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8549),
                            Name = "Unidad de Valor Real",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 52,
                            Code = "KMF",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8554),
                            Description = "COMOROS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8555),
                            Name = "Comoro Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 53,
                            Code = "CDF",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8559),
                            Description = "CONGO (THE DEMOCRATIC REPUBLIC OF THE)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8561),
                            Name = "Congolese Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 54,
                            Code = "XAF",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8565),
                            Description = "CONGO (THE)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8567),
                            Name = "CFA Franc BEAC",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 55,
                            Code = "NZD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8571),
                            Description = "COOK ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8572),
                            Name = "New Zealand Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 56,
                            Code = "CRC",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8576),
                            Description = "COSTA RICA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8578),
                            Name = "Costa Rican Colon",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 57,
                            Code = "HRK",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8583),
                            Description = "CROATIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8585),
                            Name = "Kuna",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 58,
                            Code = "CUC",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8589),
                            Description = "CUBA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8590),
                            Name = "Peso Convertible",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 59,
                            Code = "CUP",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8594),
                            Description = "CUBA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8596),
                            Name = "Cuban Peso",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 60,
                            Code = "ANG",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8600),
                            Description = "CURAÇAO",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8602),
                            Name = "Netherlands Antillean Guilder",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 61,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8606),
                            Description = "CYPRUS",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8607),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 62,
                            Code = "CZK",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8612),
                            Description = "CZECH REPUBLIC (THE)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8613),
                            Name = "Czech Koruna",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 63,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8626),
                            Description = "CÔTE D'IVOIRE",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8628),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 64,
                            Code = "DKK",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8632),
                            Description = "DENMARK",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8634),
                            Name = "Danish Krone",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 65,
                            Code = "DJF",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8638),
                            Description = "DJIBOUTI",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8639),
                            Name = "Djibouti Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 66,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8644),
                            Description = "DOMINICA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8645),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 67,
                            Code = "DOP",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8650),
                            Description = "DOMINICAN REPUBLIC (THE)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8652),
                            Name = "Dominican Peso",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 68,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8659),
                            Description = "ECUADOR",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8661),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 69,
                            Code = "EGP",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8665),
                            Description = "EGYPT",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8666),
                            Name = "Egyptian Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 70,
                            Code = "SVC",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8670),
                            Description = "EL SALVADOR",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8672),
                            Name = "El Salvador Colon",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 71,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8676),
                            Description = "EL SALVADOR",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8678),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 72,
                            Code = "XAF",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8682),
                            Description = "EQUATORIAL GUINEA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8683),
                            Name = "CFA Franc BEAC",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 73,
                            Code = "ERN",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8687),
                            Description = "ERITREA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8689),
                            Name = "Nakfa",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 74,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8693),
                            Description = "ESTONIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8695),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 75,
                            Code = "ETB",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8699),
                            Description = "ETHIOPIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8701),
                            Name = "Ethiopian Birr",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 76,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8705),
                            Description = "EUROPEAN UNION",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8707),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 77,
                            Code = "FKP",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8711),
                            Description = "FALKLAND ISLANDS (THE) [MALVINAS]",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8713),
                            Name = "Falkland Islands Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 78,
                            Code = "DKK",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8718),
                            Description = "FAROE ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8720),
                            Name = "Danish Krone",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 79,
                            Code = "FJD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8724),
                            Description = "FIJI",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8725),
                            Name = "Fiji Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 80,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8729),
                            Description = "FINLAND",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8731),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 81,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8735),
                            Description = "FRANCE",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8736),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 82,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8741),
                            Description = "FRENCH GUIANA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8742),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 83,
                            Code = "XPF",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8746),
                            Description = "FRENCH POLYNESIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8748),
                            Name = "CFP Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 84,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8752),
                            Description = "FRENCH SOUTHERN TERRITORIES (THE)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8754),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 85,
                            Code = "XAF",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8761),
                            Description = "GABON",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8763),
                            Name = "CFA Franc BEAC",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 86,
                            Code = "GMD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8767),
                            Description = "GAMBIA (THE)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8769),
                            Name = "Dalasi",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 87,
                            Code = "GEL",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8772),
                            Description = "GEORGIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8774),
                            Name = "Lari",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 88,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8786),
                            Description = "GERMANY",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8788),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 89,
                            Code = "GHS",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8792),
                            Description = "GHANA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8794),
                            Name = "Ghana Cedi",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 90,
                            Code = "GIP",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8798),
                            Description = "GIBRALTAR",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8800),
                            Name = "Gibraltar Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 91,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8804),
                            Description = "GREECE",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8805),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 92,
                            Code = "DKK",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8810),
                            Description = "GREENLAND",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8811),
                            Name = "Danish Krone",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 93,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8815),
                            Description = "GRENADA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8817),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 94,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8820),
                            Description = "GUADELOUPE",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8822),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 95,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8826),
                            Description = "GUAM",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8828),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 96,
                            Code = "GTQ",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8832),
                            Description = "GUATEMALA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8833),
                            Name = "Quetzal",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 97,
                            Code = "GBP",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8837),
                            Description = "GUERNSEY",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8839),
                            Name = "Pound Sterling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 98,
                            Code = "GNF",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8843),
                            Description = "GUINEA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8845),
                            Name = "Guinea Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 99,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8849),
                            Description = "GUINEA-BISSAU",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8851),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 100,
                            Code = "GYD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8855),
                            Description = "GUYANA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8856),
                            Name = "Guyana Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 101,
                            Code = "HTG",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8860),
                            Description = "HAITI",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8862),
                            Name = "Gourde",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 102,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8866),
                            Description = "HAITI",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8867),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 103,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8871),
                            Description = "HEARD ISLAND AND McDONALD ISLANDS",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8873),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 104,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8877),
                            Description = "HOLY SEE (THE)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8878),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 105,
                            Code = "HNL",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8882),
                            Description = "HONDURAS",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8884),
                            Name = "Lempira",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 106,
                            Code = "HKD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8888),
                            Description = "HONG KONG",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8889),
                            Name = "Hong Kong Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 107,
                            Code = "HUF",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8893),
                            Description = "HUNGARY",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8895),
                            Name = "Forint",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 108,
                            Code = "ISK",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8899),
                            Description = "ICELAND",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8901),
                            Name = "Iceland Krona",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 109,
                            Code = "INR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8905),
                            Description = "INDIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8907),
                            Name = "Indian Rupee",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 110,
                            Code = "IDR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8911),
                            Description = "INDONESIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8913),
                            Name = "Rupiah",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 111,
                            Code = "XDR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8917),
                            Description = "INTERNATIONAL MONETARY FUND (IMF) ",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8918),
                            Name = "SDR (Special Drawing Right)",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 112,
                            Code = "IRR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8922),
                            Description = "IRAN (ISLAMIC REPUBLIC OF)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8924),
                            Name = "Iranian Rial",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 113,
                            Code = "IQD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8928),
                            Description = "IRAQ",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(8929),
                            Name = "Iraqi Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 114,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9008),
                            Description = "IRELAND",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9012),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 115,
                            Code = "GBP",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9016),
                            Description = "ISLE OF MAN",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9018),
                            Name = "Pound Sterling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 116,
                            Code = "ILS",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9021),
                            Description = "ISRAEL",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9023),
                            Name = "New Israeli Sheqel",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 117,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9027),
                            Description = "ITALY",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9029),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 118,
                            Code = "JMD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9032),
                            Description = "JAMAICA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9034),
                            Name = "Jamaican Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 119,
                            Code = "JPY",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9039),
                            Description = "JAPAN",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9041),
                            Name = "Yen",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 120,
                            Code = "GBP",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9044),
                            Description = "JERSEY",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9046),
                            Name = "Pound Sterling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 121,
                            Code = "JOD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9050),
                            Description = "JORDAN",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9052),
                            Name = "Jordanian Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 122,
                            Code = "KZT",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9055),
                            Description = "KAZAKHSTAN",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9057),
                            Name = "Tenge",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 123,
                            Code = "KES",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9061),
                            Description = "KENYA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9063),
                            Name = "Kenyan Shilling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 124,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9066),
                            Description = "KIRIBATI",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9068),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 125,
                            Code = "KPW",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9072),
                            Description = "KOREA (THE DEMOCRATIC PEOPLE’S REPUBLIC OF)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9074),
                            Name = "North Korean Won",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 126,
                            Code = "KRW",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9077),
                            Description = "KOREA (THE REPUBLIC OF)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9079),
                            Name = "Won",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 127,
                            Code = "KWD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9083),
                            Description = "KUWAIT",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9085),
                            Name = "Kuwaiti Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 128,
                            Code = "KGS",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9088),
                            Description = "KYRGYZSTAN",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9090),
                            Name = "Som",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 129,
                            Code = "LAK",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9094),
                            Description = "LAO PEOPLE’S DEMOCRATIC REPUBLIC (THE)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9096),
                            Name = "Kip",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 130,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9102),
                            Description = "LATVIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9103),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 131,
                            Code = "LBP",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9108),
                            Description = "LEBANON",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9109),
                            Name = "Lebanese Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 132,
                            Code = "LSL",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9114),
                            Description = "LESOTHO",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9116),
                            Name = "Loti",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 133,
                            Code = "ZAR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9120),
                            Description = "LESOTHO",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9122),
                            Name = "Rand",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 134,
                            Code = "LRD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9127),
                            Description = "LIBERIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9129),
                            Name = "Liberian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 135,
                            Code = "LYD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9134),
                            Description = "LIBYA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9135),
                            Name = "Libyan Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 136,
                            Code = "CHF",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9140),
                            Description = "LIECHTENSTEIN",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9142),
                            Name = "Swiss Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 137,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9147),
                            Description = "LITHUANIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9149),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 138,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9153),
                            Description = "LUXEMBOURG",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9155),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 139,
                            Code = "MOP",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9168),
                            Description = "MACAO",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9169),
                            Name = "Pataca",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 140,
                            Code = "MGA",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9175),
                            Description = "MADAGASCAR",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9177),
                            Name = "Malagasy Ariary",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 141,
                            Code = "MWK",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9182),
                            Description = "MALAWI",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9184),
                            Name = "Kwacha",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 142,
                            Code = "MYR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9188),
                            Description = "MALAYSIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9190),
                            Name = "Malaysian Ringgit",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 143,
                            Code = "MVR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9194),
                            Description = "MALDIVES",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9195),
                            Name = "Rufiyaa",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 144,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9200),
                            Description = "MALI",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9201),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 145,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9205),
                            Description = "MALTA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9207),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 146,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9211),
                            Description = "MARSHALL ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9213),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 147,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9217),
                            Description = "MARTINIQUE",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9219),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 148,
                            Code = "MRU",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9223),
                            Description = "MAURITANIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9224),
                            Name = "Ouguiya",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 149,
                            Code = "MUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9231),
                            Description = "MAURITIUS",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9233),
                            Name = "Mauritius Rupee",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 150,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9237),
                            Description = "MAYOTTE",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9239),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 151,
                            Code = "MXN",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9243),
                            Description = "MEXICO",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9245),
                            Name = "Mexican Peso",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 152,
                            Code = "MXV",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9249),
                            Description = "MEXICO",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9251),
                            Name = "Mexican Unidad de Inversion (UDI)",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 153,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9255),
                            Description = "MICRONESIA (FEDERATED STATES OF)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9257),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 154,
                            Code = "MDL",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9261),
                            Description = "MOLDOVA (THE REPUBLIC OF)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9263),
                            Name = "Moldovan Leu",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 155,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9266),
                            Description = "MONACO",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9268),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 156,
                            Code = "MNT",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9272),
                            Description = "MONGOLIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9274),
                            Name = "Tugrik",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 157,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9278),
                            Description = "MONTENEGRO",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9279),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 158,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9283),
                            Description = "MONTSERRAT",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9285),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 159,
                            Code = "MAD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9289),
                            Description = "MOROCCO",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9290),
                            Name = "Moroccan Dirham",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 160,
                            Code = "MZN",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9294),
                            Description = "MOZAMBIQUE",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9296),
                            Name = "Mozambique Metical",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 161,
                            Code = "MMK",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9300),
                            Description = "MYANMAR",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9302),
                            Name = "Kyat",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 162,
                            Code = "NAD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9306),
                            Description = "NAMIBIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9308),
                            Name = "Namibia Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 163,
                            Code = "ZAR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9311),
                            Description = "NAMIBIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9313),
                            Name = "Rand",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 164,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9317),
                            Description = "NAURU",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9318),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 165,
                            Code = "NPR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9329),
                            Description = "NEPAL",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9331),
                            Name = "Nepalese Rupee",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 166,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9335),
                            Description = "NETHERLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9337),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 167,
                            Code = "XPF",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9341),
                            Description = "NEW CALEDONIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9342),
                            Name = "CFP Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 168,
                            Code = "NZD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9347),
                            Description = "NEW ZEALAND",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9349),
                            Name = "New Zealand Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 169,
                            Code = "NIO",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9353),
                            Description = "NICARAGUA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9354),
                            Name = "Cordoba Oro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 170,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9360),
                            Description = "NIGER (THE)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9362),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 171,
                            Code = "NGN",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9367),
                            Description = "NIGERIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9368),
                            Name = "Naira",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 172,
                            Code = "NZD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9373),
                            Description = "NIUE",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9374),
                            Name = "New Zealand Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 173,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9378),
                            Description = "NORFOLK ISLAND",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9380),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 174,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9384),
                            Description = "NORTHERN MARIANA ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9386),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 175,
                            Code = "NOK",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9390),
                            Description = "NORWAY",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9392),
                            Name = "Norwegian Krone",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 176,
                            Code = "OMR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9396),
                            Description = "OMAN",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9397),
                            Name = "Rial Omani",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 177,
                            Code = "PKR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9402),
                            Description = "PAKISTAN",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9403),
                            Name = "Pakistan Rupee",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 178,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9407),
                            Description = "PALAU",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9409),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 179,
                            Code = "PAB",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9413),
                            Description = "PANAMA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9414),
                            Name = "Balboa",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 180,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9418),
                            Description = "PANAMA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9420),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 181,
                            Code = "PGK",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9423),
                            Description = "PAPUA NEW GUINEA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9425),
                            Name = "Kina",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 182,
                            Code = "PYG",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9431),
                            Description = "PARAGUAY",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9432),
                            Name = "Guarani",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 183,
                            Code = "PEN",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9437),
                            Description = "PERU",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9438),
                            Name = "Nuevo Sol",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 184,
                            Code = "PHP",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9442),
                            Description = "PHILIPPINES (THE)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9444),
                            Name = "Philippine Peso",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 185,
                            Code = "NZD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9447),
                            Description = "PITCAIRN",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9449),
                            Name = "New Zealand Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 186,
                            Code = "PLN",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9453),
                            Description = "POLAND",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9455),
                            Name = "Zloty",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 187,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9458),
                            Description = "PORTUGAL",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9460),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 188,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9464),
                            Description = "PUERTO RICO",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9466),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 189,
                            Code = "QAR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9471),
                            Description = "QATAR",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9473),
                            Name = "Qatari Rial",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 190,
                            Code = "MKD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9483),
                            Description = "REPUBLIC OF NORTH MACEDONIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9485),
                            Name = "Denar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 191,
                            Code = "RON",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9492),
                            Description = "ROMANIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9493),
                            Name = "Romanian Leu",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 192,
                            Code = "RUB",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9499),
                            Description = "RUSSIAN FEDERATION (THE)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9501),
                            Name = "Russian Ruble",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 193,
                            Code = "RWF",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9505),
                            Description = "RWANDA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9507),
                            Name = "Rwanda Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 194,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9511),
                            Description = "RÉUNION",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9512),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 195,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9517),
                            Description = "SAINT BARTHÉLEMY",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9518),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 196,
                            Code = "SHP",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9523),
                            Description = "SAINT HELENA, ASCENSION AND TRISTAN DA CUNHA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9524),
                            Name = "Saint Helena Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 197,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9528),
                            Description = "SAINT KITTS AND NEVIS",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9530),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 198,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9537),
                            Description = "SAINT LUCIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9538),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 199,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9542),
                            Description = "SAINT MARTIN (FRENCH PART)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9544),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 200,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9548),
                            Description = "SAINT PIERRE AND MIQUELON",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9549),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 201,
                            Code = "XCD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9553),
                            Description = "SAINT VINCENT AND THE GRENADINES",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9555),
                            Name = "East Caribbean Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 202,
                            Code = "WST",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9559),
                            Description = "SAMOA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9561),
                            Name = "Tala",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 203,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9565),
                            Description = "SAN MARINO",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9567),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 204,
                            Code = "STN",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9571),
                            Description = "SAO TOME AND PRINCIPE",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9572),
                            Name = "Dobra",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 205,
                            Code = "SAR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9576),
                            Description = "SAUDI ARABIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9578),
                            Name = "Saudi Riyal",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 206,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9582),
                            Description = "SENEGAL",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9583),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 207,
                            Code = "RSD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9587),
                            Description = "SERBIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9589),
                            Name = "Serbian Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 208,
                            Code = "SCR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9593),
                            Description = "SEYCHELLES",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9594),
                            Name = "Seychelles Rupee",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 209,
                            Code = "SLL",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9598),
                            Description = "SIERRA LEONE",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9600),
                            Name = "Leone",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 210,
                            Code = "SGD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9604),
                            Description = "SINGAPORE",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9605),
                            Name = "Singapore Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 211,
                            Code = "ANG",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9609),
                            Description = "SINT MAARTEN (DUTCH PART)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9611),
                            Name = "Netherlands Antillean Guilder",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 212,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9615),
                            Description = "SLOVAKIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9617),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 213,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9622),
                            Description = "SLOVENIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9624),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 214,
                            Code = "SBD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9628),
                            Description = "SOLOMON ISLANDS",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9629),
                            Name = "Solomon Islands Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 215,
                            Code = "SOS",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9633),
                            Description = "SOMALIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9635),
                            Name = "Somali Shilling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 216,
                            Code = "ZAR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9645),
                            Description = "SOUTH AFRICA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9647),
                            Name = "Rand",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 217,
                            Code = "SSP",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9651),
                            Description = "SOUTH SUDAN",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9652),
                            Name = "South Sudanese Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 218,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9656),
                            Description = "SPAIN",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9658),
                            Name = "Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 219,
                            Code = "LKR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9662),
                            Description = "SRI LANKA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9663),
                            Name = "Sri Lanka Rupee",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 220,
                            Code = "SDG",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9667),
                            Description = "SUDAN (THE)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9669),
                            Name = "Sudanese Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 221,
                            Code = "SRD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9673),
                            Description = "SURINAME",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9674),
                            Name = "Surinam Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 222,
                            Code = "NOK",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9679),
                            Description = "SVALBARD AND JAN MAYEN",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9680),
                            Name = "Norwegian Krone",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 223,
                            Code = "SZL",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9685),
                            Description = "SWAZILAND",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9687),
                            Name = "Lilangeni",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 224,
                            Code = "SEK",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9691),
                            Description = "SWEDEN",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9692),
                            Name = "Swedish Krona",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 225,
                            Code = "CHE",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9696),
                            Description = "SWITZERLAND",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9698),
                            Name = "WIR Euro",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 226,
                            Code = "CHF",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9701),
                            Description = "SWITZERLAND",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9703),
                            Name = "Swiss Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 227,
                            Code = "CHW",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9707),
                            Description = "SWITZERLAND",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9709),
                            Name = "WIR Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 228,
                            Code = "SYP",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9712),
                            Description = "SYRIAN ARAB REPUBLIC",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9714),
                            Name = "Syrian Pound",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 229,
                            Code = "TWD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9718),
                            Description = "TAIWAN (PROVINCE OF CHINA)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9719),
                            Name = "New Taiwan Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 230,
                            Code = "TJS",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9723),
                            Description = "TAJIKISTAN",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9725),
                            Name = "Somoni",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 231,
                            Code = "TZS",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9729),
                            Description = "TANZANIA, UNITED REPUBLIC OF",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9731),
                            Name = "Tanzanian Shilling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 232,
                            Code = "THB",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9735),
                            Description = "THAILAND",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9736),
                            Name = "Baht",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 233,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9740),
                            Description = "TIMOR-LESTE",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9742),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 234,
                            Code = "XOF",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9747),
                            Description = "TOGO",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9748),
                            Name = "CFA Franc BCEAO",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 235,
                            Code = "NZD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9752),
                            Description = "TOKELAU",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9754),
                            Name = "New Zealand Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 236,
                            Code = "TOP",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9758),
                            Description = "TONGA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9759),
                            Name = "Pa’anga",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 237,
                            Code = "TTD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9763),
                            Description = "TRINIDAD AND TOBAGO",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9765),
                            Name = "Trinidad and Tobago Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 238,
                            Code = "TND",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9769),
                            Description = "TUNISIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9771),
                            Name = "Tunisian Dinar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 239,
                            Code = "TRY",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9774),
                            Description = "TURKEY",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9776),
                            Name = "Turkish Lira",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 240,
                            Code = "TMT",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9780),
                            Description = "TURKMENISTAN",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9782),
                            Name = "Turkmenistan New Manat",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 241,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9793),
                            Description = "TURKS AND CAICOS ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9794),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 242,
                            Code = "AUD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9798),
                            Description = "TUVALU",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9800),
                            Name = "Australian Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 243,
                            Code = "UGX",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9804),
                            Description = "UGANDA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9805),
                            Name = "Uganda Shilling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 244,
                            Code = "UAH",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9810),
                            Description = "UKRAINE",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9812),
                            Name = "Hryvnia",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 245,
                            Code = "AED",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9816),
                            Description = "UNITED ARAB EMIRATES (THE)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9818),
                            Name = "UAE Dirham",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 246,
                            Code = "GBP",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9822),
                            Description = "UNITED KINGDOM OF GREAT BRITAIN AND NORTHERN IRELAND (THE)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9823),
                            Name = "Pound Sterling",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 247,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9827),
                            Description = "UNITED STATES MINOR OUTLYING ISLANDS (THE)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9829),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 248,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9833),
                            Description = "UNITED STATES OF AMERICA (THE)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9834),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 249,
                            Code = "USN",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9838),
                            Description = "UNITED STATES OF AMERICA (THE)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9840),
                            Name = "US Dollar (Next day)",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 250,
                            Code = "UYI",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9844),
                            Description = "URUGUAY",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9846),
                            Name = "Uruguay Peso en Unidades Indexadas (URUIURUI)",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 251,
                            Code = "UYU",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9850),
                            Description = "URUGUAY",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9851),
                            Name = "Peso Uruguayo",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 252,
                            Code = "UZS",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9855),
                            Description = "UZBEKISTAN",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9857),
                            Name = "Uzbekistan Sum",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 253,
                            Code = "VUV",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9860),
                            Description = "VANUATU",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9862),
                            Name = "Vatu",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 254,
                            Code = "VEF",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9866),
                            Description = "VENEZUELA (BOLIVARIAN REPUBLIC OF)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9868),
                            Name = "Bolivar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 255,
                            Code = "VND",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9873),
                            Description = "VIET NAM",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9874),
                            Name = "Dong",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 256,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9878),
                            Description = "VIRGIN ISLANDS (BRITISH)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9880),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 257,
                            Code = "USD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9884),
                            Description = "VIRGIN ISLANDS (U.S.)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9886),
                            Name = "US Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 258,
                            Code = "XPF",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9889),
                            Description = "WALLIS AND FUTUNA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9891),
                            Name = "CFP Franc",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 259,
                            Code = "MAD",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9895),
                            Description = "WESTERN SAHARA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9897),
                            Name = "Moroccan Dirham",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 260,
                            Code = "YER",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9901),
                            Description = "YEMEN",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9902),
                            Name = "Yemeni Rial",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 261,
                            Code = "ZMW",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9906),
                            Description = "ZAMBIA",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9908),
                            Name = "Zambian Kwacha",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 262,
                            Code = "ZWL",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9912),
                            Description = "ZIMBABWE",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9914),
                            Name = "Zimbabwe Dollar",
                            Symbol = " "
                        },
                        new
                        {
                            Id = 263,
                            Code = "EUR",
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9917),
                            Description = "ÅLAND ISLANDS",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 763, DateTimeKind.Local).AddTicks(9919),
                            Name = "Euro",
                            Symbol = " "
                        });
                });

            modelBuilder.Entity("MM.ClientModels.CustomField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime1")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime10")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime11")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime12")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime13")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime14")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime15")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime16")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime17")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime18")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime19")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime2")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime20")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime3")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime4")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime5")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime6")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime7")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime8")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Datetime9")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("Decimal1")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal10")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal11")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal12")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal13")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal14")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal15")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal16")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal17")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal18")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal19")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal2")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal20")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal3")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal4")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal5")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal6")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal7")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal8")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Decimal9")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("Int1")
                        .HasColumnType("int");

                    b.Property<int?>("Int10")
                        .HasColumnType("int");

                    b.Property<int?>("Int11")
                        .HasColumnType("int");

                    b.Property<int?>("Int12")
                        .HasColumnType("int");

                    b.Property<int?>("Int13")
                        .HasColumnType("int");

                    b.Property<int?>("Int14")
                        .HasColumnType("int");

                    b.Property<int?>("Int15")
                        .HasColumnType("int");

                    b.Property<int?>("Int16")
                        .HasColumnType("int");

                    b.Property<int?>("Int17")
                        .HasColumnType("int");

                    b.Property<int?>("Int18")
                        .HasColumnType("int");

                    b.Property<int?>("Int19")
                        .HasColumnType("int");

                    b.Property<int?>("Int2")
                        .HasColumnType("int");

                    b.Property<int?>("Int20")
                        .HasColumnType("int");

                    b.Property<int?>("Int3")
                        .HasColumnType("int");

                    b.Property<int?>("Int4")
                        .HasColumnType("int");

                    b.Property<int?>("Int5")
                        .HasColumnType("int");

                    b.Property<int?>("Int6")
                        .HasColumnType("int");

                    b.Property<int?>("Int7")
                        .HasColumnType("int");

                    b.Property<int?>("Int8")
                        .HasColumnType("int");

                    b.Property<int?>("Int9")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup1")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup10")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup11")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup12")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup13")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup14")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup15")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup16")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup17")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup18")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup19")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup2")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup20")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup3")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup4")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup5")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup6")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup7")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup8")
                        .HasColumnType("int");

                    b.Property<int?>("Lookup9")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TableName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("TablePrimaryKeyValue")
                        .HasColumnType("int");

                    b.Property<string>("Text1")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text10")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text11")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text12")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text13")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text14")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text15")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text16")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text17")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text18")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text19")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text2")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text20")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text3")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text4")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text5")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text6")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text7")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text8")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text9")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("CustomField");
                });

            modelBuilder.Entity("MM.ClientModels.CustomFieldLookUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("FieldIndex")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("CustomFieldLookUp");
                });

            modelBuilder.Entity("MM.ClientModels.CustomFieldName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DataType")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("FieldIndex")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("CustomFieldName");
                });

            modelBuilder.Entity("MM.ClientModels.DateSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(40) CHARACTER SET utf8mb4")
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.ToTable("DateSetting");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 770, DateTimeKind.Local).AddTicks(2527),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 770, DateTimeKind.Local).AddTicks(3485),
                            Name = "12/03/2020"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 770, DateTimeKind.Local).AddTicks(4476),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 770, DateTimeKind.Local).AddTicks(4508),
                            Name = "03/12/2020"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 770, DateTimeKind.Local).AddTicks(4525),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 770, DateTimeKind.Local).AddTicks(4528),
                            Name = "03.12.2020"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 770, DateTimeKind.Local).AddTicks(4531),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 770, DateTimeKind.Local).AddTicks(4532),
                            Name = "03-12-2020"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 770, DateTimeKind.Local).AddTicks(4535),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 770, DateTimeKind.Local).AddTicks(4537),
                            Name = "03 Dec 2020"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 770, DateTimeKind.Local).AddTicks(4540),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 770, DateTimeKind.Local).AddTicks(4541),
                            Name = "03-Dec-2020"
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 770, DateTimeKind.Local).AddTicks(4544),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 770, DateTimeKind.Local).AddTicks(4546),
                            Name = "2020-12-03"
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 770, DateTimeKind.Local).AddTicks(4548),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 770, DateTimeKind.Local).AddTicks(4550),
                            Name = "Friday, December 03, 2020"
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 770, DateTimeKind.Local).AddTicks(4553),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 770, DateTimeKind.Local).AddTicks(4554),
                            Name = "Fri, December 03, 2020"
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 770, DateTimeKind.Local).AddTicks(4557),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 770, DateTimeKind.Local).AddTicks(4558),
                            Name = "December 03, 2020"
                        },
                        new
                        {
                            Id = 11,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 770, DateTimeKind.Local).AddTicks(4561),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 770, DateTimeKind.Local).AddTicks(4563),
                            Name = "03 December 2020"
                        },
                        new
                        {
                            Id = 12,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 770, DateTimeKind.Local).AddTicks(4565),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 770, DateTimeKind.Local).AddTicks(4567),
                            Name = "3 Dec 2020"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Designation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Designation");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 773, DateTimeKind.Local).AddTicks(8403),
                            Description = "Operations manager",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 773, DateTimeKind.Local).AddTicks(9342),
                            Name = "Operations manager"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 774, DateTimeKind.Local).AddTicks(344),
                            Description = "Quality control, safety, environmental manager",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 774, DateTimeKind.Local).AddTicks(368),
                            Name = "Quality control, safety, environmental manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 774, DateTimeKind.Local).AddTicks(383),
                            Description = "Accountant, bookkeeper, controller",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 774, DateTimeKind.Local).AddTicks(385),
                            Name = "Accountant, bookkeeper, controller"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 774, DateTimeKind.Local).AddTicks(388),
                            Description = "Office manager",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 774, DateTimeKind.Local).AddTicks(390),
                            Name = "Office manager"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 774, DateTimeKind.Local).AddTicks(393),
                            Description = "Receptionist",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 774, DateTimeKind.Local).AddTicks(394),
                            Name = "Receptionist"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 774, DateTimeKind.Local).AddTicks(397),
                            Description = "Foreperson, supervisor, lead person",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 774, DateTimeKind.Local).AddTicks(399),
                            Name = "Foreperson, supervisor, lead person"
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 774, DateTimeKind.Local).AddTicks(402),
                            Description = "Marketing manager",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 774, DateTimeKind.Local).AddTicks(404),
                            Name = "Marketing manager"
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 774, DateTimeKind.Local).AddTicks(406),
                            Description = "Purchasing manager",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 774, DateTimeKind.Local).AddTicks(408),
                            Name = "Purchasing manager"
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 774, DateTimeKind.Local).AddTicks(410),
                            Description = "Shipping and receiving person or manager",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 774, DateTimeKind.Local).AddTicks(412),
                            Name = "Shipping and receiving person or manager"
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 774, DateTimeKind.Local).AddTicks(415),
                            Description = "Professional staff",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 774, DateTimeKind.Local).AddTicks(416),
                            Name = "Professional staff"
                        },
                        new
                        {
                            Id = 11,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 774, DateTimeKind.Local).AddTicks(419),
                            Description = "Production Manager",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 774, DateTimeKind.Local).AddTicks(420),
                            Name = "Production Manager"
                        },
                        new
                        {
                            Id = 12,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 774, DateTimeKind.Local).AddTicks(423),
                            Description = "Chief Financial Officer (CFO)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 774, DateTimeKind.Local).AddTicks(425),
                            Name = "Chief Financial Officer (CFO)"
                        },
                        new
                        {
                            Id = 13,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 774, DateTimeKind.Local).AddTicks(427),
                            Description = "Vice President of Marketing or Marketing Manager",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 774, DateTimeKind.Local).AddTicks(429),
                            Name = "Vice President of Marketing or Marketing Manager"
                        },
                        new
                        {
                            Id = 14,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 774, DateTimeKind.Local).AddTicks(432),
                            Description = "Chief Operating Officer (COO)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 774, DateTimeKind.Local).AddTicks(433),
                            Name = "Chief Operating Officer (COO)"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Chief Executive Officer (CEO) or President",
                            Name = "Chief Executive Officer (CEO) or President"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Donation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DonatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DonorNotes")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("PromotionDetailId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("PromotionDetailId");

                    b.ToTable("Donation");
                });

            modelBuilder.Entity("MM.ClientModels.EmailCcrule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EmailTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmailTypeId");

                    b.HasIndex("RoleId");

                    b.ToTable("EmailCCRule");
                });

            modelBuilder.Entity("MM.ClientModels.EmailTemplateContent", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailContent")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasMaxLength(4000);

                    b.Property<int>("EmailTemplateNameId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("EmailTemplateNameId");

                    b.ToTable("EmailTemplateContent");
                });

            modelBuilder.Entity("MM.ClientModels.EmailTemplateName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("EmailTemplateName");
                });

            modelBuilder.Entity("MM.ClientModels.EmailType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("EmailType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 788, DateTimeKind.Local).AddTicks(3462),
                            Description = "Personal E-mail",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 788, DateTimeKind.Local).AddTicks(4510),
                            Name = "Personal"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 788, DateTimeKind.Local).AddTicks(5522),
                            Description = "Work E-mail",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 788, DateTimeKind.Local).AddTicks(5546),
                            Name = "Work"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 788, DateTimeKind.Local).AddTicks(5559),
                            Description = "Business E-mail",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 788, DateTimeKind.Local).AddTicks(5561),
                            Name = "Business"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("MM.ClientModels.EquipmentCount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AvailableCount")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.ToTable("EquipmentCount");
                });

            modelBuilder.Entity("MM.ClientModels.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<bool>("AllowCancellations")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("AllowGuestRegistrations")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("AllowRegistration")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CancellationbeforeDays")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(2000) CHARACTER SET utf8mb4")
                        .HasMaxLength(2000);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time(2)");

                    b.Property<string>("EventUniqueName")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<int?>("GuestLimitPerRegistrant")
                        .HasColumnType("int");

                    b.Property<bool>("InternalOrExternal")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsChargableEvent")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsCpdevent")
                        .HasColumnName("IsCPDEvent")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MaxRegistrationsAllowed")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("OrganizerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegEndDate")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan>("RegEndTime")
                        .HasColumnType("time(2)");

                    b.Property<DateTime>("RegStartDate")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan>("RegStartTime")
                        .HasColumnType("time(2)");

                    b.Property<bool>("ShowMaxRegistrationsAllowed")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time(2)");

                    b.Property<int>("TimeZoneId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("OrganizerId");

                    b.HasIndex("TimeZoneId");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("MM.ClientModels.EventAccess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool?>("AdminOnly")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("Anyone")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<bool?>("RestrictedList")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("EventAccess");
                });

            modelBuilder.Entity("MM.ClientModels.EventAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan>("SignInTime")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan>("SingOutTime")
                        .HasColumnType("time(6)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("MemberId");

                    b.ToTable("EventAttendance");
                });

            modelBuilder.Entity("MM.ClientModels.EventCommunication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Announcement1ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Announcement1Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Announcement1SentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Announcement2ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Announcement2Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Announcement2SentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Announcement3ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Announcement3Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Announcement3SentDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Reminder1ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Reminder1Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Reminder1SentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Reminder2ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Reminder2Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Reminder2SentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Reminder3ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Reminder3Sent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Reminder3SentDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("EventCommunication");
                });

            modelBuilder.Entity("MM.ClientModels.EventCost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 3)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EventCostItemId")
                        .HasColumnType("int");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("EventCost");
                });

            modelBuilder.Entity("MM.ClientModels.EventCostItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("EventCostItem");
                });

            modelBuilder.Entity("MM.ClientModels.EventEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RequiredCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("EventId");

                    b.ToTable("EventEquipment");
                });

            modelBuilder.Entity("MM.ClientModels.EventMinute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AssignedTo")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("Heading")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Minute")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("MinuteStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RaisedBy")
                        .HasColumnType("int");

                    b.Property<string>("SubHeading")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("MinuteStatusId");

                    b.ToTable("EventMinute");
                });

            modelBuilder.Entity("MM.ClientModels.EventMinuteStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("EventMinuteStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 819, DateTimeKind.Local).AddTicks(2630),
                            Description = "Under preperation",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 819, DateTimeKind.Local).AddTicks(3603),
                            Name = "In-Progress"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 819, DateTimeKind.Local).AddTicks(4599),
                            Description = "Prepared & awaiting approval",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 819, DateTimeKind.Local).AddTicks(4622),
                            Name = "Prepared"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 819, DateTimeKind.Local).AddTicks(4639),
                            Description = "Approved",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 819, DateTimeKind.Local).AddTicks(4641),
                            Name = "Approved"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 819, DateTimeKind.Local).AddTicks(4644),
                            Description = "Shared with concerned people",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 819, DateTimeKind.Local).AddTicks(4646),
                            Name = "Shared"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.EventPreRequisiteEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PreRequisiteEventId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("PreRequisiteEventId");

                    b.ToTable("EventPreRequisiteEvent");
                });

            modelBuilder.Entity("MM.ClientModels.EventRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Cancelled")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("EventResponseTypeId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("NumberOfGuests")
                        .HasColumnType("int");

                    b.Property<bool>("Paid")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("EventResponseTypeId");

                    b.HasIndex("MemberId");

                    b.ToTable("EventRegistration");
                });

            modelBuilder.Entity("MM.ClientModels.EventResponseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("EventResponseType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 835, DateTimeKind.Local).AddTicks(9932),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 836, DateTimeKind.Local).AddTicks(1348),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 836, DateTimeKind.Local).AddTicks(3003),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 836, DateTimeKind.Local).AddTicks(3045),
                            Name = "Organizer"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 836, DateTimeKind.Local).AddTicks(3072),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 836, DateTimeKind.Local).AddTicks(3078),
                            Name = "Sponsor"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 836, DateTimeKind.Local).AddTicks(3085),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 836, DateTimeKind.Local).AddTicks(3088),
                            Name = "Facilitator"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 836, DateTimeKind.Local).AddTicks(3095),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 836, DateTimeKind.Local).AddTicks(3098),
                            Name = "Guest"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.EventRestrictionList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberLevelId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberTeamId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("MemberLevelId");

                    b.HasIndex("MemberTeamId");

                    b.ToTable("EventRestrictionList");
                });

            modelBuilder.Entity("MM.ClientModels.EventRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasMaxLength(500);

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("EventRole");
                });

            modelBuilder.Entity("MM.ClientModels.EventRoleUserXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int>("EventRoleId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventRoleId");

                    b.HasIndex("UserId");

                    b.ToTable("EventRoleUserXRef");
                });

            modelBuilder.Entity("MM.ClientModels.FileType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("FileType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 849, DateTimeKind.Local).AddTicks(3781),
                            Description = "Microsoft Word",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 849, DateTimeKind.Local).AddTicks(4747),
                            Name = "MS-Word"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 849, DateTimeKind.Local).AddTicks(5730),
                            Description = "Microsoft Excel",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 849, DateTimeKind.Local).AddTicks(5751),
                            Name = "MS-Excel"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 849, DateTimeKind.Local).AddTicks(5765),
                            Description = "PDF",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 849, DateTimeKind.Local).AddTicks(5767),
                            Name = "PDF"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 849, DateTimeKind.Local).AddTicks(5769),
                            Description = "Zip File",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 849, DateTimeKind.Local).AddTicks(5771),
                            Name = "Zip"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Gender");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 852, DateTimeKind.Local).AddTicks(18),
                            Description = "Male",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 852, DateTimeKind.Local).AddTicks(939),
                            Name = "Male"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 852, DateTimeKind.Local).AddTicks(2017),
                            Description = "Female",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 852, DateTimeKind.Local).AddTicks(2039),
                            Name = "Female"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 852, DateTimeKind.Local).AddTicks(2052),
                            Description = "Other",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 852, DateTimeKind.Local).AddTicks(2054),
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CommentsForPayer")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("InternalNotes")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<decimal>("InvoiceAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("InvoiceCode")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InvoiceItem")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("InvoiceStatusId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PaymentGatewayId")
                        .HasColumnType("int");

                    b.Property<int?>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int?>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceStatusId");

                    b.HasIndex("MemberId");

                    b.HasIndex("PaymentGatewayId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("MM.ClientModels.InvoiceSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("CopyInvToOrgContact")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CopyRecToOrgContact")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("NextInvoiceNumber")
                        .HasColumnType("int");

                    b.Property<bool>("SendInvForPendingPayments")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("SendRecToPayer")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("InvoiceSetting");
                });

            modelBuilder.Entity("MM.ClientModels.InvoiceStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("InvoiceStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 861, DateTimeKind.Local).AddTicks(8066),
                            Description = "Incomplete Invoice",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 861, DateTimeKind.Local).AddTicks(9002),
                            Name = "Draft"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 861, DateTimeKind.Local).AddTicks(9953),
                            Description = "Send to Member",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 861, DateTimeKind.Local).AddTicks(9975),
                            Name = "Send"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 861, DateTimeKind.Local).AddTicks(9987),
                            Description = "Viewed by member",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 861, DateTimeKind.Local).AddTicks(9989),
                            Name = "Viewed"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 861, DateTimeKind.Local).AddTicks(9993),
                            Description = "Due for payment",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 861, DateTimeKind.Local).AddTicks(9994),
                            Name = "Due"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 861, DateTimeKind.Local).AddTicks(9997),
                            Description = "Outstanding payment",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 861, DateTimeKind.Local).AddTicks(9999),
                            Name = "Overdue"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 862, DateTimeKind.Local).AddTicks(1),
                            Description = "Payment made",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 862, DateTimeKind.Local).AddTicks(3),
                            Name = "Paid"
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 862, DateTimeKind.Local).AddTicks(6),
                            Description = "Partial payment",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 862, DateTimeKind.Local).AddTicks(7),
                            Name = "Partial"
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 862, DateTimeKind.Local).AddTicks(10),
                            Description = "Incorrect / Dispute Invoice",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 862, DateTimeKind.Local).AddTicks(12),
                            Name = "Void"
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 862, DateTimeKind.Local).AddTicks(14),
                            Description = "Canceled Invoice",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 862, DateTimeKind.Local).AddTicks(16),
                            Name = "Canceled"
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 862, DateTimeKind.Local).AddTicks(19),
                            Description = "Uncollectible Invoice",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 862, DateTimeKind.Local).AddTicks(20),
                            Name = "Write Off"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.LandingPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("MemberTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberTypeId");

                    b.HasIndex("PageId");

                    b.ToTable("LandingPage");
                });

            modelBuilder.Entity("MM.ClientModels.MarketingGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("MarketingGroup");
                });

            modelBuilder.Entity("MM.ClientModels.MarketingGroupXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("MarketingGroupId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("MarketingGroupId");

                    b.HasIndex("MemberId");

                    b.ToTable("MarketingGroupXRef");
                });

            modelBuilder.Entity("MM.ClientModels.MarketingProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("MarketingProfile");
                });

            modelBuilder.Entity("MM.ClientModels.MarketingProfileXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("MarketingProfileId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("MarketingProfileId");

                    b.HasIndex("MemberId");

                    b.ToTable("MarketingProfileXRef");
                });

            modelBuilder.Entity("MM.ClientModels.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ConfirmedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<bool>("EmailActivated")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsBillingContact")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsBranchContact")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("MemberBranchId")
                        .HasColumnType("int");

                    b.Property<string>("MemberCode")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("MemberLevelId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberTeamId")
                        .HasColumnType("int");

                    b.Property<int>("MemberTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("MembershipConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("NextRenewalDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int?>("OrganizationStructureId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<byte[]>("Photo")
                        .HasColumnType("blob");

                    b.Property<int?>("ReferralTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("TermAccepted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("TitleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.HasIndex("MemberBranchId");

                    b.HasIndex("MemberLevelId");

                    b.HasIndex("MemberStatusId");

                    b.HasIndex("MemberTeamId");

                    b.HasIndex("MemberTypeId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("OrganizationStructureId");

                    b.HasIndex("ReferralTypeId");

                    b.HasIndex("TitleId");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("MM.ClientModels.MemberAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("AddressLine2")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("AddressTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("BuidlingName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("ComplexName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Gpscoordinates")
                        .HasColumnName("GPSCoordinates")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("PrimaryContactNo")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("PrimaryEmail")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("SecondaryContactNo")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("SecondaryEmail")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("StreetName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("AddressTypeId");

                    b.HasIndex("BranchId");

                    b.HasIndex("MemberId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("MemberAddress");
                });

            modelBuilder.Entity("MM.ClientModels.MemberAffliationXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("AffliatedFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("AffliatedTill")
                        .HasColumnType("datetime");

                    b.Property<int?>("AffliationId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<bool>("IsActiveAffliatedNow")
                        .HasColumnName("isActiveAffliatedNow")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("MemberSpecificAffliationName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("AffliationId");

                    b.HasIndex("MemberId");

                    b.ToTable("MemberAffliationXRef");
                });

            modelBuilder.Entity("MM.ClientModels.MemberBankingDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("AccountTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BankName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("RoutingCode")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AccountTypeId");

                    b.HasIndex("MemberId");

                    b.ToTable("MemberBankingDetail");
                });

            modelBuilder.Entity("MM.ClientModels.MemberBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("MemberBranch");
                });

            modelBuilder.Entity("MM.ClientModels.MemberCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("MemberCategory");
                });

            modelBuilder.Entity("MM.ClientModels.MemberCodeGenerator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CodeGenerationRule")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("LastNumber")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Prefix")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Suffix")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("MemberCodeGenerator");
                });

            modelBuilder.Entity("MM.ClientModels.MemberCommunicationPreference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CommunicationTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan?>("PreferredTimeFrom")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("PreferredTimeTo")
                        .HasColumnType("time(6)");

                    b.HasKey("Id");

                    b.HasIndex("CommunicationTypeId");

                    b.HasIndex("MemberId");

                    b.ToTable("MemberCommunicationPreference");
                });

            modelBuilder.Entity("MM.ClientModels.MemberFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<byte[]>("FileContent")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<int>("FileTypeId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("FileTypeId");

                    b.HasIndex("MemberId");

                    b.ToTable("MemberFile");
                });

            modelBuilder.Entity("MM.ClientModels.MemberLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("MemberLevel");
                });

            modelBuilder.Entity("MM.ClientModels.MemberLoginAudit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("LoginTime")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LogoutTime")
                        .HasColumnType("datetime");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MemberLoginAudit");
                });

            modelBuilder.Entity("MM.ClientModels.MemberPlanHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsCurrentPlan")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("MemberPlanDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("MemberPlanDetailId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("MemberPlanHistory");
                });

            modelBuilder.Entity("MM.ClientModels.MemberQualificationXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("MemberSpecificQualificationName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("QualificationFrom")
                        .HasColumnType("datetime");

                    b.Property<int?>("QualificationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("QualificationTill")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("QualificationId");

                    b.ToTable("MemberQualificationXRef");
                });

            modelBuilder.Entity("MM.ClientModels.MemberStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("MemberStatus");
                });

            modelBuilder.Entity("MM.ClientModels.MemberTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("MemberTeam");
                });

            modelBuilder.Entity("MM.ClientModels.MemberType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("MemberCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("MemberCategoryId");

                    b.ToTable("MemberType");
                });

            modelBuilder.Entity("MM.ClientModels.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Acronym")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("WebSite")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("MM.ClientModels.OrganizationStructure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("LevelOfMember")
                        .HasColumnType("int");

                    b.Property<int>("MaximumNumber")
                        .HasColumnType("int");

                    b.Property<int?>("MaximumTimeInYears")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<bool?>("ShowMaximumTimeInYears")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("OrganizationStructure");
                });

            modelBuilder.Entity("MM.ClientModels.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Page");
                });

            modelBuilder.Entity("MM.ClientModels.PayPalConnectionMode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("PayPalConnectionMode");
                });

            modelBuilder.Entity("MM.ClientModels.PayPalPreferredPaymentGateway", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("PayPalPreferredPaymentGateway");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 948, DateTimeKind.Local).AddTicks(1240),
                            Description = "Pay Flow Gateway",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 948, DateTimeKind.Local).AddTicks(2220),
                            Name = "Pay Flow"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 948, DateTimeKind.Local).AddTicks(3202),
                            Description = "Paypal Payments Pro",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 948, DateTimeKind.Local).AddTicks(3224),
                            Name = "Paypal Payments Pro"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.PaymentCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("PaymentCard");
                });

            modelBuilder.Entity("MM.ClientModels.PaymentGateway", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClientApicodeForMerchant")
                        .HasColumnName("ClientAPICodeForMerchant")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("ClientIdForMerchant")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("ClientPasswordForMerchant")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<decimal?>("CommisionPercentage")
                        .HasColumnType("decimal(6, 3)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("MerchantLocation")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("MerchantName")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("MerchantNumber")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("PaymentGateway");
                });

            modelBuilder.Entity("MM.ClientModels.PaymentSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApplicationInstructions")
                        .HasColumnType("varchar(2000) CHARACTER SET utf8mb4")
                        .HasMaxLength(2000);

                    b.Property<int?>("ClientPayPalConnectionModeId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultCountryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("EventsInstructions")
                        .HasColumnType("varchar(2000) CHARACTER SET utf8mb4")
                        .HasMaxLength(2000);

                    b.Property<string>("GeneralInstructions")
                        .HasColumnType("varchar(2000) CHARACTER SET utf8mb4")
                        .HasMaxLength(2000);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("PayPalAccountId")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("PayPalApipassword")
                        .HasColumnName("PayPalAPIPassword")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("PayPalApisignature")
                        .HasColumnName("PayPalAPISignature")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("PayPalApiuserName")
                        .HasColumnName("PayPalAPIUserName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("PayPalPdtidentityToken")
                        .HasColumnName("PayPalPDTIdentityToken")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("PayPalPreferredPaymentGatewayId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("PaymentSetting");
                });

            modelBuilder.Entity("MM.ClientModels.PaymentSettingAllowedCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PaymentCardId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentSettingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaymentCardId");

                    b.HasIndex("PaymentSettingId");

                    b.ToTable("PaymentSettingAllowedCard");
                });

            modelBuilder.Entity("MM.ClientModels.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasMaxLength(500);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Permission");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 950, DateTimeKind.Local).AddTicks(8499),
                            Description = "Can create new contacts, modify all existing ones  ",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 950, DateTimeKind.Local).AddTicks(9412),
                            Name = "Membership manager"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 951, DateTimeKind.Local).AddTicks(361),
                            Description = "Can create and manage all events",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 951, DateTimeKind.Local).AddTicks(384),
                            Name = "Event manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 951, DateTimeKind.Local).AddTicks(397),
                            Description = "Can manage all donations",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 951, DateTimeKind.Local).AddTicks(399),
                            Name = "Donations manager"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 951, DateTimeKind.Local).AddTicks(402),
                            Description = "Can send manual emails (e.g. newsletters)",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 951, DateTimeKind.Local).AddTicks(404),
                            Name = "Newsletter manager"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 951, DateTimeKind.Local).AddTicks(406),
                            Description = "Can modify your website pages. With this option selected, you can provide access to all pages on your site or to selected pages. When you grant access to a page, you automatically grant access to all of its child or sub pages.",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 951, DateTimeKind.Local).AddTicks(408),
                            Name = "Website editor"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.PlanCanChangeToXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("FromPlanMasterId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("ToPlanMasterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromPlanMasterId");

                    b.HasIndex("ToPlanMasterId");

                    b.ToTable("PlanCanChangeToXref");
                });

            modelBuilder.Entity("MM.ClientModels.PlanDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PlanFrequencyId")
                        .HasColumnType("int");

                    b.Property<int>("PlanMasterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("PlanFrequencyId");

                    b.HasIndex("PlanMasterId");

                    b.ToTable("PlanDetail");
                });

            modelBuilder.Entity("MM.ClientModels.PlanFrequency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("PlanFrequency");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 963, DateTimeKind.Local).AddTicks(2770),
                            Description = "Daily",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 963, DateTimeKind.Local).AddTicks(3693),
                            Name = "Daily"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 963, DateTimeKind.Local).AddTicks(4632),
                            Description = "Weekly",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 963, DateTimeKind.Local).AddTicks(4655),
                            Name = "Weekly"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 963, DateTimeKind.Local).AddTicks(4670),
                            Description = "Monthly",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 963, DateTimeKind.Local).AddTicks(4672),
                            Name = "Monthly"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 963, DateTimeKind.Local).AddTicks(4678),
                            Description = "Quarterly",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 963, DateTimeKind.Local).AddTicks(4679),
                            Name = "Quarterly"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 963, DateTimeKind.Local).AddTicks(4682),
                            Description = "Yearly",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 963, DateTimeKind.Local).AddTicks(4683),
                            Name = "Yearly"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 963, DateTimeKind.Local).AddTicks(4686),
                            Description = "Life Time",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 963, DateTimeKind.Local).AddTicks(4688),
                            Name = "Life Time"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.PlanMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("ApplyTaxSettings")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanPublicApply")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<bool?>("IsLimited")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("LimitToMemberCount")
                        .HasColumnType("int");

                    b.Property<int>("MemberCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberCategoryId");

                    b.HasIndex("PaymentMethodId");

                    b.ToTable("PlanMaster");
                });

            modelBuilder.Entity("MM.ClientModels.PromotionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(9, 3)");

                    b.Property<int?>("MemberLevelId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PromotionMasterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberLevelId");

                    b.HasIndex("MemberTypeId");

                    b.HasIndex("PromotionMasterId");

                    b.ToTable("PromotionDetail");
                });

            modelBuilder.Entity("MM.ClientModels.PromotionMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BenefitEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("BenefitStartDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("IsActive")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("PromotionMaster");
                });

            modelBuilder.Entity("MM.ClientModels.PromotionResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PromotionMasterId")
                        .HasColumnType("int");

                    b.Property<int>("PromotionResponseType")
                        .HasColumnType("int");

                    b.Property<DateTime>("ResponseDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("PromotionMasterId");

                    b.HasIndex("PromotionResponseType");

                    b.ToTable("PromotionResponse");
                });

            modelBuilder.Entity("MM.ClientModels.PromotionResponseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("PromotionResponseType");
                });

            modelBuilder.Entity("MM.ClientModels.Qualification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Qualification");
                });

            modelBuilder.Entity("MM.ClientModels.ReferralType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("ReferralType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 983, DateTimeKind.Local).AddTicks(205),
                            Description = "Google",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 983, DateTimeKind.Local).AddTicks(1149),
                            Name = "Google"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 983, DateTimeKind.Local).AddTicks(2109),
                            Description = "Facebook",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 983, DateTimeKind.Local).AddTicks(2151),
                            Name = "Facebook"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 983, DateTimeKind.Local).AddTicks(2167),
                            Description = "Twitter",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 983, DateTimeKind.Local).AddTicks(2169),
                            Name = "Twitter"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 983, DateTimeKind.Local).AddTicks(2173),
                            Description = "TV",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 983, DateTimeKind.Local).AddTicks(2174),
                            Name = "TV"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 983, DateTimeKind.Local).AddTicks(2178),
                            Description = "Friends",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 983, DateTimeKind.Local).AddTicks(2180),
                            Name = "Friends"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 983, DateTimeKind.Local).AddTicks(2183),
                            Description = "Other",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 983, DateTimeKind.Local).AddTicks(2185),
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Refund", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CommentsForPayer")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("InternalNotes")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PaymentGatewayId")
                        .HasColumnType("int");

                    b.Property<decimal>("RefundAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("RefundDate")
                        .HasColumnType("datetime");

                    b.Property<string>("RefundItem")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int?>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("PaymentGatewayId");

                    b.HasIndex("RelatedToId");

                    b.ToTable("Refund");
                });

            modelBuilder.Entity("MM.ClientModels.RelatedTo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(30) CHARACTER SET utf8mb4")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("RelatedTo");
                });

            modelBuilder.Entity("MM.ClientModels.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasMaxLength(500);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 992, DateTimeKind.Local).AddTicks(8200),
                            Description = "Select this option to remove admin access for existing administrators  ",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 992, DateTimeKind.Local).AddTicks(9128),
                            Name = "No administrative privileges"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 993, DateTimeKind.Local).AddTicks(82),
                            Description = "Grants full access to all administrative functions. Take care when granting this level of access since full admins can delete other admins and even the entire site.",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 993, DateTimeKind.Local).AddTicks(104),
                            Name = "Account administrator"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 993, DateTimeKind.Local).AddTicks(119),
                            Description = "Allows viewing of everything in the admin backend without being able to make any changes.  ",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 993, DateTimeKind.Local).AddTicks(122),
                            Name = "Account administrator (Read-only access)"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 0, 993, DateTimeKind.Local).AddTicks(127),
                            Description = "Provides administrative access to selected Wild Apricot modules. Use this option if you have dedicated personnel in charge of events, memberships, editing webpages, or managing donations. With this option selected, you can limit access to selected Functions",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 0, 993, DateTimeKind.Local).AddTicks(128),
                            Name = "Limited administrator"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.RolePermissionXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("Permissionid")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Permissionid");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissionXRef");
                });

            modelBuilder.Entity("MM.ClientModels.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("State");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 34, DateTimeKind.Local).AddTicks(8859),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 34, DateTimeKind.Local).AddTicks(9847),
                            Name = "Eastern Cape"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(894),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(917),
                            Name = "Free State"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(931),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(933),
                            Name = "Gauteng"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(937),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(939),
                            Name = "KwaZulu-Natal"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(975),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(977),
                            Name = "Limpopo"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(981),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(983),
                            Name = "Mpumalanga"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(986),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(988),
                            Name = "North West"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(992),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(993),
                            Name = "Northern Cape"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(997),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(999),
                            Name = "Western Cape"
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1002),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1004),
                            Name = "Australian Capital Territory"
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1008),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1011),
                            Name = "New South Wales"
                        },
                        new
                        {
                            Id = 12,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1014),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1016),
                            Name = "Northern Territory"
                        },
                        new
                        {
                            Id = 13,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1021),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1022),
                            Name = "Queensland"
                        },
                        new
                        {
                            Id = 14,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1026),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1028),
                            Name = "South Australia"
                        },
                        new
                        {
                            Id = 15,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1031),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1033),
                            Name = "Tasmania"
                        },
                        new
                        {
                            Id = 16,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1037),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1038),
                            Name = "Victoria"
                        },
                        new
                        {
                            Id = 17,
                            CountryId = 2,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1042),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1044),
                            Name = "Western Australia"
                        },
                        new
                        {
                            Id = 18,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1047),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1049),
                            Name = "Andaman and Nicobar Islands"
                        },
                        new
                        {
                            Id = 19,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1052),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1054),
                            Name = "Andhra Pradesh"
                        },
                        new
                        {
                            Id = 20,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1057),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1058),
                            Name = "Arunachal Pradesh"
                        },
                        new
                        {
                            Id = 21,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1061),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1063),
                            Name = "Assam"
                        },
                        new
                        {
                            Id = 22,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1067),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1068),
                            Name = "Bihar"
                        },
                        new
                        {
                            Id = 23,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1071),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1073),
                            Name = "Chandigarh"
                        },
                        new
                        {
                            Id = 24,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1076),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1078),
                            Name = "Chhattisgarh"
                        },
                        new
                        {
                            Id = 25,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1081),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1083),
                            Name = "Dadra and Nagar Haveli"
                        },
                        new
                        {
                            Id = 26,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1086),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1088),
                            Name = "Daman and Diu"
                        },
                        new
                        {
                            Id = 27,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1091),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1093),
                            Name = "Delhi"
                        },
                        new
                        {
                            Id = 28,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1096),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1098),
                            Name = "Goa"
                        },
                        new
                        {
                            Id = 29,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1102),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1103),
                            Name = "Gujarat"
                        },
                        new
                        {
                            Id = 30,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1107),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1108),
                            Name = "Haryana"
                        },
                        new
                        {
                            Id = 31,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1111),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1113),
                            Name = "Himachal Pradesh"
                        },
                        new
                        {
                            Id = 32,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1116),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1118),
                            Name = "Jammu and Kashmir"
                        },
                        new
                        {
                            Id = 33,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1121),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1123),
                            Name = "Jharkhand"
                        },
                        new
                        {
                            Id = 34,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1126),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1128),
                            Name = "Karnataka"
                        },
                        new
                        {
                            Id = 35,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1132),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1133),
                            Name = "Kerala"
                        },
                        new
                        {
                            Id = 36,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1137),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1138),
                            Name = "Ladakh"
                        },
                        new
                        {
                            Id = 37,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1141),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1143),
                            Name = "Lakshadweep"
                        },
                        new
                        {
                            Id = 38,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1148),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1149),
                            Name = "Madhya Pradesh"
                        },
                        new
                        {
                            Id = 39,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1153),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1154),
                            Name = "Maharashtra"
                        },
                        new
                        {
                            Id = 40,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1158),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1159),
                            Name = "Manipur"
                        },
                        new
                        {
                            Id = 41,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1174),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1176),
                            Name = "Meghalaya"
                        },
                        new
                        {
                            Id = 42,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1179),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1184),
                            Name = "Mizoram"
                        },
                        new
                        {
                            Id = 43,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1188),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1189),
                            Name = "Nagaland"
                        },
                        new
                        {
                            Id = 44,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1192),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1194),
                            Name = "Odisha"
                        },
                        new
                        {
                            Id = 45,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1197),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1199),
                            Name = "Puducherry"
                        },
                        new
                        {
                            Id = 46,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1202),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1204),
                            Name = "Punjab"
                        },
                        new
                        {
                            Id = 47,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1207),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1208),
                            Name = "Rajasthan"
                        },
                        new
                        {
                            Id = 48,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1212),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1213),
                            Name = "Sikkim"
                        },
                        new
                        {
                            Id = 49,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1216),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1218),
                            Name = "Tamil Nadu"
                        },
                        new
                        {
                            Id = 50,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1222),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1224),
                            Name = "Telangana"
                        },
                        new
                        {
                            Id = 51,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1227),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1229),
                            Name = "Tripura"
                        },
                        new
                        {
                            Id = 52,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1233),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1234),
                            Name = "Uttar Pradesh"
                        },
                        new
                        {
                            Id = 53,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1238),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1239),
                            Name = "Uttarakhand"
                        },
                        new
                        {
                            Id = 54,
                            CountryId = 3,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1242),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1244),
                            Name = "West Bengal"
                        },
                        new
                        {
                            Id = 55,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1247),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1249),
                            Name = "Aberdeen"
                        },
                        new
                        {
                            Id = 56,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1252),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1254),
                            Name = "Aberdeenshire"
                        },
                        new
                        {
                            Id = 57,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1257),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1259),
                            Name = "Angus"
                        },
                        new
                        {
                            Id = 58,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1262),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1264),
                            Name = "Antrim"
                        },
                        new
                        {
                            Id = 59,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1268),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1270),
                            Name = "Antrim and Newtownabbey"
                        },
                        new
                        {
                            Id = 60,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1273),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1274),
                            Name = "Ards"
                        },
                        new
                        {
                            Id = 61,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1278),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1279),
                            Name = "Ards and North Down"
                        },
                        new
                        {
                            Id = 62,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1283),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1284),
                            Name = "Argyll and Bute"
                        },
                        new
                        {
                            Id = 63,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1289),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1290),
                            Name = "Armagh City and District Council"
                        },
                        new
                        {
                            Id = 64,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1294),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1295),
                            Name = "Armagh, Banbridge and Craigavon"
                        },
                        new
                        {
                            Id = 65,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1299),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1300),
                            Name = "Ascension Island"
                        },
                        new
                        {
                            Id = 66,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1303),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1305),
                            Name = "Ballymena Borough"
                        },
                        new
                        {
                            Id = 67,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1309),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1310),
                            Name = "Ballymoney"
                        },
                        new
                        {
                            Id = 68,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1313),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1315),
                            Name = "Banbridge"
                        },
                        new
                        {
                            Id = 69,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1318),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1320),
                            Name = "Barnsley"
                        },
                        new
                        {
                            Id = 70,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1323),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1325),
                            Name = "Bath and North East Somerset"
                        },
                        new
                        {
                            Id = 71,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1328),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1330),
                            Name = "Bedford"
                        },
                        new
                        {
                            Id = 72,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1333),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1334),
                            Name = "Belfast district"
                        },
                        new
                        {
                            Id = 73,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1338),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1339),
                            Name = "Birmingham"
                        },
                        new
                        {
                            Id = 74,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1342),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1344),
                            Name = "Blackburn with Darwen"
                        },
                        new
                        {
                            Id = 75,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1349),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1350),
                            Name = "Blackpool"
                        },
                        new
                        {
                            Id = 76,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1360),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1362),
                            Name = "Blaenau Gwent County Borough"
                        },
                        new
                        {
                            Id = 77,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1365),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1367),
                            Name = "Bolton"
                        },
                        new
                        {
                            Id = 78,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1370),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1371),
                            Name = "Bournemouth"
                        },
                        new
                        {
                            Id = 79,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1375),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1376),
                            Name = "Bracknell Forest"
                        },
                        new
                        {
                            Id = 80,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1380),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1381),
                            Name = "Bradford"
                        },
                        new
                        {
                            Id = 81,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1384),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1386),
                            Name = "Bridgend County Borough"
                        },
                        new
                        {
                            Id = 82,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1389),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1391),
                            Name = "Brighton and Hove"
                        },
                        new
                        {
                            Id = 83,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1394),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1396),
                            Name = "Buckinghamshire"
                        },
                        new
                        {
                            Id = 84,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1399),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1401),
                            Name = "Bury"
                        },
                        new
                        {
                            Id = 85,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1404),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1406),
                            Name = "Caerphilly County Borough"
                        },
                        new
                        {
                            Id = 86,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1409),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1411),
                            Name = "Calderdale"
                        },
                        new
                        {
                            Id = 87,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1414),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1417),
                            Name = "Cambridgeshire"
                        },
                        new
                        {
                            Id = 88,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1420),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1422),
                            Name = "Carmarthenshire"
                        },
                        new
                        {
                            Id = 89,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1425),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1427),
                            Name = "Carrickfergus Borough Council"
                        },
                        new
                        {
                            Id = 90,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1430),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1431),
                            Name = "Castlereagh"
                        },
                        new
                        {
                            Id = 91,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1434),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1436),
                            Name = "Causeway Coast and Glens"
                        },
                        new
                        {
                            Id = 92,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1439),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1441),
                            Name = "Central Bedfordshire"
                        },
                        new
                        {
                            Id = 93,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1444),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1446),
                            Name = "Ceredigion"
                        },
                        new
                        {
                            Id = 94,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1449),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1450),
                            Name = "Cheshire East"
                        },
                        new
                        {
                            Id = 95,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1454),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1455),
                            Name = "Cheshire West and Chester"
                        },
                        new
                        {
                            Id = 96,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1458),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1460),
                            Name = "City and County of Cardiff"
                        },
                        new
                        {
                            Id = 97,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1463),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1465),
                            Name = "City and County of Swansea"
                        },
                        new
                        {
                            Id = 98,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1468),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1470),
                            Name = "City of Bristol"
                        },
                        new
                        {
                            Id = 99,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1473),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1474),
                            Name = "City of Derby"
                        },
                        new
                        {
                            Id = 100,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1479),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1480),
                            Name = "City of Kingston upon Hull"
                        },
                        new
                        {
                            Id = 101,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1483),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1485),
                            Name = "City of Leicester"
                        },
                        new
                        {
                            Id = 102,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1488),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1490),
                            Name = "City of London"
                        },
                        new
                        {
                            Id = 103,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1493),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1494),
                            Name = "City of Nottingham"
                        },
                        new
                        {
                            Id = 104,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1498),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1499),
                            Name = "City of Peterborough"
                        },
                        new
                        {
                            Id = 105,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1502),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1504),
                            Name = "City of Plymouth"
                        },
                        new
                        {
                            Id = 106,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1507),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1509),
                            Name = "City of Portsmouth"
                        },
                        new
                        {
                            Id = 107,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1513),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1514),
                            Name = "City of Southampton"
                        },
                        new
                        {
                            Id = 108,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1517),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1519),
                            Name = "City of Stoke-on-Trent"
                        },
                        new
                        {
                            Id = 109,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1523),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1524),
                            Name = "City of Sunderland"
                        },
                        new
                        {
                            Id = 110,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1528),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1529),
                            Name = "City of Westminster"
                        },
                        new
                        {
                            Id = 111,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1539),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1541),
                            Name = "City of Wolverhampton"
                        },
                        new
                        {
                            Id = 112,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1545),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1546),
                            Name = "City of York"
                        },
                        new
                        {
                            Id = 113,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1550),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1553),
                            Name = "Clackmannanshire"
                        },
                        new
                        {
                            Id = 114,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1556),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1558),
                            Name = "Coleraine Borough Council"
                        },
                        new
                        {
                            Id = 115,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1561),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1563),
                            Name = "Conwy County Borough"
                        },
                        new
                        {
                            Id = 116,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1566),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1568),
                            Name = "Cookstown District Council"
                        },
                        new
                        {
                            Id = 117,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1571),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1573),
                            Name = "Cornwall"
                        },
                        new
                        {
                            Id = 118,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1576),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1578),
                            Name = "County Durham"
                        },
                        new
                        {
                            Id = 119,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1581),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1583),
                            Name = "Coventry"
                        },
                        new
                        {
                            Id = 120,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1586),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1588),
                            Name = "Craigavon Borough Council"
                        },
                        new
                        {
                            Id = 121,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1592),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1593),
                            Name = "Cumbria"
                        },
                        new
                        {
                            Id = 122,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1597),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1598),
                            Name = "Darlington"
                        },
                        new
                        {
                            Id = 123,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1602),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1604),
                            Name = "Denbighshire"
                        },
                        new
                        {
                            Id = 124,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1607),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1609),
                            Name = "Derbyshire"
                        },
                        new
                        {
                            Id = 125,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1613),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1615),
                            Name = "Derry City and Strabane"
                        },
                        new
                        {
                            Id = 126,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1618),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1619),
                            Name = "Derry City Council"
                        },
                        new
                        {
                            Id = 127,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1623),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1624),
                            Name = "Devon"
                        },
                        new
                        {
                            Id = 128,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1648),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1651),
                            Name = "Doncaster"
                        },
                        new
                        {
                            Id = 129,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1654),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1655),
                            Name = "Dorset"
                        },
                        new
                        {
                            Id = 130,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1659),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1660),
                            Name = "Down District Council"
                        },
                        new
                        {
                            Id = 131,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1664),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1666),
                            Name = "Dudley"
                        },
                        new
                        {
                            Id = 132,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1669),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1671),
                            Name = "Dumfries and Galloway"
                        },
                        new
                        {
                            Id = 133,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1675),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1677),
                            Name = "Dundee"
                        },
                        new
                        {
                            Id = 134,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1680),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1682),
                            Name = "Dungannon and South Tyrone Borough Council"
                        },
                        new
                        {
                            Id = 135,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1685),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1687),
                            Name = "East Ayrshire"
                        },
                        new
                        {
                            Id = 136,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1691),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1693),
                            Name = "East Dunbartonshire"
                        },
                        new
                        {
                            Id = 137,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1697),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1699),
                            Name = "East Lothian"
                        },
                        new
                        {
                            Id = 138,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1703),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1704),
                            Name = "East Renfrewshire"
                        },
                        new
                        {
                            Id = 139,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1708),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1709),
                            Name = "East Riding of Yorkshire"
                        },
                        new
                        {
                            Id = 140,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1713),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1715),
                            Name = "East Sussex"
                        },
                        new
                        {
                            Id = 141,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1721),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1723),
                            Name = "Edinburgh"
                        },
                        new
                        {
                            Id = 142,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1726),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1728),
                            Name = "England"
                        },
                        new
                        {
                            Id = 143,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1731),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1733),
                            Name = "Essex"
                        },
                        new
                        {
                            Id = 144,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1737),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1738),
                            Name = "Falkirk"
                        },
                        new
                        {
                            Id = 145,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1742),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1743),
                            Name = "Fermanagh and Omagh"
                        },
                        new
                        {
                            Id = 146,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1756),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1758),
                            Name = "Fermanagh District Council"
                        },
                        new
                        {
                            Id = 147,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1761),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1763),
                            Name = "Fife"
                        },
                        new
                        {
                            Id = 148,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1767),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1769),
                            Name = "Flintshire"
                        },
                        new
                        {
                            Id = 149,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1772),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1774),
                            Name = "Gateshead"
                        },
                        new
                        {
                            Id = 150,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1777),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1779),
                            Name = "Glasgow"
                        },
                        new
                        {
                            Id = 151,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1782),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1784),
                            Name = "Gloucestershire"
                        },
                        new
                        {
                            Id = 152,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1787),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1789),
                            Name = "Gwynedd"
                        },
                        new
                        {
                            Id = 153,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1792),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1794),
                            Name = "Halton"
                        },
                        new
                        {
                            Id = 154,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1798),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1800),
                            Name = "Hampshire"
                        },
                        new
                        {
                            Id = 155,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1803),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1805),
                            Name = "Hartlepool"
                        },
                        new
                        {
                            Id = 156,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1808),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1810),
                            Name = "Herefordshire"
                        },
                        new
                        {
                            Id = 157,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1813),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1815),
                            Name = "Hertfordshire"
                        },
                        new
                        {
                            Id = 158,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1818),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1820),
                            Name = "Highland"
                        },
                        new
                        {
                            Id = 159,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1823),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1825),
                            Name = "Inverclyde"
                        },
                        new
                        {
                            Id = 160,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1828),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1830),
                            Name = "Isle of Wight"
                        },
                        new
                        {
                            Id = 161,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1833),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1835),
                            Name = "Isles of Scilly"
                        },
                        new
                        {
                            Id = 162,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1840),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1841),
                            Name = "Kent"
                        },
                        new
                        {
                            Id = 163,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1845),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1846),
                            Name = "Kirklees"
                        },
                        new
                        {
                            Id = 164,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1850),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1851),
                            Name = "Knowsley"
                        },
                        new
                        {
                            Id = 165,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1855),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1856),
                            Name = "Lancashire"
                        },
                        new
                        {
                            Id = 166,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1860),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1861),
                            Name = "Larne Borough Council"
                        },
                        new
                        {
                            Id = 167,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1864),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1866),
                            Name = "Leeds"
                        },
                        new
                        {
                            Id = 168,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1869),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1871),
                            Name = "Leicestershire"
                        },
                        new
                        {
                            Id = 169,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1874),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1876),
                            Name = "Limavady Borough Council"
                        },
                        new
                        {
                            Id = 170,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1879),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1880),
                            Name = "Lincolnshire"
                        },
                        new
                        {
                            Id = 171,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1884),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1885),
                            Name = "Lisburn and Castlereagh"
                        },
                        new
                        {
                            Id = 172,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1889),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1890),
                            Name = "Lisburn City Council"
                        },
                        new
                        {
                            Id = 173,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1893),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1895),
                            Name = "Liverpool"
                        },
                        new
                        {
                            Id = 174,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1898),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1901),
                            Name = "London Borough of Barking and Dagenham"
                        },
                        new
                        {
                            Id = 175,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1904),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1906),
                            Name = "London Borough of Barnet"
                        },
                        new
                        {
                            Id = 176,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1909),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1910),
                            Name = "London Borough of Bexley"
                        },
                        new
                        {
                            Id = 177,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1914),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1915),
                            Name = "London Borough of Brent"
                        },
                        new
                        {
                            Id = 178,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1918),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1920),
                            Name = "London Borough of Bromley"
                        },
                        new
                        {
                            Id = 179,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1923),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1925),
                            Name = "London Borough of Camden"
                        },
                        new
                        {
                            Id = 180,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1928),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1930),
                            Name = "London Borough of Croydon"
                        },
                        new
                        {
                            Id = 181,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1946),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1948),
                            Name = "London Borough of Ealing"
                        },
                        new
                        {
                            Id = 182,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1951),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1953),
                            Name = "London Borough of Enfield"
                        },
                        new
                        {
                            Id = 183,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1956),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1958),
                            Name = "London Borough of Hackney"
                        },
                        new
                        {
                            Id = 184,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1961),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1963),
                            Name = "London Borough of Hammersmith and Fulham"
                        },
                        new
                        {
                            Id = 185,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1966),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1967),
                            Name = "London Borough of Haringey"
                        },
                        new
                        {
                            Id = 186,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1970),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1972),
                            Name = "London Borough of Harrow"
                        },
                        new
                        {
                            Id = 187,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1976),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1978),
                            Name = "London Borough of Havering"
                        },
                        new
                        {
                            Id = 188,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1981),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1983),
                            Name = "London Borough of Hillingdon"
                        },
                        new
                        {
                            Id = 189,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1986),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1988),
                            Name = "London Borough of Hounslow"
                        },
                        new
                        {
                            Id = 190,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1991),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1992),
                            Name = "London Borough of Islington"
                        },
                        new
                        {
                            Id = 191,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1995),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(1997),
                            Name = "London Borough of Lambeth"
                        },
                        new
                        {
                            Id = 192,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2000),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2002),
                            Name = "London Borough of Lewisham"
                        },
                        new
                        {
                            Id = 193,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2005),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2007),
                            Name = "London Borough of Merton"
                        },
                        new
                        {
                            Id = 194,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2010),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2012),
                            Name = "London Borough of Newham"
                        },
                        new
                        {
                            Id = 195,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2015),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2016),
                            Name = "London Borough of Redbridge"
                        },
                        new
                        {
                            Id = 196,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2020),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2022),
                            Name = "London Borough of Richmond upon Thames"
                        },
                        new
                        {
                            Id = 197,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2025),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2027),
                            Name = "London Borough of Southwark"
                        },
                        new
                        {
                            Id = 198,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2030),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2032),
                            Name = "London Borough of Sutton"
                        },
                        new
                        {
                            Id = 199,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2037),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2038),
                            Name = "London Borough of Tower Hamlets"
                        },
                        new
                        {
                            Id = 200,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2042),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2043),
                            Name = "London Borough of Waltham Forest"
                        },
                        new
                        {
                            Id = 201,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2047),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2049),
                            Name = "London Borough of Wandsworth"
                        },
                        new
                        {
                            Id = 202,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2052),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2054),
                            Name = "Magherafelt District Council"
                        },
                        new
                        {
                            Id = 203,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2057),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2059),
                            Name = "Manchester"
                        },
                        new
                        {
                            Id = 204,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2063),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2065),
                            Name = "Medway"
                        },
                        new
                        {
                            Id = 205,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2068),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2070),
                            Name = "Merthyr Tydfil County Borough"
                        },
                        new
                        {
                            Id = 206,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2073),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2075),
                            Name = "Metropolitan Borough of Wigan"
                        },
                        new
                        {
                            Id = 207,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2078),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2079),
                            Name = "Mid and East Antrim"
                        },
                        new
                        {
                            Id = 208,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2083),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2084),
                            Name = "Mid Ulster"
                        },
                        new
                        {
                            Id = 209,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2088),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2090),
                            Name = "Middlesbrough"
                        },
                        new
                        {
                            Id = 210,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2093),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2095),
                            Name = "Midlothian"
                        },
                        new
                        {
                            Id = 211,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2098),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2101),
                            Name = "Milton Keynes"
                        },
                        new
                        {
                            Id = 212,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2105),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2106),
                            Name = "Monmouthshire"
                        },
                        new
                        {
                            Id = 213,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2109),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2111),
                            Name = "Moray"
                        },
                        new
                        {
                            Id = 214,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2114),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2116),
                            Name = "Moyle District Council"
                        },
                        new
                        {
                            Id = 215,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2119),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2121),
                            Name = "Neath Port Talbot County Borough"
                        },
                        new
                        {
                            Id = 216,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2124),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2125),
                            Name = "Newcastle upon Tyne"
                        },
                        new
                        {
                            Id = 217,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2135),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2137),
                            Name = "Newport"
                        },
                        new
                        {
                            Id = 218,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2141),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2142),
                            Name = "Newry and Mourne District Council"
                        },
                        new
                        {
                            Id = 219,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2145),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2147),
                            Name = "Newry, Mourne and Down"
                        },
                        new
                        {
                            Id = 220,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2151),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2152),
                            Name = "Newtownabbey Borough Council"
                        },
                        new
                        {
                            Id = 221,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2156),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2158),
                            Name = "Norfolk"
                        },
                        new
                        {
                            Id = 222,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2161),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2163),
                            Name = "North Ayrshire"
                        },
                        new
                        {
                            Id = 223,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2166),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2167),
                            Name = "North Down Borough Council"
                        },
                        new
                        {
                            Id = 224,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2172),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2174),
                            Name = "North East Lincolnshire"
                        },
                        new
                        {
                            Id = 225,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2177),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2179),
                            Name = "North Lanarkshire"
                        },
                        new
                        {
                            Id = 226,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2182),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2184),
                            Name = "North Lincolnshire"
                        },
                        new
                        {
                            Id = 227,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2187),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2188),
                            Name = "North Somerset"
                        },
                        new
                        {
                            Id = 228,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2193),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2194),
                            Name = "North Tyneside"
                        },
                        new
                        {
                            Id = 229,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2197),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2199),
                            Name = "North Yorkshire"
                        },
                        new
                        {
                            Id = 230,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2202),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2204),
                            Name = "Northamptonshire"
                        },
                        new
                        {
                            Id = 231,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2207),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2209),
                            Name = "Northern Ireland"
                        },
                        new
                        {
                            Id = 232,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2212),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2213),
                            Name = "Northumberland"
                        },
                        new
                        {
                            Id = 233,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2217),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2219),
                            Name = "Nottinghamshire"
                        },
                        new
                        {
                            Id = 234,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2222),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2223),
                            Name = "Oldham"
                        },
                        new
                        {
                            Id = 235,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2226),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2228),
                            Name = "Omagh District Council"
                        },
                        new
                        {
                            Id = 236,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2232),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2234),
                            Name = "Orkney Islands"
                        },
                        new
                        {
                            Id = 237,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2238),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2239),
                            Name = "Outer Hebrides"
                        },
                        new
                        {
                            Id = 238,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2242),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2244),
                            Name = "Oxfordshire"
                        },
                        new
                        {
                            Id = 239,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2247),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2249),
                            Name = "Pembrokeshire"
                        },
                        new
                        {
                            Id = 240,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2252),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2254),
                            Name = "Perth and Kinross"
                        },
                        new
                        {
                            Id = 241,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2257),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2258),
                            Name = "Poole"
                        },
                        new
                        {
                            Id = 242,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2262),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2263),
                            Name = "Powys"
                        },
                        new
                        {
                            Id = 243,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2267),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2268),
                            Name = "Reading"
                        },
                        new
                        {
                            Id = 244,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2272),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2273),
                            Name = "Redcar and Cleveland"
                        },
                        new
                        {
                            Id = 245,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2277),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2278),
                            Name = "Renfrewshire"
                        },
                        new
                        {
                            Id = 246,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2282),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2283),
                            Name = "Rhondda Cynon Taf"
                        },
                        new
                        {
                            Id = 247,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2286),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2288),
                            Name = "Rochdale"
                        },
                        new
                        {
                            Id = 248,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2291),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2293),
                            Name = "Rotherham"
                        },
                        new
                        {
                            Id = 249,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2297),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2299),
                            Name = "Royal Borough of Greenwich"
                        },
                        new
                        {
                            Id = 250,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2302),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2303),
                            Name = "Royal Borough of Kensington and Chelsea"
                        },
                        new
                        {
                            Id = 251,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2306),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2308),
                            Name = "Royal Borough of Kingston upon Thames"
                        },
                        new
                        {
                            Id = 252,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2318),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2319),
                            Name = "Rutland"
                        },
                        new
                        {
                            Id = 253,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2323),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2324),
                            Name = "Saint Helena"
                        },
                        new
                        {
                            Id = 254,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2327),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2329),
                            Name = "Salford"
                        },
                        new
                        {
                            Id = 255,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2332),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2334),
                            Name = "Sandwell"
                        },
                        new
                        {
                            Id = 256,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2337),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2339),
                            Name = "Scotland"
                        },
                        new
                        {
                            Id = 257,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2342),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2344),
                            Name = "Scottish Borders"
                        },
                        new
                        {
                            Id = 258,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2347),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2348),
                            Name = "Sefton"
                        },
                        new
                        {
                            Id = 259,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2352),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2353),
                            Name = "Sheffield"
                        },
                        new
                        {
                            Id = 260,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2356),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2358),
                            Name = "Shetland Islands"
                        },
                        new
                        {
                            Id = 261,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2362),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2364),
                            Name = "Shropshire"
                        },
                        new
                        {
                            Id = 262,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2367),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2368),
                            Name = "Slough"
                        },
                        new
                        {
                            Id = 263,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2372),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2373),
                            Name = "Solihull"
                        },
                        new
                        {
                            Id = 264,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2376),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2378),
                            Name = "Somerset"
                        },
                        new
                        {
                            Id = 265,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2381),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2383),
                            Name = "South Ayrshire"
                        },
                        new
                        {
                            Id = 266,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2386),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2387),
                            Name = "South Gloucestershire"
                        },
                        new
                        {
                            Id = 267,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2391),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2392),
                            Name = "South Lanarkshire"
                        },
                        new
                        {
                            Id = 268,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2396),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2397),
                            Name = "South Tyneside"
                        },
                        new
                        {
                            Id = 269,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2400),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2402),
                            Name = "Southend-on-Sea"
                        },
                        new
                        {
                            Id = 270,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2405),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2407),
                            Name = "St Helens"
                        },
                        new
                        {
                            Id = 271,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2410),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2412),
                            Name = "Staffordshire"
                        },
                        new
                        {
                            Id = 272,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2415),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2416),
                            Name = "Stirling"
                        },
                        new
                        {
                            Id = 273,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2420),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2421),
                            Name = "Stockport"
                        },
                        new
                        {
                            Id = 274,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2425),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2427),
                            Name = "Stockton-on-Tees"
                        },
                        new
                        {
                            Id = 275,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2432),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2433),
                            Name = "Strabane District Council"
                        },
                        new
                        {
                            Id = 276,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2438),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2440),
                            Name = "Suffolk"
                        },
                        new
                        {
                            Id = 277,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2443),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2445),
                            Name = "Surrey"
                        },
                        new
                        {
                            Id = 278,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2449),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2451),
                            Name = "Swindon"
                        },
                        new
                        {
                            Id = 279,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2454),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2456),
                            Name = "Tameside"
                        },
                        new
                        {
                            Id = 280,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2460),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2462),
                            Name = "Telford and Wrekin"
                        },
                        new
                        {
                            Id = 281,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2465),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2467),
                            Name = "Thurrock"
                        },
                        new
                        {
                            Id = 282,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2471),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2473),
                            Name = "Torbay"
                        },
                        new
                        {
                            Id = 283,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2476),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2478),
                            Name = "Torfaen"
                        },
                        new
                        {
                            Id = 284,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2482),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2484),
                            Name = "Trafford"
                        },
                        new
                        {
                            Id = 285,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2488),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2490),
                            Name = "United Kingdom"
                        },
                        new
                        {
                            Id = 286,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2495),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2497),
                            Name = "Vale of Glamorgan"
                        },
                        new
                        {
                            Id = 287,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2507),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2509),
                            Name = "Wakefield"
                        },
                        new
                        {
                            Id = 288,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2512),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2514),
                            Name = "Wales"
                        },
                        new
                        {
                            Id = 289,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2517),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2518),
                            Name = "Walsall"
                        },
                        new
                        {
                            Id = 290,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2521),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2523),
                            Name = "Warrington"
                        },
                        new
                        {
                            Id = 291,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2526),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2528),
                            Name = "Warwickshire"
                        },
                        new
                        {
                            Id = 292,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2531),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2533),
                            Name = "West Berkshire"
                        },
                        new
                        {
                            Id = 293,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2536),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2538),
                            Name = "West Dunbartonshire"
                        },
                        new
                        {
                            Id = 294,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2541),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2543),
                            Name = "West Lothian"
                        },
                        new
                        {
                            Id = 295,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2546),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2547),
                            Name = "West Sussex"
                        },
                        new
                        {
                            Id = 296,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2550),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2552),
                            Name = "Wiltshire"
                        },
                        new
                        {
                            Id = 297,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2555),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2557),
                            Name = "Windsor and Maidenhead"
                        },
                        new
                        {
                            Id = 298,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2560),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2562),
                            Name = "Wirral"
                        },
                        new
                        {
                            Id = 299,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2566),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2567),
                            Name = "Wokingham"
                        },
                        new
                        {
                            Id = 300,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2570),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2572),
                            Name = "Worcestershire"
                        },
                        new
                        {
                            Id = 301,
                            CountryId = 4,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2575),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2577),
                            Name = "Wrexham County Borough"
                        },
                        new
                        {
                            Id = 302,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2580),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2581),
                            Name = "Alabama"
                        },
                        new
                        {
                            Id = 303,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2585),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2586),
                            Name = "Alaska"
                        },
                        new
                        {
                            Id = 304,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2589),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2591),
                            Name = "American Samoa"
                        },
                        new
                        {
                            Id = 305,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2594),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2596),
                            Name = "Arizona"
                        },
                        new
                        {
                            Id = 306,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2599),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2600),
                            Name = "Arkansas"
                        },
                        new
                        {
                            Id = 307,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2604),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2605),
                            Name = "Baker Island"
                        },
                        new
                        {
                            Id = 308,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2608),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2610),
                            Name = "California"
                        },
                        new
                        {
                            Id = 309,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2613),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2615),
                            Name = "Colorado"
                        },
                        new
                        {
                            Id = 310,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2618),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2619),
                            Name = "Connecticut"
                        },
                        new
                        {
                            Id = 311,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2623),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2625),
                            Name = "Delaware"
                        },
                        new
                        {
                            Id = 312,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2628),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2630),
                            Name = "District of Columbia"
                        },
                        new
                        {
                            Id = 313,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2633),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2635),
                            Name = "Florida"
                        },
                        new
                        {
                            Id = 314,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2638),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2639),
                            Name = "Georgia"
                        },
                        new
                        {
                            Id = 315,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2642),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2644),
                            Name = "Guam"
                        },
                        new
                        {
                            Id = 316,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2647),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2649),
                            Name = "Hawaii"
                        },
                        new
                        {
                            Id = 317,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2652),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2653),
                            Name = "Howland Island"
                        },
                        new
                        {
                            Id = 318,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2657),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2658),
                            Name = "Idaho"
                        },
                        new
                        {
                            Id = 319,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2661),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2663),
                            Name = "Illinois"
                        },
                        new
                        {
                            Id = 320,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2666),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2668),
                            Name = "Indiana"
                        },
                        new
                        {
                            Id = 321,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2671),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2673),
                            Name = "Iowa"
                        },
                        new
                        {
                            Id = 322,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2683),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2685),
                            Name = "Jarvis Island"
                        },
                        new
                        {
                            Id = 323,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2688),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2690),
                            Name = "Johnston Atoll"
                        },
                        new
                        {
                            Id = 324,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2693),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2695),
                            Name = "Kansas"
                        },
                        new
                        {
                            Id = 325,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2698),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2700),
                            Name = "Kentucky"
                        },
                        new
                        {
                            Id = 326,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2703),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2705),
                            Name = "Kingman Reef"
                        },
                        new
                        {
                            Id = 327,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2708),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2710),
                            Name = "Louisiana"
                        },
                        new
                        {
                            Id = 328,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2713),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2715),
                            Name = "Maine"
                        },
                        new
                        {
                            Id = 329,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2718),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2720),
                            Name = "Maryland"
                        },
                        new
                        {
                            Id = 330,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2723),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2724),
                            Name = "Massachusetts"
                        },
                        new
                        {
                            Id = 331,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2728),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2729),
                            Name = "Michigan"
                        },
                        new
                        {
                            Id = 332,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2732),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2734),
                            Name = "Midway Atoll"
                        },
                        new
                        {
                            Id = 333,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2737),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2739),
                            Name = "Minnesota"
                        },
                        new
                        {
                            Id = 334,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2742),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2743),
                            Name = "Mississippi"
                        },
                        new
                        {
                            Id = 335,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2747),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2748),
                            Name = "Missouri"
                        },
                        new
                        {
                            Id = 336,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2752),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2754),
                            Name = "Montana"
                        },
                        new
                        {
                            Id = 337,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2757),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2759),
                            Name = "Navassa Island"
                        },
                        new
                        {
                            Id = 338,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2762),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2763),
                            Name = "Nebraska"
                        },
                        new
                        {
                            Id = 339,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2767),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2768),
                            Name = "Nevada"
                        },
                        new
                        {
                            Id = 340,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2771),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2773),
                            Name = "New Hampshire"
                        },
                        new
                        {
                            Id = 341,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2776),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2778),
                            Name = "New Jersey"
                        },
                        new
                        {
                            Id = 342,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2781),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2783),
                            Name = "New Mexico"
                        },
                        new
                        {
                            Id = 343,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2786),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2787),
                            Name = "New York"
                        },
                        new
                        {
                            Id = 344,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2790),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2792),
                            Name = "North Carolina"
                        },
                        new
                        {
                            Id = 345,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2796),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2798),
                            Name = "North Dakota"
                        },
                        new
                        {
                            Id = 346,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2801),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2802),
                            Name = "Northern Mariana Islands"
                        },
                        new
                        {
                            Id = 347,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2806),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2807),
                            Name = "Ohio"
                        },
                        new
                        {
                            Id = 348,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2811),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2813),
                            Name = "Oklahoma"
                        },
                        new
                        {
                            Id = 349,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2816),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2818),
                            Name = "Oregon"
                        },
                        new
                        {
                            Id = 350,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2821),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2823),
                            Name = "Palmyra Atoll"
                        },
                        new
                        {
                            Id = 351,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2826),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2828),
                            Name = "Pennsylvania"
                        },
                        new
                        {
                            Id = 352,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2831),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2833),
                            Name = "Puerto Rico"
                        },
                        new
                        {
                            Id = 353,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2836),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2838),
                            Name = "Rhode Island"
                        },
                        new
                        {
                            Id = 354,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2841),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2842),
                            Name = "South Carolina"
                        },
                        new
                        {
                            Id = 355,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2846),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2847),
                            Name = "South Dakota"
                        },
                        new
                        {
                            Id = 356,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2851),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2852),
                            Name = "Tennessee"
                        },
                        new
                        {
                            Id = 357,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2864),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2866),
                            Name = "Texas"
                        },
                        new
                        {
                            Id = 358,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2870),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2872),
                            Name = "United States Minor Outlying Islands"
                        },
                        new
                        {
                            Id = 359,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2875),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2877),
                            Name = "United States Virgin Islands"
                        },
                        new
                        {
                            Id = 360,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2884),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2886),
                            Name = "Utah"
                        },
                        new
                        {
                            Id = 361,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2890),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2891),
                            Name = "Vermont"
                        },
                        new
                        {
                            Id = 362,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2895),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2897),
                            Name = "Virginia"
                        },
                        new
                        {
                            Id = 363,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2900),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2901),
                            Name = "Wake Island"
                        },
                        new
                        {
                            Id = 364,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2905),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2906),
                            Name = "Washington"
                        },
                        new
                        {
                            Id = 365,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2909),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2911),
                            Name = "West Virginia"
                        },
                        new
                        {
                            Id = 366,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2914),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2916),
                            Name = "Wisconsin"
                        },
                        new
                        {
                            Id = 367,
                            CountryId = 5,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2919),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 35, DateTimeKind.Local).AddTicks(2921),
                            Name = "Wyoming"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("RelatedRecordId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("MM.ClientModels.Tax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Tax");
                });

            modelBuilder.Entity("MM.ClientModels.TaxPolicy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("TaxPolicy");
                });

            modelBuilder.Entity("MM.ClientModels.TaxScope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("TaxScopeCode")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("TaxScope");
                });

            modelBuilder.Entity("MM.ClientModels.Theme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("ThemeNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Theme");
                });

            modelBuilder.Entity("MM.ClientModels.TimeFormat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("TimeFormat");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 44, DateTimeKind.Local).AddTicks(7103),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 44, DateTimeKind.Local).AddTicks(8036),
                            Name = "12:00 AM/PM"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 44, DateTimeKind.Local).AddTicks(8971),
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 44, DateTimeKind.Local).AddTicks(8995),
                            Name = "24 Hours"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.Title", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Title");

                    b.HasData(
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 58, DateTimeKind.Local).AddTicks(2037),
                            Description = "Mr",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 58, DateTimeKind.Local).AddTicks(2954),
                            Name = "Mr"
                        },
                        new
                        {
                            Id = 20,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 58, DateTimeKind.Local).AddTicks(3883),
                            Description = "Mrs",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 58, DateTimeKind.Local).AddTicks(3904),
                            Name = "Mrs"
                        },
                        new
                        {
                            Id = 30,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 58, DateTimeKind.Local).AddTicks(3920),
                            Description = "Ms",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 58, DateTimeKind.Local).AddTicks(3922),
                            Name = "Ms"
                        },
                        new
                        {
                            Id = 40,
                            CreatedOn = new DateTime(2020, 7, 21, 23, 33, 1, 58, DateTimeKind.Local).AddTicks(3925),
                            Description = "Dr",
                            ModifiedOn = new DateTime(2020, 7, 21, 23, 33, 1, 58, DateTimeKind.Local).AddTicks(3927),
                            Name = "Dr"
                        });
                });

            modelBuilder.Entity("MM.ClientModels.UserLoginAudit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("LoginTime")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LogoutTime")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserLoginAudit");
                });

            modelBuilder.Entity("MM.ClientModels.UserRoleXref", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoleXRef");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Value")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("MM.ClientModels.Address", b =>
                {
                    b.HasOne("MM.ClientModels.AddressType", "AddressType")
                        .WithMany("Address")
                        .HasForeignKey("AddressTypeId")
                        .HasConstraintName("FK_Address_AddressType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.City", "City")
                        .WithMany("Address")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_Address_City");

                    b.HasOne("MM.ClientModels.Country", "Country")
                        .WithMany("Address")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_Address_Country")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.State", "State")
                        .WithMany("Address")
                        .HasForeignKey("StateId")
                        .HasConstraintName("FK_Address_State")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.BankingDetail", b =>
                {
                    b.HasOne("MM.ClientModels.AccountType", "AccountType")
                        .WithMany("BankingDetail")
                        .HasForeignKey("AccountTypeId")
                        .HasConstraintName("FK_BankingDetail_AccountType")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.Billing", b =>
                {
                    b.HasOne("MM.ClientModels.Invoice", "Invoice")
                        .WithMany("Billing")
                        .HasForeignKey("InvoiceId")
                        .HasConstraintName("FK_Payment_Invoice");

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("Billing")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_Payment_Member")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PaymentGateway", "PaymentGateway")
                        .WithMany("Billing")
                        .HasForeignKey("PaymentGatewayId")
                        .HasConstraintName("FK_Payment_PaymentGateway")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("Billing")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_Billing_RelatedTo")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.BillingCommunication", b =>
                {
                    b.HasOne("MM.ClientModels.Billing", "Billing")
                        .WithOne("BillingCommunication")
                        .HasForeignKey("MM.ClientModels.BillingCommunication", "Id")
                        .HasConstraintName("FK_PaymentCommunication_Payment")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.City", b =>
                {
                    b.HasOne("MM.ClientModels.State", "State")
                        .WithMany("City")
                        .HasForeignKey("StateId")
                        .HasConstraintName("FK_City_State");
                });

            modelBuilder.Entity("MM.ClientModels.ClientOrganization", b =>
                {
                    b.HasOne("MM.ClientModels.ClientTimeZone", "ClientTimeZone")
                        .WithMany("Client")
                        .HasForeignKey("ClientTimeZoneId")
                        .HasConstraintName("FK_Client_TimeZone");

                    b.HasOne("MM.ClientModels.Currency", "Currency")
                        .WithMany("Client")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_Client_Currency");

                    b.HasOne("MM.ClientModels.DateSetting", "DateSetting")
                        .WithMany("Client")
                        .HasForeignKey("DateSettingId")
                        .HasConstraintName("FK_Client_DateSetting");

                    b.HasOne("MM.ClientModels.TimeFormat", "TimeFormat")
                        .WithMany("Client")
                        .HasForeignKey("TimeFormatId")
                        .HasConstraintName("FK_Client_TimeFormat");
                });

            modelBuilder.Entity("MM.ClientModels.ClientPlanHistory", b =>
                {
                    b.HasOne("MM.ClientModels.ClientUser", "BillingUser")
                        .WithMany("ClientPlanHistory")
                        .HasForeignKey("BillingUserId")
                        .HasConstraintName("FK_ClientPlanHistory_User")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.ClientUser", b =>
                {
                    b.HasOne("MM.ClientModels.Designation", "Designation")
                        .WithMany("User")
                        .HasForeignKey("DesignationId")
                        .HasConstraintName("FK_User_Designation");

                    b.HasOne("MM.ClientModels.Gender", "Gender")
                        .WithMany("User")
                        .HasForeignKey("GenderId")
                        .HasConstraintName("FK_User_Gender")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.ReferralType", "ReferralType")
                        .WithMany("User")
                        .HasForeignKey("ReferralTypeId")
                        .HasConstraintName("FK_User_ReferralType");

                    b.HasOne("MM.ClientModels.Role", "Role")
                        .WithMany("User")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_User_Role")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Title", "Title")
                        .WithMany("User")
                        .HasForeignKey("TitleId")
                        .HasConstraintName("FK_User_Title")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.CommunicationPreference", b =>
                {
                    b.HasOne("MM.ClientModels.CommunicationType", "CommunicationType")
                        .WithMany("CommunicationPreference")
                        .HasForeignKey("CommunicationTypeId")
                        .HasConstraintName("FK_CommunicationPreference_CommunicationType")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.Cpd", b =>
                {
                    b.HasOne("MM.ClientModels.ClientUser", "CpdawardedBy")
                        .WithMany("Cpd")
                        .HasForeignKey("CpdawardedById")
                        .HasConstraintName("FK_CPD_User")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("Cpd")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_CPD_Member")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("Cpd")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_CPD_RelatedTo")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberCategorySetUp", b =>
                {
                    b.HasOne("MM.ClientModels.MemberCategory", "MemberCategory")
                        .WithMany("CpdmemberCategorySetUp")
                        .HasForeignKey("MemberCategoryId")
                        .HasConstraintName("FK_CPDMemberCategorySetUp_MemberCategory");

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("CpdmemberCategorySetUp")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_CPDMemberCategorySetUp_RelatedTo")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberLevelSetUp", b =>
                {
                    b.HasOne("MM.ClientModels.MemberLevel", "MemberLevel")
                        .WithMany("CpdmemberLevelSetUp")
                        .HasForeignKey("MemberLevelId")
                        .HasConstraintName("FK_CPDMemberLevelSetUp_MemberLevel");

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("CpdmemberLevelSetUp")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_CPDMemberLevelSetUp_RelatedTo")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberTeamSetUp", b =>
                {
                    b.HasOne("MM.ClientModels.MemberTeam", "MemberTeam")
                        .WithMany("CpdmemberTeamSetUp")
                        .HasForeignKey("MemberTeamId")
                        .HasConstraintName("FK_CPDMemberTeamSetUp_MemberTeam");

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("CpdmemberTeamSetUp")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_CPDMemberTeamSetUp_RelatedTo")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.CpdmemberTypeSetUp", b =>
                {
                    b.HasOne("MM.ClientModels.MemberType", "MemberType")
                        .WithMany("CpdmemberTypeSetUp")
                        .HasForeignKey("MemberTypeId")
                        .HasConstraintName("FK_CPDMemberTypeSetUp_MemberType");

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("CpdmemberTypeSetUp")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_CPDMemberTypeSetUp_RelatedTo")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.Donation", b =>
                {
                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("Donation")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_Donation_Member")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PromotionDetail", "PromotionDetail")
                        .WithMany("Donation")
                        .HasForeignKey("PromotionDetailId")
                        .HasConstraintName("FK_Donation_PromotionDetail");
                });

            modelBuilder.Entity("MM.ClientModels.EmailCcrule", b =>
                {
                    b.HasOne("MM.ClientModels.EmailType", "EmailType")
                        .WithMany("EmailCcrule")
                        .HasForeignKey("EmailTypeId")
                        .HasConstraintName("FK_EmailCCRule_EmailType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Role", "Role")
                        .WithMany("EmailCcrule")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_EmailCCRule_Role")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EmailTemplateContent", b =>
                {
                    b.HasOne("MM.ClientModels.EmailTemplateName", "EmailTemplateName")
                        .WithMany("EmailTemplateContent")
                        .HasForeignKey("EmailTemplateNameId")
                        .HasConstraintName("FK_EmailTemplateContent_EmailTemplateName")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EquipmentCount", b =>
                {
                    b.HasOne("MM.ClientModels.Equipment", "Equipment")
                        .WithMany("EquipmentCount")
                        .HasForeignKey("EquipmentId")
                        .HasConstraintName("FK_EquipmentCount_Equipment")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.Event", b =>
                {
                    b.HasOne("MM.ClientModels.Address", "Address")
                        .WithMany("Event")
                        .HasForeignKey("AddressId")
                        .HasConstraintName("FK_Event_Address")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.ClientUser", "Organizer")
                        .WithMany("Event")
                        .HasForeignKey("OrganizerId")
                        .HasConstraintName("FK_Event_User")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.ClientTimeZone", "TimeZone")
                        .WithMany("Event")
                        .HasForeignKey("TimeZoneId")
                        .HasConstraintName("FK_Event_TimeZone")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventAccess", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventAccess")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventAccess_Event")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventAttendance", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventAttendance")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventAttendance_Event")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("EventAttendance")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_EventAttendance_Member")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventCommunication", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventCommunication")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventCommunication_Event")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventEquipment", b =>
                {
                    b.HasOne("MM.ClientModels.Equipment", "Equipment")
                        .WithMany("EventEquipment")
                        .HasForeignKey("EquipmentId")
                        .HasConstraintName("FK_EventEquipmentRequirement_Equipment")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventEquipment")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventEquipmentRequirement_Event")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventMinute", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventMinute")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventMinute_Event")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.EventMinuteStatus", "MinuteStatus")
                        .WithMany("EventMinute")
                        .HasForeignKey("MinuteStatusId")
                        .HasConstraintName("FK_EventMinute_EventMinuteStatus")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventPreRequisiteEvent", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventPreRequisiteEventEvent")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventPreRequisiteEvent_Event")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Event", "PreRequisiteEvent")
                        .WithMany("EventPreRequisiteEventPreRequisiteEvent")
                        .HasForeignKey("PreRequisiteEventId")
                        .HasConstraintName("FK_EventPreRequisiteEvent_PreRequisiteEventId_Event")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventRegistration", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventRegistration")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventRegistration_Event")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.EventResponseType", "EventResponseType")
                        .WithMany("EventRegistration")
                        .HasForeignKey("EventResponseTypeId")
                        .HasConstraintName("FK_EventRegistration_EventResponseType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("EventRegistration")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_EventRegistration_Member")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventRestrictionList", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventRestrictionList")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventRestrictionList_Event")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.MemberLevel", "MemberLevel")
                        .WithMany("EventRestrictionList")
                        .HasForeignKey("MemberLevelId")
                        .HasConstraintName("FK_EventRestrictionList_MemberLevel");

                    b.HasOne("MM.ClientModels.MemberTeam", "MemberTeam")
                        .WithMany("EventRestrictionList")
                        .HasForeignKey("MemberTeamId")
                        .HasConstraintName("FK_EventRestrictionList_MemberTeam");
                });

            modelBuilder.Entity("MM.ClientModels.EventRole", b =>
                {
                    b.HasOne("MM.ClientModels.Event", "Event")
                        .WithMany("EventRole")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventRole_Event")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.EventRoleUserXref", b =>
                {
                    b.HasOne("MM.ClientModels.EventRole", "EventRole")
                        .WithMany("EventRoleUserXref")
                        .HasForeignKey("EventRoleId")
                        .HasConstraintName("FK_EventRoleUserXRef_EventRole")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.ClientUser", "User")
                        .WithMany("EventRoleUserXref")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_EventRoleUserXRef_User")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.Invoice", b =>
                {
                    b.HasOne("MM.ClientModels.InvoiceStatus", "InvoiceStatus")
                        .WithMany("Invoice")
                        .HasForeignKey("InvoiceStatusId")
                        .HasConstraintName("FK_Invoice_InvoiceStatus")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("Invoice")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_Invoice_Member")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PaymentGateway", "PaymentGateway")
                        .WithMany("Invoice")
                        .HasForeignKey("PaymentGatewayId")
                        .HasConstraintName("FK_Invoice_PaymentGateway")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("Invoice")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_Invoice_RelatedTo");
                });

            modelBuilder.Entity("MM.ClientModels.LandingPage", b =>
                {
                    b.HasOne("MM.ClientModels.MemberType", "MemberType")
                        .WithMany("LandingPage")
                        .HasForeignKey("MemberTypeId")
                        .HasConstraintName("FK_LandingPage_MemberType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Page", "Page")
                        .WithMany("LandingPage")
                        .HasForeignKey("PageId")
                        .HasConstraintName("FK_LandingPage_Page")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.MarketingGroupXref", b =>
                {
                    b.HasOne("MM.ClientModels.MarketingGroup", "MarketingGroup")
                        .WithMany("MarketingGroupXref")
                        .HasForeignKey("MarketingGroupId")
                        .HasConstraintName("FK_MarketingGroupXRef_MarketingGroup")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MarketingGroupXref")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MarketingGroupXRef_Member")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.MarketingProfileXref", b =>
                {
                    b.HasOne("MM.ClientModels.MarketingProfile", "MarketingProfile")
                        .WithMany("MarketingProfileXref")
                        .HasForeignKey("MarketingProfileId")
                        .HasConstraintName("FK_MarketingProfileXRef_MarketingProfile")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MarketingProfileXref")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MarketingProfileXRef_Member")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.Member", b =>
                {
                    b.HasOne("MM.ClientModels.Gender", "Gender")
                        .WithMany("Member")
                        .HasForeignKey("GenderId")
                        .HasConstraintName("FK_Member_Gender")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.MemberBranch", "MemberBranch")
                        .WithMany("Member")
                        .HasForeignKey("MemberBranchId")
                        .HasConstraintName("FK_Member_MemberBranch");

                    b.HasOne("MM.ClientModels.MemberLevel", "MemberLevel")
                        .WithMany("Member")
                        .HasForeignKey("MemberLevelId")
                        .HasConstraintName("FK_Member_MemberLevel");

                    b.HasOne("MM.ClientModels.MemberStatus", "MemberStatus")
                        .WithMany("Member")
                        .HasForeignKey("MemberStatusId")
                        .HasConstraintName("FK_Member_MemberStatus");

                    b.HasOne("MM.ClientModels.MemberTeam", "MemberTeam")
                        .WithMany("Member")
                        .HasForeignKey("MemberTeamId")
                        .HasConstraintName("FK_Member_MemberTeam");

                    b.HasOne("MM.ClientModels.MemberType", "MemberType")
                        .WithMany("Member")
                        .HasForeignKey("MemberTypeId")
                        .HasConstraintName("FK_Member_MemberType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Organization", "Organization")
                        .WithMany("Member")
                        .HasForeignKey("OrganizationId")
                        .HasConstraintName("FK_Member_Organization");

                    b.HasOne("MM.ClientModels.OrganizationStructure", "OrganizationStructure")
                        .WithMany("Member")
                        .HasForeignKey("OrganizationStructureId")
                        .HasConstraintName("FK_Member_OrganizationStructure");

                    b.HasOne("MM.ClientModels.ReferralType", "ReferralType")
                        .WithMany("Member")
                        .HasForeignKey("ReferralTypeId")
                        .HasConstraintName("FK_Member_ReferralType");

                    b.HasOne("MM.ClientModels.Title", "Title")
                        .WithMany("Member")
                        .HasForeignKey("TitleId")
                        .HasConstraintName("FK_Member_Title")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.MemberAddress", b =>
                {
                    b.HasOne("MM.ClientModels.AddressType", "AddressType")
                        .WithMany("MemberAddress")
                        .HasForeignKey("AddressTypeId")
                        .HasConstraintName("FK_MemberAddress_AddressType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.MemberBranch", "Branch")
                        .WithMany("MemberAddress")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_MemberAddress_MemberBranch");

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MemberAddress")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MemberAddress_Member");

                    b.HasOne("MM.ClientModels.Organization", "Organization")
                        .WithMany("MemberAddress")
                        .HasForeignKey("OrganizationId")
                        .HasConstraintName("FK_MemberAddress_Organization");
                });

            modelBuilder.Entity("MM.ClientModels.MemberAffliationXref", b =>
                {
                    b.HasOne("MM.ClientModels.Affliation", "Affliation")
                        .WithMany("MemberAffliationXref")
                        .HasForeignKey("AffliationId")
                        .HasConstraintName("FK_MemberAffliationXRef_Affliation");

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MemberAffliationXref")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MemberAffliationXRef_Member");
                });

            modelBuilder.Entity("MM.ClientModels.MemberBankingDetail", b =>
                {
                    b.HasOne("MM.ClientModels.AccountType", "AccountType")
                        .WithMany("MemberBankingDetail")
                        .HasForeignKey("AccountTypeId")
                        .HasConstraintName("FK_MemberBankingDetail_AccountType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MemberBankingDetail")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MemberBankingDetail_Member")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.MemberBranch", b =>
                {
                    b.HasOne("MM.ClientModels.Organization", "Organization")
                        .WithMany("MemberBranch")
                        .HasForeignKey("OrganizationId")
                        .HasConstraintName("FK_MemberBranch_Organization")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.MemberCommunicationPreference", b =>
                {
                    b.HasOne("MM.ClientModels.CommunicationType", "CommunicationType")
                        .WithMany("MemberCommunicationPreference")
                        .HasForeignKey("CommunicationTypeId")
                        .HasConstraintName("FK_MemberCommunicationPreference_CommunicationType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MemberCommunicationPreference")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MemberCommunicationPreference_Member")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.MemberFile", b =>
                {
                    b.HasOne("MM.ClientModels.FileType", "FileType")
                        .WithMany("MemberFile")
                        .HasForeignKey("FileTypeId")
                        .HasConstraintName("FK_MemberFile_FileType")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MemberFile")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MemberFile_Member")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.MemberPlanHistory", b =>
                {
                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MemberPlanHistory")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MembershipHistory_Member");

                    b.HasOne("MM.ClientModels.PlanDetail", "MemberPlanDetail")
                        .WithMany("MemberPlanHistory")
                        .HasForeignKey("MemberPlanDetailId")
                        .HasConstraintName("FK_MemberPlanHistory_PlanDetail")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PlanMaster", "MemberPlanDetailNavigation")
                        .WithMany("MemberPlanHistory")
                        .HasForeignKey("MemberPlanDetailId")
                        .HasConstraintName("FK_MembershipHistory_PlanMaster")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Organization", "Organization")
                        .WithMany("MemberPlanHistory")
                        .HasForeignKey("OrganizationId")
                        .HasConstraintName("FK_MembershipHistory_Organization");
                });

            modelBuilder.Entity("MM.ClientModels.MemberQualificationXref", b =>
                {
                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("MemberQualificationXref")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_MemberQualificationXRef_Member")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Qualification", "Qualification")
                        .WithMany("MemberQualificationXref")
                        .HasForeignKey("QualificationId")
                        .HasConstraintName("FK_MemberQualificationXRef_Qualification");
                });

            modelBuilder.Entity("MM.ClientModels.MemberType", b =>
                {
                    b.HasOne("MM.ClientModels.MemberCategory", "MemberCategory")
                        .WithMany("MemberType")
                        .HasForeignKey("MemberCategoryId")
                        .HasConstraintName("FK_MemberType_MemberCategory")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.PaymentSetting", b =>
                {
                    b.HasOne("MM.ClientModels.Currency", "Currency")
                        .WithMany("PaymentSetting")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_PaymentSetting_Currency");
                });

            modelBuilder.Entity("MM.ClientModels.PaymentSettingAllowedCard", b =>
                {
                    b.HasOne("MM.ClientModels.PaymentCard", "PaymentCard")
                        .WithMany("PaymentSettingAllowedCard")
                        .HasForeignKey("PaymentCardId")
                        .HasConstraintName("FK_PaymentSettingAllowedCard_PaymentCard")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PaymentSetting", "PaymentSetting")
                        .WithMany("PaymentSettingAllowedCard")
                        .HasForeignKey("PaymentSettingId")
                        .HasConstraintName("FK_PaymentSettingAllowedCard_PaymentSetting")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.PlanCanChangeToXref", b =>
                {
                    b.HasOne("MM.ClientModels.PlanMaster", "FromPlanMaster")
                        .WithMany("PlanCanChangeToXrefFromPlanMaster")
                        .HasForeignKey("FromPlanMasterId")
                        .HasConstraintName("FK_MemberPlanCanChangeTo_PlanMaster")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PlanMaster", "ToPlanMaster")
                        .WithMany("PlanCanChangeToXrefToPlanMaster")
                        .HasForeignKey("ToPlanMasterId")
                        .HasConstraintName("FK_MemberPlanCanChangeTo_PlanMaster2")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.PlanDetail", b =>
                {
                    b.HasOne("MM.ClientModels.Currency", "Currency")
                        .WithMany("PlanDetail")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_PlanDetail_Currency")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PlanFrequency", "PlanFrequency")
                        .WithMany("PlanDetail")
                        .HasForeignKey("PlanFrequencyId")
                        .HasConstraintName("FK_PlanDetail_PlanFrequency")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PlanMaster", "PlanMaster")
                        .WithMany("PlanDetail")
                        .HasForeignKey("PlanMasterId")
                        .HasConstraintName("FK_PlanDetail_PlanMaster")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.PlanMaster", b =>
                {
                    b.HasOne("MM.ClientModels.MemberCategory", "MemberCategory")
                        .WithMany("PlanMaster")
                        .HasForeignKey("MemberCategoryId")
                        .HasConstraintName("FK_PlanMaster_MemberCategory")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PaymentSetting", "PaymentMethod")
                        .WithMany("PlanMaster")
                        .HasForeignKey("PaymentMethodId")
                        .HasConstraintName("FK_PlanMaster_PaymentSetting")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.PromotionDetail", b =>
                {
                    b.HasOne("MM.ClientModels.MemberLevel", "MemberLevel")
                        .WithMany("PromotionDetail")
                        .HasForeignKey("MemberLevelId")
                        .HasConstraintName("FK_PromotionDetail_MemberLevel");

                    b.HasOne("MM.ClientModels.MemberType", "MemberType")
                        .WithMany("PromotionDetail")
                        .HasForeignKey("MemberTypeId")
                        .HasConstraintName("FK_PromotionDetail_MemberType");

                    b.HasOne("MM.ClientModels.PromotionMaster", "PromotionMaster")
                        .WithMany("PromotionDetail")
                        .HasForeignKey("PromotionMasterId")
                        .HasConstraintName("FK_PromotionDetail_PromotionMaster")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.PromotionResponse", b =>
                {
                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("PromotionResponse")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_PromotionResponse_Member")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PromotionMaster", "PromotionMaster")
                        .WithMany("PromotionResponse")
                        .HasForeignKey("PromotionMasterId")
                        .HasConstraintName("FK_PromotionResponse_PromotionMaster")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PromotionResponseType", "PromotionResponseTypeNavigation")
                        .WithMany("PromotionResponse")
                        .HasForeignKey("PromotionResponseType")
                        .HasConstraintName("FK_PromotionResponse_PromotionResponseType")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.Refund", b =>
                {
                    b.HasOne("MM.ClientModels.Member", "Member")
                        .WithMany("Refund")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_Refund_Member")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.PaymentGateway", "PaymentGateway")
                        .WithMany("Refund")
                        .HasForeignKey("PaymentGatewayId")
                        .HasConstraintName("FK_Refund_PaymentGateway")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.RelatedTo", "RelatedTo")
                        .WithMany("Refund")
                        .HasForeignKey("RelatedToId")
                        .HasConstraintName("FK_Refund_RelatedTo");
                });

            modelBuilder.Entity("MM.ClientModels.RolePermissionXref", b =>
                {
                    b.HasOne("MM.ClientModels.Permission", "Permission")
                        .WithMany("RolePermissionXref")
                        .HasForeignKey("Permissionid")
                        .HasConstraintName("FK_RolePermissionXRef_Permission")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.Role", "Role")
                        .WithMany("RolePermissionXref")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_RolePermissionXRef_Role")
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.State", b =>
                {
                    b.HasOne("MM.ClientModels.Country", "Country")
                        .WithMany("State")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_State_Country")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MM.ClientModels.UserRoleXref", b =>
                {
                    b.HasOne("MM.ClientModels.Role", "Role")
                        .WithMany("UserRoleXref")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_UserRole_Role")
                        .IsRequired();

                    b.HasOne("MM.ClientModels.ClientUser", "User")
                        .WithMany("UserRoleXref")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserRole_User")
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
